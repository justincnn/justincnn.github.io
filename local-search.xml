<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Tips on Linux</title>
    <link href="/2024/02/04/Tips-on-Linux/"/>
    <url>/2024/02/04/Tips-on-Linux/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>记录一些常用或者不常用的Linux命令，给记忆上把锁。</p><h1 id="查看进程"><a href="#查看进程" class="headerlink" title="查看进程"></a>查看进程</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">top<br></code></pre></td></tr></table></figure><p>查询某个特定程序是否还在运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps aux | grep &lt;程序名称&gt;<br></code></pre></td></tr></table></figure><h1 id="运行命令并输出日志"><a href="#运行命令并输出日志" class="headerlink" title="运行命令并输出日志"></a>运行命令并输出日志</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">nohup</span> &lt;程序名称&gt; &amp;<br></code></pre></td></tr></table></figure><p>备注</p><ul><li><code>nohup</code>: 这是一个缩写，表示 “no hang up”。它用于运行命令，即使用户注销或终端关闭，命令也会继续运行。<code>nohup</code> 会将程序的标准输出和标准错误重定向到一个名为 <code>nohup.out</code> 的文件中，以防止在终端关闭时发生错误。</li><li>&lt;程序名称&gt;: 是要执行的可执行文件。</li><li><code>&amp;</code>: 在命令末尾使用 <code>&amp;</code> 符号，将命令放入后台运行，这样你可以继续使用终端输入其他命令，而不必等待程序执行完毕。</li><li>整个命令的目的是在后台运行 <code>&lt;程序名称&gt;</code> 程序，并使用 <code>nohup</code> 保证即使终端关闭，程序也能够持续运行。请注意，如果程序本身有日志输出，可以通过查看 <code>nohup.out</code> 文件来查看输出信息。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Trips</tag>
      
      <tag>Ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tips on Hexo</title>
    <link href="/2024/02/03/Tips-on-Hexo/"/>
    <url>/2024/02/03/Tips-on-Hexo/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>记录有些平时自己玩Hexo的资料，不定期增加和修改</p><h1 id="加密Hexo博客"><a href="#加密Hexo博客" class="headerlink" title="加密Hexo博客"></a>加密Hexo博客</h1><ul><li><p>安装hexo-blog-encrypt插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-blog-encrypt<br></code></pre></td></tr></table></figure></li><li><p>修改config(&#x2F;Hexo&#x2F;_config.yml)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">encrypt:</span><br><span class="hljs-string">enable:true</span><br></code></pre></td></tr></table></figure></li><li><p>启用插件</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Hexo加密功能</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-09-04 23:20:00</span>   <br><span class="hljs-attr">tags:</span> [<span class="hljs-string">学习笔记</span>,<span class="hljs-string">Hexo</span>]<br><span class="hljs-attr">categories:</span> <span class="hljs-string">Hexo</span>      <br><span class="hljs-attr">password:</span> <span class="hljs-string">smile</span>   <br><span class="hljs-attr">abstract:</span> <span class="hljs-string">Welcome</span> <span class="hljs-string">to</span> <span class="hljs-string">my</span> <span class="hljs-string">blog,</span> <span class="hljs-string">enter</span> <span class="hljs-string">password</span> <span class="hljs-string">to</span> <span class="hljs-string">read.</span> <br><span class="hljs-attr">message:</span> <span class="hljs-string">密码输入框上描述性内容</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><ul><li>感谢  <a href="https://blog.4t.pw/posts/4b225b1.html">给你的文章添加密码</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Blog</tag>
      
      <tag>Trips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何利用关键词在亚马逊下载客户清单</title>
    <link href="/2024/02/03/How-to-Download-Seller-List-on-Amazon-Using-Keywords/"/>
    <url>/2024/02/03/How-to-Download-Seller-List-on-Amazon-Using-Keywords/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="99736f1c52f3cfb3e7ed59fea54aa02748ecb7cc5184ae2690047ed052653889"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>How to</tag>
      
      <tag>VPS</tag>
      
      <tag>Amazon</tag>
      
      <tag>Script</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建hexo的Mac OS环境</title>
    <link href="/2024/01/12/Crafting-Your-Blog-Hexo-on-Mac-OS/"/>
    <url>/2024/01/12/Crafting-Your-Blog-Hexo-on-Mac-OS/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>大多数关于使用Hexo构建个人博客的指南都偏向于Windows环境，但在Mac OS下的教程却相对稀缺。令人惊喜的是，事实上在Mac OS环境下完成这一任务要比在Windows下更加轻松愉快。让我们一起探索如何在优雅的Mac OS平台上打造个人博客的奇妙之旅吧！</p><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><h2 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew:"></a>Homebrew:</h2><p>略</p><h2 id="Git-和-Node-js"><a href="#Git-和-Node-js" class="headerlink" title="Git 和 Node.js:"></a>Git 和 Node.js:</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install git<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install node<br></code></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm -v<br>node -v<br>git --version<br><br></code></pre></td></tr></table></figure><p>下面内容表示已经成功安装</p><p><img src="https://s2.loli.net/2024/01/12/ryWh6i1uS3Kzqs4.png" alt="截屏2024-01-12 22.08.57"></p><h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>等待安装完成后初始化博客：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init blog<br></code></pre></td></tr></table></figure><p>这个命令的作用是在当前目录（通常是你的主目录）下创建一个名为<code>blog</code>的文件夹。你可以随心更改<code>blog</code>为你喜欢的任何名字。在这个文件夹内，我们将初始化你的博客。在进行下一步之前，请确保你已经进入了这个文件夹，你可以使用命令：cd blog。</p><p>当初始化完成后，切换到<code>blog</code>文件夹，这样你就可以开始生成和预览你的博客啦！这是启动记录精彩故事的第一步！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> blog<br>hexo g<br>hexo s<br><br></code></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s<br></code></pre></td></tr></table></figure><p>命令后，通过浏览器访问<code>http://127.0.0.1:4000</code>可以预览你的博客，</p><h1 id="Github配置"><a href="#Github配置" class="headerlink" title="Github配置"></a>Github配置</h1><h2 id="添加SSH-Key"><a href="#添加SSH-Key" class="headerlink" title="添加SSH Key"></a>添加SSH Key</h2><h3 id="生成key"><a href="#生成key" class="headerlink" title="生成key"></a>生成key</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;username&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;example@example.com&quot;</span><br></code></pre></td></tr></table></figure><p><code>username</code> 是你的用户名，<code>example@example.com</code>是你 Github 的登录邮箱</p><p>通过终端命令生成 SSH Key：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;example@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>如果已经创建过会出现 <code>Overwrite (y/n)? n</code>提示可以输入 <code>n</code>，没有创建过的话三个回车就好，执行完成后会在<code>~/.ssh/id_rsa.pub</code>目录下生成 需要使用的 key，也就是公钥。</p><h3 id="添加到Github"><a href="#添加到Github" class="headerlink" title="添加到Github"></a>添加到Github</h3><p>到账户主文件夹下同时按<code>Command+Shift+.</code>显示隐藏文件，找到<code>.ssh</code>文件夹，打开id_rsa.pub，将里面的内容全部复制。</p><p>打开<a href="https://github.com/settings/keys">GitHub_Settings_keys</a> 页面，新建New SSH Key，Title随意填，Key就把刚才复制的内容全都粘贴上去。然后点Add SSH Key即可。</p><p><img src="https://s2.loli.net/2024/01/12/56YWfZbeLT14Rnv.png" alt="截屏2024-01-12 22.18.56"></p><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh git@github.com<br></code></pre></td></tr></table></figure><p>如果输出内容为,表示已经配置完成</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tex">You&#x27;ve successfully authenticated, <br></code></pre></td></tr></table></figure><h2 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h2><p>在Github上新建一个仓库，Repository Name 填<code>你的用户名.github.io</code>，仓库状态设为 Public，点击 Create Repository 创建新的网站仓库。</p><p>安装 Hexo 的扩展 <code>hexo-deployer-git</code>，注意一定要在你的博客文件夹下执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>编辑博客安装文件夹下的<code>_config.yml</code>文件，<strong>翻到底部</strong>，修改deploy部分为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:你的用户名/你的用户名.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br><br></code></pre></td></tr></table></figure><p>修改完成后按Command + S保存，此时就可以使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo d<br></code></pre></td></tr></table></figure><p>把存在本地的博客deploy到Github上。</p><h1 id="Blog发布"><a href="#Blog发布" class="headerlink" title="Blog发布"></a>Blog发布</h1><h2 id="博客生成"><a href="#博客生成" class="headerlink" title="博客生成"></a>博客生成</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;博客名字&quot;</span><br></code></pre></td></tr></table></figure><h2 id="博客内容编辑"><a href="#博客内容编辑" class="headerlink" title="博客内容编辑"></a>博客内容编辑</h2><p>略</p><h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g -d<br></code></pre></td></tr></table></figure><p>Option:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp;hexo g -d<br></code></pre></td></tr></table></figure><h1 id="域名绑定"><a href="#域名绑定" class="headerlink" title="域名绑定"></a>域名绑定</h1><p>首先自行申请一个域名，登陆到域名申请的后台，添加一条<code>CNAME</code>解析记录：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tex">你的用户名.github.io<br></code></pre></td></tr></table></figure><p>打开存放博客的Github仓库，进入Settings页面在pages选项里的Custom domain里填入你的域名，点击Save，勾选Enforce HTTPS，即可通过自定义域名访问你的博客。</p><p><img src="https://s2.loli.net/2024/01/12/ErdJBY5Qal8n3Gi.png" alt="截屏2024-01-12 22.29.48"></p><h1 id="Hexo-常用命令"><a href="#Hexo-常用命令" class="headerlink" title="Hexo 常用命令"></a>Hexo 常用命令</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#注意以下命令需要切换到blog文件夹(cd blog)执行</span><br><span class="hljs-string">hexo</span> <span class="hljs-string">n</span> <span class="hljs-string">&quot;文章名称&quot;</span>  <span class="hljs-string">=&gt;</span> <span class="hljs-string">hexo</span> <span class="hljs-string">new</span> <span class="hljs-string">&quot;文章名称&quot;</span>  <span class="hljs-comment">#这两个都是创建新文章，前者是简写模式，下同，new后面加一个draft可以生成草稿</span><br><span class="hljs-string">hexo</span> <span class="hljs-string">p</span>  <span class="hljs-string">=&gt;</span> <span class="hljs-string">hexo</span> <span class="hljs-string">publish</span>  <span class="hljs-comment">#发布草稿</span><br><span class="hljs-string">hexo</span> <span class="hljs-string">g</span>  <span class="hljs-string">=&gt;</span> <span class="hljs-string">hexo</span> <span class="hljs-string">generate</span>  <span class="hljs-comment">#生成</span><br><span class="hljs-string">hexo</span> <span class="hljs-string">s</span>  <span class="hljs-string">=&gt;</span> <span class="hljs-string">hexo</span> <span class="hljs-string">server</span>  <span class="hljs-comment">#启动服务预览</span><br><span class="hljs-string">hexo</span> <span class="hljs-string">d</span>  <span class="hljs-string">=&gt;</span> <span class="hljs-string">hexo</span> <span class="hljs-string">deploy</span>  <span class="hljs-comment">#部署</span><br><br><span class="hljs-string">hexo</span> <span class="hljs-string">server</span>   <span class="hljs-comment">#Hexo 会监视文件变动并自动更新，无须重启服务器。</span><br><span class="hljs-string">hexo</span> <span class="hljs-string">server</span> <span class="hljs-string">-s</span>   <span class="hljs-comment">#静态模式</span><br><span class="hljs-string">hexo</span> <span class="hljs-string">server</span> <span class="hljs-string">-p</span> <span class="hljs-number">5000</span>   <span class="hljs-comment">#更改端口</span><br><span class="hljs-string">hexo</span> <span class="hljs-string">server</span> <span class="hljs-string">-i</span> <span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.1</span>   <span class="hljs-comment">#自定义IP</span><br><span class="hljs-string">hexo</span> <span class="hljs-string">clean</span>   <span class="hljs-comment">#清除缓存，网页正常情况下可以忽略此条命令</span><br><br></code></pre></td></tr></table></figure><h1 id="参考和感谢"><a href="#参考和感谢" class="headerlink" title="参考和感谢"></a>参考和感谢</h1><p><a href="https://blog.l3zc.com/2022/05/mac%E7%8E%AF%E5%A2%83%E4%B8%8B%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/">Mac OS环境下使用Hexo搭建个人博客@L3ZCの试验田</a>]</p>]]></content>
    
    
    
    <tags>
      
      <tag>How to</tag>
      
      <tag>Github</tag>
      
      <tag>Mac</tag>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CF workers 搭建 vless免费节点</title>
    <link href="/2024/01/12/How-to-create-the-vless-on-cloudflare/"/>
    <url>/2024/01/12/How-to-create-the-vless-on-cloudflare/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>众生平等，一切尽在不言中</p><h1 id="Cloudflare-创建Workers"><a href="#Cloudflare-创建Workers" class="headerlink" title="Cloudflare 创建Workers"></a><a href="www.cloudflare.com">Cloudflare</a> 创建Workers</h1><h2 id="创建Application"><a href="#创建Application" class="headerlink" title="创建Application"></a>创建Application</h2><p><img src="https://s2.loli.net/2024/01/12/z7LmWvb8xClGHhN.png" alt="截屏2024-01-12 20.24.17"></p><h2 id="创建worker"><a href="#创建worker" class="headerlink" title="创建worker"></a>创建worker</h2><p><img src="https://s2.loli.net/2024/01/12/EN4D9dqtZx1vuK2.png" alt="截屏2024-01-12 20.24.31"></p><h2 id="执行Deploy"><a href="#执行Deploy" class="headerlink" title="执行Deploy"></a>执行Deploy</h2><p><img src="https://s2.loli.net/2024/01/12/LkUsvHEjOBg6uMh.png" alt="截屏2024-01-12 20.24.42"></p><h2 id="执行-Edit-Code"><a href="#执行-Edit-Code" class="headerlink" title="执行 Edit Code"></a>执行 Edit Code</h2><p><img src="https://s2.loli.net/2024/01/12/GrUNLm9Aoz5ThXM.png" alt="截屏2024-01-12 20.24.55"></p><h2 id="复制代码（github原码请点击此处）"><a href="#复制代码（github原码请点击此处）" class="headerlink" title="复制代码（github原码请点击此处）"></a>复制<a href="https://github.com/yonggekkk/Cloudflare-workers-pages-vless/blob/main/_worker.js">代码（github原码请点击此处）</a></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// &lt;!--GAMFC--&gt;version base on commit 43fad05dcdae3b723c53c226f8181fc5bd47223e, time is 2023-06-22 15:20:02 UTC&lt;!--GAMFC-END--&gt;.</span><br><span class="hljs-comment">// @ts-ignore</span><br><span class="hljs-keyword">import</span> &#123; connect &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;cloudflare:sockets&#x27;</span>;<br><br><span class="hljs-comment">// How to generate your own UUID:</span><br><span class="hljs-comment">// [Windows] Press &quot;Win + R&quot;, input cmd and run:  Powershell -NoExit -Command &quot;[guid]::NewGuid()&quot;</span><br><span class="hljs-keyword">let</span> userID = <span class="hljs-string">&#x27;**************&#x27;</span>;<br><br><span class="hljs-keyword">const</span> proxyIPs = [<span class="hljs-string">&quot;************&quot;</span>]; <span class="hljs-comment">// [&#x27;cdn-all.xn--b6gac.eu.org&#x27;, &#x27;cdn.xn--b6gac.eu.org&#x27;, &#x27;cdn-b100.xn--b6gac.eu.org&#x27;, &#x27;edgetunnel.anycast.eu.org&#x27;, &#x27;cdn.anycast.eu.org&#x27;];</span><br><span class="hljs-keyword">let</span> proxyIP = proxyIPs[<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * proxyIPs.<span class="hljs-property">length</span>)];<br><br><span class="hljs-keyword">let</span> dohURL = <span class="hljs-string">&#x27;https://sky.rethinkdns.com/1:-Pf_____9_8A_AMAIgE8kMABVDDmKOHTAKg=&#x27;</span>; <span class="hljs-comment">// https://cloudflare-dns.com/dns-query or https://dns.google/dns-query</span><br><br><span class="hljs-comment">// v2board api environment variables</span><br><span class="hljs-keyword">let</span> nodeId = <span class="hljs-string">&#x27;&#x27;</span>; <span class="hljs-comment">// 1</span><br><br><span class="hljs-keyword">let</span> apiToken = <span class="hljs-string">&#x27;&#x27;</span>; <span class="hljs-comment">//abcdefghijklmnopqrstuvwxyz123456</span><br><br><span class="hljs-keyword">let</span> apiHost = <span class="hljs-string">&#x27;&#x27;</span>; <span class="hljs-comment">// api.v2board.com</span><br><br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_">isValidUUID</span>(userID)) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&#x27;uuid is not valid&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).Request</span>&#125; <span class="hljs-variable">request</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">&#123;UUID: string, PROXYIP: string, DNS_RESOLVER_URL: string, NODE_ID: int, API_HOST: string, API_TOKEN: string</span>&#125;&#125; env</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).ExecutionContext</span>&#125; <span class="hljs-variable">ctx</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">Promise&lt;Response&gt;</span>&#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-params">request, env, ctx</span>) &#123;<br><span class="hljs-keyword">try</span> &#123;<br>userID = env.<span class="hljs-property">UUID</span> || userID;<br>proxyIP = env.<span class="hljs-property">PROXYIP</span> || proxyIP;<br>dohURL = env.<span class="hljs-property">DNS_RESOLVER_URL</span> || dohURL;<br>nodeId = env.<span class="hljs-property">NODE_ID</span> || nodeId;<br>apiToken = env.<span class="hljs-property">API_TOKEN</span> || apiToken;<br>apiHost = env.<span class="hljs-property">API_HOST</span> || apiHost;<br><span class="hljs-keyword">const</span> upgradeHeader = request.<span class="hljs-property">headers</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;Upgrade&#x27;</span>);<br><span class="hljs-keyword">if</span> (!upgradeHeader || upgradeHeader !== <span class="hljs-string">&#x27;websocket&#x27;</span>) &#123;<br><span class="hljs-keyword">const</span> url = <span class="hljs-keyword">new</span> <span class="hljs-title function_">URL</span>(request.<span class="hljs-property">url</span>);<br><span class="hljs-keyword">switch</span> (url.<span class="hljs-property">pathname</span>) &#123;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;/cf&#x27;</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(request.<span class="hljs-property">cf</span>, <span class="hljs-literal">null</span>, <span class="hljs-number">4</span>), &#123;<br><span class="hljs-attr">status</span>: <span class="hljs-number">200</span>,<br><span class="hljs-attr">headers</span>: &#123;<br><span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/json;charset=utf-8&quot;</span>,<br>&#125;,<br>&#125;);<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;/connect&#x27;</span>: <span class="hljs-comment">// for test connect to cf socket</span><br><span class="hljs-keyword">const</span> [hostname, port] = [<span class="hljs-string">&#x27;cloudflare.com&#x27;</span>, <span class="hljs-string">&#x27;80&#x27;</span>];<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Connecting to <span class="hljs-subst">$&#123;hostname&#125;</span>:<span class="hljs-subst">$&#123;port&#125;</span>...`</span>);<br><br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">const</span> socket = <span class="hljs-keyword">await</span> <span class="hljs-title function_">connect</span>(&#123;<br><span class="hljs-attr">hostname</span>: hostname,<br><span class="hljs-attr">port</span>: <span class="hljs-built_in">parseInt</span>(port, <span class="hljs-number">10</span>),<br>&#125;);<br><br><span class="hljs-keyword">const</span> writer = socket.<span class="hljs-property">writable</span>.<span class="hljs-title function_">getWriter</span>();<br><br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">await</span> writer.<span class="hljs-title function_">write</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">TextEncoder</span>().<span class="hljs-title function_">encode</span>(<span class="hljs-string">&#x27;GET / HTTP/1.1\r\nHost: &#x27;</span> + hostname + <span class="hljs-string">&#x27;\r\n\r\n&#x27;</span>));<br>&#125; <span class="hljs-keyword">catch</span> (writeError) &#123;<br>writer.<span class="hljs-title function_">releaseLock</span>();<br><span class="hljs-keyword">await</span> socket.<span class="hljs-title function_">close</span>();<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(writeError.<span class="hljs-property">message</span>, &#123; <span class="hljs-attr">status</span>: <span class="hljs-number">500</span> &#125;);<br>&#125;<br><br>writer.<span class="hljs-title function_">releaseLock</span>();<br><br><span class="hljs-keyword">const</span> reader = socket.<span class="hljs-property">readable</span>.<span class="hljs-title function_">getReader</span>();<br><span class="hljs-keyword">let</span> value;<br><br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> reader.<span class="hljs-title function_">read</span>();<br>value = result.<span class="hljs-property">value</span>;<br>&#125; <span class="hljs-keyword">catch</span> (readError) &#123;<br><span class="hljs-keyword">await</span> reader.<span class="hljs-title function_">releaseLock</span>();<br><span class="hljs-keyword">await</span> socket.<span class="hljs-title function_">close</span>();<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(readError.<span class="hljs-property">message</span>, &#123; <span class="hljs-attr">status</span>: <span class="hljs-number">500</span> &#125;);<br>&#125;<br><br><span class="hljs-keyword">await</span> reader.<span class="hljs-title function_">releaseLock</span>();<br><span class="hljs-keyword">await</span> socket.<span class="hljs-title function_">close</span>();<br><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">TextDecoder</span>().<span class="hljs-title function_">decode</span>(value), &#123; <span class="hljs-attr">status</span>: <span class="hljs-number">200</span> &#125;);<br>&#125; <span class="hljs-keyword">catch</span> (connectError) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(connectError.<span class="hljs-property">message</span>, &#123; <span class="hljs-attr">status</span>: <span class="hljs-number">500</span> &#125;);<br>&#125;<br><span class="hljs-keyword">case</span> <span class="hljs-string">`/<span class="hljs-subst">$&#123;userID&#125;</span>`</span>: &#123;<br><span class="hljs-keyword">const</span> vlessConfig = <span class="hljs-title function_">getVLESSConfig</span>(userID, request.<span class="hljs-property">headers</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;Host&#x27;</span>));<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;vlessConfig&#125;</span>`</span>, &#123;<br><span class="hljs-attr">status</span>: <span class="hljs-number">200</span>,<br><span class="hljs-attr">headers</span>: &#123;<br><span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;text/plain;charset=utf-8&quot;</span>,<br>&#125;<br>&#125;);<br>&#125;<br><span class="hljs-attr">default</span>:<br><span class="hljs-comment">// return new Response(&#x27;Not found&#x27;, &#123; status: 404 &#125;);</span><br><span class="hljs-comment">// For any other path, reverse proxy to &#x27;www.fmprc.gov.cn&#x27; and return the original response</span><br>url.<span class="hljs-property">hostname</span> = <span class="hljs-string">&#x27;www.bing.com&#x27;</span>;<br>url.<span class="hljs-property">protocol</span> = <span class="hljs-string">&#x27;https:&#x27;</span>;<br>request = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Request</span>(url, request);<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(request);<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-title function_">vlessOverWSHandler</span>(request);<br>&#125;<br>&#125; <span class="hljs-keyword">catch</span> (err) &#123;<br><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">Error</span>&#125; */</span> <span class="hljs-keyword">let</span> e = err;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(e.<span class="hljs-title function_">toString</span>());<br>&#125;<br>&#125;,<br>&#125;;<br><br><br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).Request</span>&#125; <span class="hljs-variable">request</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">vlessOverWSHandler</span>(<span class="hljs-params">request</span>) &#123;<br><br><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket[]</span>&#125; */</span><br><span class="hljs-comment">// @ts-ignore</span><br><span class="hljs-keyword">const</span> webSocketPair = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WebSocketPair</span>();<br><span class="hljs-keyword">const</span> [client, webSocket] = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">values</span>(webSocketPair);<br><br>webSocket.<span class="hljs-title function_">accept</span>();<br><br><span class="hljs-keyword">let</span> address = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">let</span> portWithRandomLog = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">log</span> = (<span class="hljs-params"><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">string</span>&#125; */</span> info, <span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">string | undefined</span>&#125; */</span> event</span>) =&gt; &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`[<span class="hljs-subst">$&#123;address&#125;</span>:<span class="hljs-subst">$&#123;portWithRandomLog&#125;</span>] <span class="hljs-subst">$&#123;info&#125;</span>`</span>, event || <span class="hljs-string">&#x27;&#x27;</span>);<br>&#125;;<br><span class="hljs-keyword">const</span> earlyDataHeader = request.<span class="hljs-property">headers</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;sec-websocket-protocol&#x27;</span>) || <span class="hljs-string">&#x27;&#x27;</span>;<br><br><span class="hljs-keyword">const</span> readableWebSocketStream = <span class="hljs-title function_">makeReadableWebSocketStream</span>(webSocket, earlyDataHeader, log);<br><br><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">&#123; value: import(&quot;@cloudflare/workers-types&quot;).Socket | null</span>&#125;&#125;*/</span><br><span class="hljs-keyword">let</span> remoteSocketWapper = &#123;<br><span class="hljs-attr">value</span>: <span class="hljs-literal">null</span>,<br>&#125;;<br><span class="hljs-keyword">let</span> udpStreamWrite = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">let</span> isDns = <span class="hljs-literal">false</span>;<br><br><span class="hljs-comment">// ws --&gt; remote</span><br>readableWebSocketStream.<span class="hljs-title function_">pipeTo</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">WritableStream</span>(&#123;<br><span class="hljs-keyword">async</span> <span class="hljs-title function_">write</span>(<span class="hljs-params">chunk, controller</span>) &#123;<br><span class="hljs-keyword">if</span> (isDns &amp;&amp; udpStreamWrite) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_">udpStreamWrite</span>(chunk);<br>&#125;<br><span class="hljs-keyword">if</span> (remoteSocketWapper.<span class="hljs-property">value</span>) &#123;<br><span class="hljs-keyword">const</span> writer = remoteSocketWapper.<span class="hljs-property">value</span>.<span class="hljs-property">writable</span>.<span class="hljs-title function_">getWriter</span>()<br><span class="hljs-keyword">await</span> writer.<span class="hljs-title function_">write</span>(chunk);<br>writer.<span class="hljs-title function_">releaseLock</span>();<br><span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-keyword">const</span> &#123;<br>hasError,<br>message,<br>portRemote = [<span class="hljs-number">443</span>, <span class="hljs-number">8443</span>, <span class="hljs-number">2053</span>, <span class="hljs-number">2083</span>, <span class="hljs-number">2087</span>, <span class="hljs-number">2096</span>, <span class="hljs-number">80</span>, <span class="hljs-number">8080</span>, <span class="hljs-number">8880</span>, <span class="hljs-number">2052</span>, <span class="hljs-number">2082</span>, <span class="hljs-number">2086</span>, <span class="hljs-number">2095</span>],<br>addressRemote = <span class="hljs-string">&#x27;&#x27;</span>,<br>rawDataIndex,<br>vlessVersion = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]),<br>isUDP,<br>&#125; = <span class="hljs-keyword">await</span> <span class="hljs-title function_">processVlessHeader</span>(chunk, userID);<br>address = addressRemote;<br>portWithRandomLog = <span class="hljs-string">`<span class="hljs-subst">$&#123;portRemote&#125;</span>--<span class="hljs-subst">$&#123;<span class="hljs-built_in">Math</span>.random()&#125;</span> <span class="hljs-subst">$&#123;isUDP ? <span class="hljs-string">&#x27;udp &#x27;</span> : <span class="hljs-string">&#x27;tcp &#x27;</span></span></span><br><span class="hljs-subst"><span class="hljs-string">&#125;</span> `</span>;<br><span class="hljs-keyword">if</span> (hasError) &#123;<br><span class="hljs-comment">// controller.error(message);</span><br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(message); <span class="hljs-comment">// cf seems has bug, controller.error will not end stream</span><br><span class="hljs-comment">// webSocket.close(1000, message);</span><br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-comment">// if UDP but port not DNS port, close it</span><br><span class="hljs-keyword">if</span> (isUDP) &#123;<br><span class="hljs-keyword">if</span> (portRemote === <span class="hljs-number">53</span>) &#123;<br>isDns = <span class="hljs-literal">true</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// controller.error(&#x27;UDP proxy only enable for DNS which is port 53&#x27;);</span><br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&#x27;UDP proxy only enable for DNS which is port 53&#x27;</span>); <span class="hljs-comment">// cf seems has bug, controller.error will not end stream</span><br><span class="hljs-keyword">return</span>;<br>&#125;<br>&#125;<br><span class="hljs-comment">// [&quot;version&quot;, &quot;附加信息长度 N&quot;]</span><br><span class="hljs-keyword">const</span> vlessResponseHeader = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([vlessVersion[<span class="hljs-number">0</span>], <span class="hljs-number">0</span>]);<br><span class="hljs-keyword">const</span> rawClientData = chunk.<span class="hljs-title function_">slice</span>(rawDataIndex);<br><br><span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> support udp here when cf runtime has udp support</span><br><span class="hljs-keyword">if</span> (isDns) &#123;<br><span class="hljs-keyword">const</span> &#123; write &#125; = <span class="hljs-keyword">await</span> <span class="hljs-title function_">handleUDPOutBound</span>(webSocket, vlessResponseHeader, log);<br>udpStreamWrite = write;<br><span class="hljs-title function_">udpStreamWrite</span>(rawClientData);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-title function_">handleTCPOutBound</span>(remoteSocketWapper, addressRemote, portRemote, rawClientData, webSocket, vlessResponseHeader, log);<br>&#125;,<br><span class="hljs-title function_">close</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`readableWebSocketStream is close`</span>);<br>&#125;,<br><span class="hljs-title function_">abort</span>(<span class="hljs-params">reason</span>) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`readableWebSocketStream is abort`</span>, <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(reason));<br>&#125;,<br>&#125;)).<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;readableWebSocketStream pipeTo error&#x27;</span>, err);<br>&#125;);<br><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(<span class="hljs-literal">null</span>, &#123;<br><span class="hljs-attr">status</span>: <span class="hljs-number">101</span>,<br><span class="hljs-comment">// @ts-ignore</span><br><span class="hljs-attr">webSocket</span>: client,<br>&#125;);<br>&#125;<br><br><span class="hljs-keyword">let</span> apiResponseCache = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">let</span> cacheTimeout = <span class="hljs-literal">null</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Fetches the API response from the server and caches it for future use.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">Promise&lt;object|null&gt;</span>&#125; A Promise that resolves to the API response object or null if there was an error.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">fetchApiResponse</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">const</span> requestOptions = &#123;<br><span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;GET&#x27;</span>,<br><span class="hljs-attr">redirect</span>: <span class="hljs-string">&#x27;follow&#x27;</span><br>&#125;;<br><br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-string">`https://<span class="hljs-subst">$&#123;apiHost&#125;</span>/api/v1/server/UniProxy/user?node_id=<span class="hljs-subst">$&#123;nodeId&#125;</span>&amp;node_type=v2ray&amp;token=<span class="hljs-subst">$&#123;apiToken&#125;</span>`</span>, requestOptions);<br><br><span class="hljs-keyword">if</span> (!response.<span class="hljs-property">ok</span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;Error: Network response was not ok&#x27;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125;<br><span class="hljs-keyword">const</span> apiResponse = <span class="hljs-keyword">await</span> response.<span class="hljs-title function_">json</span>();<br>apiResponseCache = apiResponse;<br><br><span class="hljs-comment">// Refresh the cache every 5 minutes (300000 milliseconds)</span><br><span class="hljs-keyword">if</span> (cacheTimeout) &#123;<br><span class="hljs-built_in">clearTimeout</span>(cacheTimeout);<br>&#125;<br>cacheTimeout = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">fetchApiResponse</span>(), <span class="hljs-number">300000</span>);<br><br><span class="hljs-keyword">return</span> apiResponse;<br>&#125; <span class="hljs-keyword">catch</span> (error) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;Error:&#x27;</span>, error);<br><span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Returns the cached API response if it exists, otherwise fetches the API response from the server and caches it for future use.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">Promise&lt;object|null&gt;</span>&#125; A Promise that resolves to the cached API response object or the fetched API response object, or null if there was an error.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">getApiResponse</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">if</span> (!apiResponseCache) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetchApiResponse</span>();<br>&#125;<br><span class="hljs-keyword">return</span> apiResponseCache;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Checks if a given UUID is present in the API response.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; targetUuid The UUID to search for.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">Promise&lt;boolean&gt;</span>&#125; A Promise that resolves to true if the UUID is present in the API response, false otherwise.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">checkUuidInApiResponse</span>(<span class="hljs-params">targetUuid</span>) &#123;<br><span class="hljs-comment">// Check if any of the environment variables are empty</span><br><span class="hljs-keyword">if</span> (!nodeId || !apiToken || !apiHost) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">const</span> apiResponse = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getApiResponse</span>();<br><span class="hljs-keyword">if</span> (!apiResponse) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><span class="hljs-keyword">const</span> isUuidInResponse = apiResponse.<span class="hljs-property">users</span>.<span class="hljs-title function_">some</span>(<span class="hljs-function"><span class="hljs-params">user</span> =&gt;</span> user.<span class="hljs-property">uuid</span> === targetUuid);<br><span class="hljs-keyword">return</span> isUuidInResponse;<br>&#125; <span class="hljs-keyword">catch</span> (error) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;Error:&#x27;</span>, error);<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// Usage example:</span><br><span class="hljs-comment">//   const targetUuid = &quot;65590e04-a94c-4c59-a1f2-571bce925aad&quot;;</span><br><span class="hljs-comment">//   checkUuidInApiResponse(targetUuid).then(result =&gt; console.log(result));</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Handles outbound TCP connections.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">any</span>&#125; remoteSocket </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; addressRemote The remote address to connect to.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">number</span>&#125; portRemote The remote port to connect to.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">Uint8Array</span>&#125; rawClientData The raw client data to write.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket</span>&#125; webSocket The WebSocket to pass the remote socket to.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">Uint8Array</span>&#125; vlessResponseHeader The VLESS response header.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">function</span>&#125; log The logging function.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">Promise&lt;void&gt;</span>&#125; The remote socket.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">handleTCPOutBound</span>(<span class="hljs-params">remoteSocket, addressRemote, portRemote, rawClientData, webSocket, vlessResponseHeader, log,</span>) &#123;<br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">connectAndWrite</span>(<span class="hljs-params">address, port</span>) &#123;<br><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).Socket</span>&#125; */</span><br><span class="hljs-keyword">const</span> tcpSocket = <span class="hljs-title function_">connect</span>(&#123;<br><span class="hljs-attr">hostname</span>: address,<br><span class="hljs-attr">port</span>: port,<br>&#125;);<br>remoteSocket.<span class="hljs-property">value</span> = tcpSocket;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`connected to <span class="hljs-subst">$&#123;address&#125;</span>:<span class="hljs-subst">$&#123;port&#125;</span>`</span>);<br><span class="hljs-keyword">const</span> writer = tcpSocket.<span class="hljs-property">writable</span>.<span class="hljs-title function_">getWriter</span>();<br><span class="hljs-keyword">await</span> writer.<span class="hljs-title function_">write</span>(rawClientData); <span class="hljs-comment">// first write, nomal is tls client hello</span><br>writer.<span class="hljs-title function_">releaseLock</span>();<br><span class="hljs-keyword">return</span> tcpSocket;<br>&#125;<br><br><span class="hljs-comment">// if the cf connect tcp socket have no incoming data, we retry to redirect ip</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">retry</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">const</span> tcpSocket = <span class="hljs-keyword">await</span> <span class="hljs-title function_">connectAndWrite</span>(proxyIP || addressRemote, portRemote)<br><span class="hljs-comment">// no matter retry success or not, close websocket</span><br>tcpSocket.<span class="hljs-property">closed</span>.<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">error</span> =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;retry tcpSocket closed error&#x27;</span>, error);<br>&#125;).<span class="hljs-title function_">finally</span>(<span class="hljs-function">() =&gt;</span> &#123;<br><span class="hljs-title function_">safeCloseWebSocket</span>(webSocket);<br>&#125;)<br><span class="hljs-title function_">remoteSocketToWS</span>(tcpSocket, webSocket, vlessResponseHeader, <span class="hljs-literal">null</span>, log);<br>&#125;<br><br><span class="hljs-keyword">const</span> tcpSocket = <span class="hljs-keyword">await</span> <span class="hljs-title function_">connectAndWrite</span>(addressRemote, portRemote);<br><br><span class="hljs-comment">// when remoteSocket is ready, pass to websocket</span><br><span class="hljs-comment">// remote--&gt; ws</span><br><span class="hljs-title function_">remoteSocketToWS</span>(tcpSocket, webSocket, vlessResponseHeader, retry, log);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket</span>&#125; <span class="hljs-variable">webSocketServer</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; earlyDataHeader for ws 0rtt</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">(info: string)=&gt; void</span>&#125; log for ws 0rtt</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">makeReadableWebSocketStream</span>(<span class="hljs-params">webSocketServer, earlyDataHeader, log</span>) &#123;<br><span class="hljs-keyword">let</span> readableStreamCancel = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">const</span> stream = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReadableStream</span>(&#123;<br><span class="hljs-title function_">start</span>(<span class="hljs-params">controller</span>) &#123;<br>webSocketServer.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br><span class="hljs-keyword">if</span> (readableStreamCancel) &#123;<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">const</span> message = event.<span class="hljs-property">data</span>;<br>controller.<span class="hljs-title function_">enqueue</span>(message);<br>&#125;);<br><br><span class="hljs-comment">// The event means that the client closed the client -&gt; server stream.</span><br><span class="hljs-comment">// However, the server -&gt; client stream is still open until you call close() on the server side.</span><br><span class="hljs-comment">// The WebSocket protocol says that a separate close message must be sent in each direction to fully close the socket.</span><br>webSocketServer.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;close&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br><span class="hljs-comment">// client send close, need close server</span><br><span class="hljs-comment">// if stream is cancel, skip controller.close</span><br><span class="hljs-title function_">safeCloseWebSocket</span>(webSocketServer);<br><span class="hljs-keyword">if</span> (readableStreamCancel) &#123;<br><span class="hljs-keyword">return</span>;<br>&#125;<br>controller.<span class="hljs-title function_">close</span>();<br>&#125;<br>);<br>webSocketServer.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;webSocketServer has error&#x27;</span>);<br>controller.<span class="hljs-title function_">error</span>(err);<br>&#125;<br>);<br><span class="hljs-comment">// for ws 0rtt</span><br><span class="hljs-keyword">const</span> &#123; earlyData, error &#125; = <span class="hljs-title function_">base64ToArrayBuffer</span>(earlyDataHeader);<br><span class="hljs-keyword">if</span> (error) &#123;<br>controller.<span class="hljs-title function_">error</span>(error);<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (earlyData) &#123;<br>controller.<span class="hljs-title function_">enqueue</span>(earlyData);<br>&#125;<br>&#125;,<br><br><span class="hljs-title function_">pull</span>(<span class="hljs-params">controller</span>) &#123;<br><span class="hljs-comment">// if ws can stop read if stream is full, we can implement backpressure</span><br><span class="hljs-comment">// https://streams.spec.whatwg.org/#example-rs-push-backpressure</span><br>&#125;,<br><span class="hljs-title function_">cancel</span>(<span class="hljs-params">reason</span>) &#123;<br><span class="hljs-comment">// 1. pipe WritableStream has error, this cancel will called, so ws handle server close into here</span><br><span class="hljs-comment">// 2. if readableStream is cancel, all controller.close/enqueue need skip,</span><br><span class="hljs-comment">// 3. but from testing controller.error still work even if readableStream is cancel</span><br><span class="hljs-keyword">if</span> (readableStreamCancel) &#123;<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`ReadableStream was canceled, due to <span class="hljs-subst">$&#123;reason&#125;</span>`</span>)<br>readableStreamCancel = <span class="hljs-literal">true</span>;<br><span class="hljs-title function_">safeCloseWebSocket</span>(webSocketServer);<br>&#125;<br>&#125;);<br><br><span class="hljs-keyword">return</span> stream;<br><br>&#125;<br><br><span class="hljs-comment">// https://xtls.github.io/development/protocols/vless.html</span><br><span class="hljs-comment">// https://github.com/zizifn/excalidraw-backup/blob/main/v2ray-protocol.excalidraw</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type"> ArrayBuffer</span>&#125; vlessBuffer </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; userID </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">processVlessHeader</span>(<span class="hljs-params"></span><br><span class="hljs-params">vlessBuffer,</span><br><span class="hljs-params">userID</span><br><span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">if</span> (vlessBuffer.<span class="hljs-property">byteLength</span> &lt; <span class="hljs-number">24</span>) &#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;invalid data&#x27;</span>,<br>&#125;;<br>&#125;<br><span class="hljs-keyword">const</span> version = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(vlessBuffer.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>));<br><span class="hljs-keyword">let</span> isValidUser = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">let</span> isUDP = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">const</span> slicedBuffer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(vlessBuffer.<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>, <span class="hljs-number">17</span>));<br><span class="hljs-keyword">const</span> slicedBufferString = <span class="hljs-title function_">stringify</span>(slicedBuffer);<br><br><span class="hljs-keyword">const</span> uuids = userID.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;,&#x27;</span>) ? userID.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;,&quot;</span>) : [userID];<br><br><span class="hljs-keyword">const</span> checkUuidInApi = <span class="hljs-keyword">await</span> <span class="hljs-title function_">checkUuidInApiResponse</span>(slicedBufferString);<br>isValidUser = uuids.<span class="hljs-title function_">some</span>(<span class="hljs-function"><span class="hljs-params">userUuid</span> =&gt;</span> checkUuidInApi || slicedBufferString === userUuid.<span class="hljs-title function_">trim</span>());<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`checkUuidInApi: <span class="hljs-subst">$&#123;<span class="hljs-keyword">await</span> checkUuidInApiResponse(slicedBufferString)&#125;</span>, userID: <span class="hljs-subst">$&#123;slicedBufferString&#125;</span>`</span>);<br><br><span class="hljs-keyword">if</span> (!isValidUser) &#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;invalid user&#x27;</span>,<br>&#125;;<br>&#125;<br><br><span class="hljs-keyword">const</span> optLength = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(vlessBuffer.<span class="hljs-title function_">slice</span>(<span class="hljs-number">17</span>, <span class="hljs-number">18</span>))[<span class="hljs-number">0</span>];<br><span class="hljs-comment">//skip opt for now</span><br><br><span class="hljs-keyword">const</span> command = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(<span class="hljs-number">18</span> + optLength, <span class="hljs-number">18</span> + optLength + <span class="hljs-number">1</span>)<br>)[<span class="hljs-number">0</span>];<br><br><span class="hljs-comment">// 0x01 TCP</span><br><span class="hljs-comment">// 0x02 UDP</span><br><span class="hljs-comment">// 0x03 MUX</span><br><span class="hljs-keyword">if</span> (command === <span class="hljs-number">1</span>) &#123;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (command === <span class="hljs-number">2</span>) &#123;<br>isUDP = <span class="hljs-literal">true</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">message</span>: <span class="hljs-string">`command <span class="hljs-subst">$&#123;command&#125;</span> is not support, command 01-tcp,02-udp,03-mux`</span>,<br>&#125;;<br>&#125;<br><span class="hljs-keyword">const</span> portIndex = <span class="hljs-number">18</span> + optLength + <span class="hljs-number">1</span>;<br><span class="hljs-keyword">const</span> portBuffer = vlessBuffer.<span class="hljs-title function_">slice</span>(portIndex, portIndex + <span class="hljs-number">2</span>);<br><span class="hljs-comment">// port is big-Endian in raw data etc 80 == 0x005d</span><br><span class="hljs-keyword">const</span> portRemote = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataView</span>(portBuffer).<span class="hljs-title function_">getUint16</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-keyword">let</span> addressIndex = portIndex + <span class="hljs-number">2</span>;<br><span class="hljs-keyword">const</span> addressBuffer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(addressIndex, addressIndex + <span class="hljs-number">1</span>)<br>);<br><br><span class="hljs-comment">// 1--&gt; ipv4  addressLength =4</span><br><span class="hljs-comment">// 2--&gt; domain name addressLength=addressBuffer[1]</span><br><span class="hljs-comment">// 3--&gt; ipv6  addressLength =16</span><br><span class="hljs-keyword">const</span> addressType = addressBuffer[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">let</span> addressLength = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">let</span> addressValueIndex = addressIndex + <span class="hljs-number">1</span>;<br><span class="hljs-keyword">let</span> addressValue = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">switch</span> (addressType) &#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>addressLength = <span class="hljs-number">4</span>;<br>addressValue = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(addressValueIndex, addressValueIndex + addressLength)<br>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;.&#x27;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>addressLength = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(addressValueIndex, addressValueIndex + <span class="hljs-number">1</span>)<br>)[<span class="hljs-number">0</span>];<br>addressValueIndex += <span class="hljs-number">1</span>;<br>addressValue = <span class="hljs-keyword">new</span> <span class="hljs-title class_">TextDecoder</span>().<span class="hljs-title function_">decode</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(addressValueIndex, addressValueIndex + addressLength)<br>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>addressLength = <span class="hljs-number">16</span>;<br><span class="hljs-keyword">const</span> dataView = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataView</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(addressValueIndex, addressValueIndex + addressLength)<br>);<br><span class="hljs-comment">// 2001:0db8:85a3:0000:0000:8a2e:0370:7334</span><br><span class="hljs-keyword">const</span> ipv6 = [];<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++) &#123;<br>ipv6.<span class="hljs-title function_">push</span>(dataView.<span class="hljs-title function_">getUint16</span>(i * <span class="hljs-number">2</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>&#125;<br>addressValue = ipv6.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;:&#x27;</span>);<br><span class="hljs-comment">// seems no need add [] for ipv6</span><br><span class="hljs-keyword">break</span>;<br><span class="hljs-attr">default</span>:<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">message</span>: <span class="hljs-string">`invild  addressType is <span class="hljs-subst">$&#123;addressType&#125;</span>`</span>,<br>&#125;;<br>&#125;<br><span class="hljs-keyword">if</span> (!addressValue) &#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">message</span>: <span class="hljs-string">`addressValue is empty, addressType is <span class="hljs-subst">$&#123;addressType&#125;</span>`</span>,<br>&#125;;<br>&#125;<br><br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-attr">addressRemote</span>: addressValue,<br>addressType,<br>portRemote,<br><span class="hljs-attr">rawDataIndex</span>: addressValueIndex + addressLength,<br><span class="hljs-attr">vlessVersion</span>: version,<br>isUDP,<br>&#125;;<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).Socket</span>&#125; remoteSocket </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket</span>&#125; webSocket </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">ArrayBuffer</span>&#125; vlessResponseHeader </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">(() =&gt; Promise&lt;void&gt;) | null</span>&#125; <span class="hljs-variable">retry</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">*</span>&#125; log </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">remoteSocketToWS</span>(<span class="hljs-params">remoteSocket, webSocket, vlessResponseHeader, retry, log</span>) &#123;<br><span class="hljs-comment">// remote--&gt; ws</span><br><span class="hljs-keyword">let</span> remoteChunkCount = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">let</span> chunks = [];<br><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">ArrayBuffer | null</span>&#125; */</span><br><span class="hljs-keyword">let</span> vlessHeader = vlessResponseHeader;<br><span class="hljs-keyword">let</span> hasIncomingData = <span class="hljs-literal">false</span>; <span class="hljs-comment">// check if remoteSocket has incoming data</span><br><span class="hljs-keyword">await</span> remoteSocket.<span class="hljs-property">readable</span><br>.<span class="hljs-title function_">pipeTo</span>(<br><span class="hljs-keyword">new</span> <span class="hljs-title class_">WritableStream</span>(&#123;<br><span class="hljs-title function_">start</span>(<span class="hljs-params"></span>) &#123;<br>&#125;,<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">Uint8Array</span>&#125; chunk </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">*</span>&#125; controller </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-title function_">write</span>(<span class="hljs-params">chunk, controller</span>) &#123;<br>hasIncomingData = <span class="hljs-literal">true</span>;<br><span class="hljs-comment">// remoteChunkCount++;</span><br><span class="hljs-keyword">if</span> (webSocket.<span class="hljs-property">readyState</span> !== <span class="hljs-variable constant_">WS_READY_STATE_OPEN</span>) &#123;<br>controller.<span class="hljs-title function_">error</span>(<br><span class="hljs-string">&#x27;webSocket.readyState is not open, maybe close&#x27;</span><br>);<br>&#125;<br><span class="hljs-keyword">if</span> (vlessHeader) &#123;<br>webSocket.<span class="hljs-title function_">send</span>(<span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([vlessHeader, chunk]).<span class="hljs-title function_">arrayBuffer</span>());<br>vlessHeader = <span class="hljs-literal">null</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// seems no need rate limit this, CF seems fix this??..</span><br><span class="hljs-comment">// if (remoteChunkCount &gt; 20000) &#123;</span><br><span class="hljs-comment">// // cf one package is 4096 byte(4kb),  4096 * 20000 = 80M</span><br><span class="hljs-comment">// await delay(1);</span><br><span class="hljs-comment">// &#125;</span><br>webSocket.<span class="hljs-title function_">send</span>(chunk);<br>&#125;<br>&#125;,<br><span class="hljs-title function_">close</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`remoteConnection!.readable is close with hasIncomingData is <span class="hljs-subst">$&#123;hasIncomingData&#125;</span>`</span>);<br><span class="hljs-comment">// safeCloseWebSocket(webSocket); // no need server close websocket frist for some case will casue HTTP ERR_CONTENT_LENGTH_MISMATCH issue, client will send close event anyway.</span><br>&#125;,<br><span class="hljs-title function_">abort</span>(<span class="hljs-params">reason</span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">`remoteConnection!.readable abort`</span>, reason);<br>&#125;,<br>&#125;)<br>)<br>.<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<br><span class="hljs-string">`remoteSocketToWS has exception `</span>,<br>error.<span class="hljs-property">stack</span> || error<br>);<br><span class="hljs-title function_">safeCloseWebSocket</span>(webSocket);<br>&#125;);<br><br><span class="hljs-comment">// seems is cf connect socket have error,</span><br><span class="hljs-comment">// 1. Socket.closed will have error</span><br><span class="hljs-comment">// 2. Socket.readable will be close without any data coming</span><br><span class="hljs-keyword">if</span> (hasIncomingData === <span class="hljs-literal">false</span> &amp;&amp; retry) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`retry`</span>)<br><span class="hljs-title function_">retry</span>();<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; base64Str </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">base64ToArrayBuffer</span>(<span class="hljs-params">base64Str</span>) &#123;<br><span class="hljs-keyword">if</span> (!base64Str) &#123;<br><span class="hljs-keyword">return</span> &#123; <span class="hljs-attr">error</span>: <span class="hljs-literal">null</span> &#125;;<br>&#125;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// go use modified Base64 for URL rfc4648 which js atob not support</span><br>base64Str = base64Str.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/-/g</span>, <span class="hljs-string">&#x27;+&#x27;</span>).<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/_/g</span>, <span class="hljs-string">&#x27;/&#x27;</span>);<br><span class="hljs-keyword">const</span> decode = <span class="hljs-title function_">atob</span>(base64Str);<br><span class="hljs-keyword">const</span> arryBuffer = <span class="hljs-title class_">Uint8Array</span>.<span class="hljs-title function_">from</span>(decode, <span class="hljs-function">(<span class="hljs-params">c</span>) =&gt;</span> c.<span class="hljs-title function_">charCodeAt</span>(<span class="hljs-number">0</span>));<br><span class="hljs-keyword">return</span> &#123; <span class="hljs-attr">earlyData</span>: arryBuffer.<span class="hljs-property">buffer</span>, <span class="hljs-attr">error</span>: <span class="hljs-literal">null</span> &#125;;<br>&#125; <span class="hljs-keyword">catch</span> (error) &#123;<br><span class="hljs-keyword">return</span> &#123; error &#125;;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * This is not real UUID validation</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; uuid </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isValidUUID</span>(<span class="hljs-params">uuid</span>) &#123;<br><span class="hljs-keyword">const</span> uuidRegex = <span class="hljs-regexp">/^[0-9a-f]&#123;8&#125;-[0-9a-f]&#123;4&#125;-[4][0-9a-f]&#123;3&#125;-[89ab][0-9a-f]&#123;3&#125;-[0-9a-f]&#123;12&#125;$/i</span>;<br><span class="hljs-keyword">return</span> uuidRegex.<span class="hljs-title function_">test</span>(uuid);<br>&#125;<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">WS_READY_STATE_OPEN</span> = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">WS_READY_STATE_CLOSING</span> = <span class="hljs-number">2</span>;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Normally, WebSocket will not has exceptions when close.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket</span>&#125; <span class="hljs-variable">socket</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">safeCloseWebSocket</span>(<span class="hljs-params">socket</span>) &#123;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">if</span> (socket.<span class="hljs-property">readyState</span> === <span class="hljs-variable constant_">WS_READY_STATE_OPEN</span> || socket.<span class="hljs-property">readyState</span> === <span class="hljs-variable constant_">WS_READY_STATE_CLOSING</span>) &#123;<br>socket.<span class="hljs-title function_">close</span>();<br>&#125;<br>&#125; <span class="hljs-keyword">catch</span> (error) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;safeCloseWebSocket error&#x27;</span>, error);<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> byteToHex = [];<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">256</span>; ++i) &#123;<br>byteToHex.<span class="hljs-title function_">push</span>((i + <span class="hljs-number">256</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>).<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>));<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">unsafeStringify</span>(<span class="hljs-params">arr, offset = <span class="hljs-number">0</span></span>) &#123;<br><span class="hljs-keyword">return</span> (byteToHex[arr[offset + <span class="hljs-number">0</span>]] + byteToHex[arr[offset + <span class="hljs-number">1</span>]] + byteToHex[arr[offset + <span class="hljs-number">2</span>]] + byteToHex[arr[offset + <span class="hljs-number">3</span>]] + <span class="hljs-string">&quot;-&quot;</span> + byteToHex[arr[offset + <span class="hljs-number">4</span>]] + byteToHex[arr[offset + <span class="hljs-number">5</span>]] + <span class="hljs-string">&quot;-&quot;</span> + byteToHex[arr[offset + <span class="hljs-number">6</span>]] + byteToHex[arr[offset + <span class="hljs-number">7</span>]] + <span class="hljs-string">&quot;-&quot;</span> + byteToHex[arr[offset + <span class="hljs-number">8</span>]] + byteToHex[arr[offset + <span class="hljs-number">9</span>]] + <span class="hljs-string">&quot;-&quot;</span> + byteToHex[arr[offset + <span class="hljs-number">10</span>]] + byteToHex[arr[offset + <span class="hljs-number">11</span>]] + byteToHex[arr[offset + <span class="hljs-number">12</span>]] + byteToHex[arr[offset + <span class="hljs-number">13</span>]] + byteToHex[arr[offset + <span class="hljs-number">14</span>]] + byteToHex[arr[offset + <span class="hljs-number">15</span>]]).<span class="hljs-title function_">toLowerCase</span>();<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">stringify</span>(<span class="hljs-params">arr, offset = <span class="hljs-number">0</span></span>) &#123;<br><span class="hljs-keyword">const</span> uuid = <span class="hljs-title function_">unsafeStringify</span>(arr, offset);<br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_">isValidUUID</span>(uuid)) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">&quot;Stringified UUID is invalid&quot;</span>);<br>&#125;<br><span class="hljs-keyword">return</span> uuid;<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket</span>&#125; webSocket </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">ArrayBuffer</span>&#125; vlessResponseHeader </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">(string)=&gt; void</span>&#125; log </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">handleUDPOutBound</span>(<span class="hljs-params">webSocket, vlessResponseHeader, log</span>) &#123;<br><br><span class="hljs-keyword">let</span> isVlessHeaderSent = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">const</span> transformStream = <span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformStream</span>(&#123;<br><span class="hljs-title function_">start</span>(<span class="hljs-params">controller</span>) &#123;<br><br>&#125;,<br><span class="hljs-title function_">transform</span>(<span class="hljs-params">chunk, controller</span>) &#123;<br><span class="hljs-comment">// udp message 2 byte is the the length of udp data</span><br><span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> this should have bug, beacsue maybe udp chunk can be in two websocket message</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span>; index &lt; chunk.<span class="hljs-property">byteLength</span>;) &#123;<br><span class="hljs-keyword">const</span> lengthBuffer = chunk.<span class="hljs-title function_">slice</span>(index, index + <span class="hljs-number">2</span>);<br><span class="hljs-keyword">const</span> udpPakcetLength = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataView</span>(lengthBuffer).<span class="hljs-title function_">getUint16</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">const</span> udpData = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<br>chunk.<span class="hljs-title function_">slice</span>(index + <span class="hljs-number">2</span>, index + <span class="hljs-number">2</span> + udpPakcetLength)<br>);<br>index = index + <span class="hljs-number">2</span> + udpPakcetLength;<br>controller.<span class="hljs-title function_">enqueue</span>(udpData);<br>&#125;<br>&#125;,<br><span class="hljs-title function_">flush</span>(<span class="hljs-params">controller</span>) &#123;<br>&#125;<br>&#125;);<br><br><span class="hljs-comment">// only handle dns udp for now</span><br>transformStream.<span class="hljs-property">readable</span>.<span class="hljs-title function_">pipeTo</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">WritableStream</span>(&#123;<br><span class="hljs-keyword">async</span> <span class="hljs-title function_">write</span>(<span class="hljs-params">chunk</span>) &#123;<br><span class="hljs-keyword">const</span> resp = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(dohURL, <span class="hljs-comment">// dns server url</span><br>&#123;<br><span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br><span class="hljs-attr">headers</span>: &#123;<br><span class="hljs-string">&#x27;content-type&#x27;</span>: <span class="hljs-string">&#x27;application/dns-message&#x27;</span>,<br>&#125;,<br><span class="hljs-attr">body</span>: chunk,<br>&#125;)<br><span class="hljs-keyword">const</span> dnsQueryResult = <span class="hljs-keyword">await</span> resp.<span class="hljs-title function_">arrayBuffer</span>();<br><span class="hljs-keyword">const</span> udpSize = dnsQueryResult.<span class="hljs-property">byteLength</span>;<br><span class="hljs-comment">// console.log([...new Uint8Array(dnsQueryResult)].map((x) =&gt; x.toString(16)));</span><br><span class="hljs-keyword">const</span> udpSizeBuffer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([(udpSize &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span>, udpSize &amp; <span class="hljs-number">0xff</span>]);<br><span class="hljs-keyword">if</span> (webSocket.<span class="hljs-property">readyState</span> === <span class="hljs-variable constant_">WS_READY_STATE_OPEN</span>) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`doh success and dns message length is <span class="hljs-subst">$&#123;udpSize&#125;</span>`</span>);<br><span class="hljs-keyword">if</span> (isVlessHeaderSent) &#123;<br>webSocket.<span class="hljs-title function_">send</span>(<span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([udpSizeBuffer, dnsQueryResult]).<span class="hljs-title function_">arrayBuffer</span>());<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>webSocket.<span class="hljs-title function_">send</span>(<span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([vlessResponseHeader, udpSizeBuffer, dnsQueryResult]).<span class="hljs-title function_">arrayBuffer</span>());<br>isVlessHeaderSent = <span class="hljs-literal">true</span>;<br>&#125;<br>&#125;<br>&#125;<br>&#125;)).<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;dns udp has error&#x27;</span> + error)<br>&#125;);<br><br><span class="hljs-keyword">const</span> writer = transformStream.<span class="hljs-property">writable</span>.<span class="hljs-title function_">getWriter</span>();<br><br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">Uint8Array</span>&#125; chunk </span><br><span class="hljs-comment"> */</span><br><span class="hljs-title function_">write</span>(<span class="hljs-params">chunk</span>) &#123;<br>writer.<span class="hljs-title function_">write</span>(chunk);<br>&#125;<br>&#125;;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; userID </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string | null</span>&#125; <span class="hljs-variable">hostName</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">string</span>&#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getVLESSConfig</span>(<span class="hljs-params">userID, hostName</span>) &#123;<br>  <span class="hljs-keyword">const</span> wvlessws = <span class="hljs-string">`vless://<span class="hljs-subst">$&#123;userID&#125;</span>@www.visa.com:8880?encryption=none&amp;security=none&amp;type=ws&amp;host=<span class="hljs-subst">$&#123;hostName&#125;</span>&amp;path=%2F%3Fed%3D2048#<span class="hljs-subst">$&#123;hostName&#125;</span>`</span>;<br>  <span class="hljs-keyword">const</span> pvlesswstls = <span class="hljs-string">`vless://<span class="hljs-subst">$&#123;userID&#125;</span>@www.visa.com:8443?encryption=none&amp;security=tls&amp;type=ws&amp;host=<span class="hljs-subst">$&#123;hostName&#125;</span>&amp;sni=<span class="hljs-subst">$&#123;hostName&#125;</span>&amp;fp=random&amp;path=%2F%3Fed%3D2048#<span class="hljs-subst">$&#123;hostName&#125;</span>`</span>;<br>  <br>  <span class="hljs-keyword">if</span> (hostName.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;pages.dev&#x27;</span>)) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">`</span><br><span class="hljs-string">==========================配置详解==============================</span><br><span class="hljs-string"></span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">CF-pages-vless+ws+tls节点，分享链接如下：</span><br><span class="hljs-string"></span><br><span class="hljs-string"><span class="hljs-subst">$&#123;pvlesswstls&#125;</span></span><br><span class="hljs-string"></span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">注意：如果 <span class="hljs-subst">$&#123;hostName&#125;</span> 在本地网络打不开（中国移动用户注意）</span><br><span class="hljs-string">       客户端选项的伪装域名(host)必须改为你在CF解析完成的自定义域名</span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">客户端必要文明参数如下：</span><br><span class="hljs-string">客户端地址(address)：自定义的域名 或者 优选域名 或者 优选IP（反代IP必须与反代端口对应）</span><br><span class="hljs-string">端口(port)：6个https端口可任意选择(443、8443、2053、2083、2087、2096)</span><br><span class="hljs-string">用户ID(uuid)：<span class="hljs-subst">$&#123;userID&#125;</span></span><br><span class="hljs-string">传输协议(network)：ws 或者 websocket</span><br><span class="hljs-string">伪装域名(host)：<span class="hljs-subst">$&#123;hostName&#125;</span></span><br><span class="hljs-string">路径(path)：/?ed=2048</span><br><span class="hljs-string">传输安全(TLS)：开启</span><br><span class="hljs-string">跳过证书验证(allowlnsecure)：false</span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">`</span>;<br><br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (hostName.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;workers.dev&#x27;</span>))  &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">`</span><br><span class="hljs-string">==========================配置详解==============================</span><br><span class="hljs-string"></span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">一、CF-workers-vless+ws节点，分享链接如下：</span><br><span class="hljs-string"></span><br><span class="hljs-string"><span class="hljs-subst">$&#123;wvlessws&#125;</span></span><br><span class="hljs-string"></span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">注意：当前节点无需使用CF解析完成的域名，客户端选项的TLS选项必须关闭</span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">客户端必要文明参数如下：</span><br><span class="hljs-string">客户端地址(address)：自定义的域名 或者 优选域名 或者 优选IP（反代IP必须与反代端口对应）</span><br><span class="hljs-string">端口(port)：7个http端口可任意选择(80、8080、8880、2052、2082、2086、2095)</span><br><span class="hljs-string">用户ID(uuid)：<span class="hljs-subst">$&#123;userID&#125;</span></span><br><span class="hljs-string">传输协议(network)：ws 或者 websocket</span><br><span class="hljs-string">伪装域名(host)：<span class="hljs-subst">$&#123;hostName&#125;</span></span><br><span class="hljs-string">路径(path)：/?ed=2048</span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string"></span><br><span class="hljs-string">查看CF-workers-vless+ws+tls节点配置信息，请在浏览器地址栏输入：你设置的自定义域名/你设置的UUID</span><br><span class="hljs-string">防止小白过多的操作失误，必须设置自定义域名后才能使用Workers方式的TLS模式，否则，建议只使用vless+ws节点即可</span><br><span class="hljs-string">提示：使用pages方式部署，联通、电信用户大概率可以直接使用TLS模式，无需设置自定义域名</span><br><span class="hljs-string">pages方式部署可参考此视频教程：https://youtu.be/McdRoLZeTqg</span><br><span class="hljs-string"></span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">`</span>;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">`</span><br><span class="hljs-string">==========================配置详解==============================</span><br><span class="hljs-string"></span><br><span class="hljs-string">=====使用自定义域名查看配置，请确认使用的是workers还是pages=====</span><br><span class="hljs-string"></span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">一、CF-workers-vless+ws节点，分享链接如下：</span><br><span class="hljs-string"></span><br><span class="hljs-string"><span class="hljs-subst">$&#123;wvlessws&#125;</span></span><br><span class="hljs-string"></span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">注意：当前节点无需使用CF解析完成的域名，客户端选项的TLS选项必须关闭</span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">客户端必要文明参数如下：</span><br><span class="hljs-string">客户端地址(address)：自定义的域名 或者 优选域名 或者 优选IP（反代IP必须与反代端口对应）</span><br><span class="hljs-string">端口(port)：7个http端口可任意选择(80、8080、8880、2052、2082、2086、2095)</span><br><span class="hljs-string">用户ID(uuid)：<span class="hljs-subst">$&#123;userID&#125;</span></span><br><span class="hljs-string">传输协议(network)：ws 或者 websocket</span><br><span class="hljs-string">伪装域名(host)：<span class="hljs-subst">$&#123;hostName&#125;</span></span><br><span class="hljs-string">路径(path)：/?ed=2048</span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string"></span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">二、CF-workers-vless+ws+tls 或者 CF-pages-vless+ws+tls节点，分享链接如下：</span><br><span class="hljs-string"></span><br><span class="hljs-string"><span class="hljs-subst">$&#123;pvlesswstls&#125;</span></span><br><span class="hljs-string"></span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">注意：客户端选项的伪装域名(host)必须改为你在CF解析完成的自定义域名</span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">客户端必要文明参数如下：</span><br><span class="hljs-string">客户端地址(address)：自定义的域名 或者 优选域名 或者 优选IP（反代IP必须与反代端口对应）</span><br><span class="hljs-string">端口(port)：6个https端口可任意选择(443、8443、2053、2083、2087、2096)</span><br><span class="hljs-string">用户ID(uuid)：<span class="hljs-subst">$&#123;userID&#125;</span></span><br><span class="hljs-string">传输协议(network)：ws 或者 websocket</span><br><span class="hljs-string">伪装域名(host)：<span class="hljs-subst">$&#123;hostName&#125;</span></span><br><span class="hljs-string">路径(path)：/?ed=2048</span><br><span class="hljs-string">传输安全(TLS)：开启</span><br><span class="hljs-string">跳过证书验证(allowlnsecure)：false</span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">`</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="代码修改"><a href="#代码修改" class="headerlink" title="代码修改"></a>代码修改</h3><ul><li>在<a href="https://www.uuidgenerator.net/version4">uuid生成工具</a> 点击生成 UUID，复制到代码的第七行</li><li>使用<a href="https://github.com/XIU2/CloudflareSpeedTest">IP获取工具</a>，查找最快的IP，复制 IP到代码的第九行 ,<ul><li>option:在 <a href="https://raw.githubusercontent.com/yonggekkk/Cloudflare-workers-pages-vless/main/ProxyIP.txt">ip 地址</a> 复制 IP，复制到代码的第九行 ,</li></ul></li></ul><h2 id="执行-Save-and-Deploy"><a href="#执行-Save-and-Deploy" class="headerlink" title="执行 Save and Deploy"></a>执行 Save and Deploy</h2><p><img src="https://s2.loli.net/2024/01/12/5JrA6MITZ2Wv9fi.png" alt="截屏2024-01-12 21.31.33"></p><h2 id="生成velss配置"><a href="#生成velss配置" class="headerlink" title="生成velss配置"></a>生成velss配置</h2><ul><li>将worker的地址&#x2F;uuid复制进浏览器地址栏，自动生成vless配置</li><li>将vless:&#x2F;&#x2F;****直接复制到工具即可使用</li></ul><h2 id="如果配置失效，需要重新配置IP"><a href="#如果配置失效，需要重新配置IP" class="headerlink" title="如果配置失效，需要重新配置IP"></a>如果配置失效，需要重新配置IP</h2><p><a href="https://github.com/XIU2/CloudflareSpeedTest">IP获取工具</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>How to</tag>
      
      <tag>Github</tag>
      
      <tag>Clash</tag>
      
      <tag>Cloudflare</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何将国内的音乐平台歌单导入apple music</title>
    <link href="/2024/01/06/How%20to%20Move%20Your%20Favorite%20Playlists%20from%20Music%20Platforms%20to%20Apple%20Music/"/>
    <url>/2024/01/06/How%20to%20Move%20Your%20Favorite%20Playlists%20from%20Music%20Platforms%20to%20Apple%20Music/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>音乐是人类的共同语言，它能带给我们无尽的欢乐和感动。然而，对于许多使用Apple Music的用户来说，音乐的选择却并不那么丰富。Apple Music的歌单数量有限，而且很多国内的优秀歌单无法直接导入，这让很多用户感到失望和无奈。虽然以前有一些方法可以实现国内歌单的导入，但是都非常繁琐和耗时，让人望而却步。那么，有没有一种简单快捷的方式，可以让我们在Apple Music上享受国内的歌单呢？答案是肯定的！在本文中，我将向你介绍一个神奇的小工具，它可以帮助你轻松地把国内的歌单导入到Apple Music，让你的音乐体验更加丰富和多彩。</p><h1 id="歌单准备"><a href="#歌单准备" class="headerlink" title="歌单准备"></a>歌单准备</h1><h2 id="进入163或者qq-music的主页，选择你喜欢的歌单，复制浏览器地址，"><a href="#进入163或者qq-music的主页，选择你喜欢的歌单，复制浏览器地址，" class="headerlink" title="进入163或者qq music的主页，选择你喜欢的歌单，复制浏览器地址，"></a>进入163或者qq music的主页，选择你喜欢的歌单，复制浏览器地址，</h2><p><img src="https://s2.loli.net/2024/01/06/oP57U1Hc6DRpmBA.png"></p><h2 id="将地址复制进如下-工具，点击获取歌单，待结果出来之后，复制结果"><a href="#将地址复制进如下-工具，点击获取歌单，待结果出来之后，复制结果" class="headerlink" title="将地址复制进如下 工具，点击获取歌单，待结果出来之后，复制结果"></a>将地址复制进如下 <a href="https://music.unmeta.cn/">工具</a>，点击获取歌单，待结果出来之后，复制结果</h2><p><img src="https://s2.loli.net/2024/01/06/jlbihg572PpnCX9.png"></p><h2 id="点击复制结果"><a href="#点击复制结果" class="headerlink" title="点击复制结果"></a>点击复制结果</h2><h1 id="转换歌单，并导入apple-music"><a href="#转换歌单，并导入apple-music" class="headerlink" title="转换歌单，并导入apple music"></a>转换歌单，并导入apple music</h1><h2 id="打开工具地址，并进入-FREE-TEXT"><a href="#打开工具地址，并进入-FREE-TEXT" class="headerlink" title="打开工具地址，并进入 FREE TEXT"></a>打开<a href="https://www.tunemymusic.com/transfer">工具地址</a>，并进入 <code>FREE TEXT</code></h2><p><img src="https://s2.loli.net/2024/01/06/VFOqktyJaUmGdPA.png"></p><h2 id="将刚才复制的内容，贴如表单，并点击-COVERT-SONG-LIST"><a href="#将刚才复制的内容，贴如表单，并点击-COVERT-SONG-LIST" class="headerlink" title="将刚才复制的内容，贴如表单，并点击 COVERT SONG LIST"></a>将刚才复制的内容，贴如表单，并点击 <code>COVERT SONG LIST</code></h2><p><img src="https://s2.loli.net/2024/01/06/CRdBnWvQSLTH8Vh.png"></p><h2 id="在生成歌单之后，点击Choose-Destination"><a href="#在生成歌单之后，点击Choose-Destination" class="headerlink" title="在生成歌单之后，点击Choose Destination"></a>在生成歌单之后，点击<code>Choose Destination</code></h2><p><img src="https://s2.loli.net/2024/01/06/NonIsU2QkX58zwy.png"></p><h2 id="按你的需求点击需要导入的歌单，这里以apple-music为例："><a href="#按你的需求点击需要导入的歌单，这里以apple-music为例：" class="headerlink" title="按你的需求点击需要导入的歌单，这里以apple music为例："></a>按你的需求点击需要导入的歌单，这里以apple music为例：</h2><p><img src="https://s2.loli.net/2024/01/06/WqXc23T9snBI5JV.png"></p><h2 id="编辑歌单名称"><a href="#编辑歌单名称" class="headerlink" title="编辑歌单名称"></a>编辑歌单名称</h2><p><img src="https://s2.loli.net/2024/01/06/g53xnaALNpJw9Wd.png"></p><h2 id="开始转换"><a href="#开始转换" class="headerlink" title="开始转换"></a>开始转换</h2><p><img src="https://s2.loli.net/2024/01/06/DsVtymr8gMSvlUw.png"></p><h2 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h2><p><img src="https://s2.loli.net/2024/01/06/DzTZUkprIxes3qv.png"></p><p>歌单创建成功，其中11首由于apple music没有收录，导致导入失败</p><h1 id="开始享受apple-music的高品质音乐吧"><a href="#开始享受apple-music的高品质音乐吧" class="headerlink" title="开始享受apple music的高品质音乐吧"></a>开始享受apple music的高品质音乐吧</h1><p><img src="https://s2.loli.net/2024/01/06/nY9rf5NwHW6eOMt.png"></p><h1 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h1><p><a href="https://www.appinn.com/bistutu-gomusic">小众软件链接</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>How to</tag>
      
      <tag>Life</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>warp提取clash配置文件</title>
    <link href="/2023/10/06/wapr%E6%8F%90%E5%8F%96clash%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <url>/2023/10/06/wapr%E6%8F%90%E5%8F%96clash%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>开篇：</strong></p><p>随着互联网的普及，我们越来越依赖于在线世界。不管是在工作中的数据传输，还是在娱乐时的视频流媒体，网络已经成为我们日常生活中不可或缺的一部分。然而，随之而来的是网络隐私和性能方面的担忧。在这个信息充斥、互联无处不在的时代，我们需要更好的方法来保护我们的隐私，并确保网络连接畅通无阻。</p><p>在这篇博客中，我们将探讨一种强大的工具，它将网络隐私和性能提升完美结合，那就是使用Cloudflare的WARP服务来创建Clash配置。这个方法可能会让你瞠目结舌，因为它为你提供了一种可靠的方式来维护你的隐私、保护你的数据，同时提升你的互联网体验。</p><h3 id="什么是WARP？"><a href="#什么是WARP？" class="headerlink" title="什么是WARP？"></a>什么是WARP？</h3><p>WARP是一项由全球领先的网络安全和性能公司Cloudflare推出的服务。它的目标是通过将你的互联网连接路由通过Cloudflare的网络来提高网络性能，并提供额外的隐私保护。WARP的核心理念是将你的网络连接变得更快、更安全、更可靠。</p><h3 id="Clash是什么？"><a href="#Clash是什么？" class="headerlink" title="Clash是什么？"></a>Clash是什么？</h3><p>Clash是一个流行的开源代理工具，它允许你轻松管理和配置不同的代理服务器。无论你是希望突破地理限制、提高网络速度，还是增强网络隐私，Clash都可以帮助你实现这些目标。结合WARP和Clash，你可以打造一个强大的网络工具箱，为你的互联网连接增添了新的层次。</p><p>在接下来的文章中，我们将深入探讨如何使用WARP创建Clash配置，以及这样做的好处。无论你是一名网络隐私爱好者、技术爱好者，或者只是希望提升你的在线体验，这篇博客都将为你提供有用的见解和实用的指南。</p><p>让我们一起探索WARP和Clash的合作，看看它们如何改善你的网络连接，保护你的隐私，以及提升你的互联网体验。</p><h1 id="Warp-ID生成"><a href="#Warp-ID生成" class="headerlink" title="Warp+ ID生成"></a>Warp+ ID生成</h1><p>链接：<a href="https://replit.com/@kelekekou8/WarpKey">Warp+Key</a> 点击右上的run，稍作等待，即可生成ID,具体为26位字符。</p><h1 id="Wirdguard-配置自动生成"><a href="#Wirdguard-配置自动生成" class="headerlink" title="Wirdguard 配置自动生成"></a>Wirdguard 配置自动生成</h1><p>链接：<a href="https://replit.com/@kelekekou8/WARPconfig-youtubeBu-Yi-Yang-De-Qiang-Ge">Wirdguard</a>，</p><p>在下面的输入框输入上面生成的26位序列号，</p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202310061135684.png" alt="截屏2023-10-06 11.35.38"></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">PrivateKey</span> = kFeeUVwvLT34NjzspoCsMn3424N2bY7M23sKM7M1UMHhUwpV8=<br><span class="hljs-attr">Address</span> = <span class="hljs-number">172.16</span>.<span class="hljs-number">0.2</span>/<span class="hljs-number">32</span><br><span class="hljs-attr">Address</span> = <span class="hljs-number">2606</span>:<span class="hljs-number">4700</span>:<span class="hljs-number">110</span>:<span class="hljs-number">8378</span>:f129:fa44:<span class="hljs-number">8</span>c9e:ffc0/<span class="hljs-number">128</span><br><span class="hljs-attr">DNS</span> = <span class="hljs-number">1.1</span>.<span class="hljs-number">1.1</span><br><span class="hljs-attr">MTU</span> = <span class="hljs-number">1280</span><br><span class="hljs-section">[Peer]</span><br><span class="hljs-attr">PublicKey</span> = bmX<span class="hljs-comment">#5OC+F1FxEMF9d34yiK2H5/1SUtzH0J3dfuVo51h2wPfgyo=</span><br><span class="hljs-attr">AllowedIPs</span> = <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>/<span class="hljs-number">0</span><br><span class="hljs-attr">AllowedIPs</span> = ::/<span class="hljs-number">0</span><br><span class="hljs-attr">Endpoint</span> = <span class="hljs-number">162.159</span>.<span class="hljs-number">193.10</span>:<span class="hljs-number">2408</span><br></code></pre></td></tr></table></figure><p>将上面的代码转为如下格式：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&quot; Cloud servier”</span><br><span class="hljs-string">type: wireguard</span><br><span class="hljs-string">server: 188.114.98.240</span><br><span class="hljs-string">port: 1180</span><br><span class="hljs-string">ip: 172.16.0.2</span><br><span class="hljs-string">private-key: kFeeUVwvL23TNj34cvzspoC45sMnuN2bY7M23sKM7MUMHhUwpV8=</span><br><span class="hljs-string">public-key:bmXOC+F1FxEMF9dyiK2erH5/1SUtzH045rJuVo51h2wPfgyo=</span><br><span class="hljs-string">remote-dns-resolve: false</span><br><span class="hljs-string">udp: true</span><br></code></pre></td></tr></table></figure><p>即可使用clash来进行分流</p><h1 id="配置案例"><a href="#配置案例" class="headerlink" title="配置案例"></a>配置案例</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">port:</span> <span class="hljs-number">7890</span><br><span class="hljs-attr">socks-port:</span> <span class="hljs-number">7891</span><br><span class="hljs-attr">redir-port:</span> <span class="hljs-number">7892</span><br><span class="hljs-attr">allow-lan:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">mode:</span> <span class="hljs-string">Rule</span><br><span class="hljs-attr">log-level:</span> <span class="hljs-string">warning</span><br><span class="hljs-attr">external-controller:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">:9090</span><br><span class="hljs-attr">secret:</span> <span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-comment">#此处内容请安装一个gui版本的clash然后在里面配置好代理然后抄过来</span><br><span class="hljs-attr">dns:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">listen:</span> <span class="hljs-string">:1053</span><br>  <span class="hljs-attr">enhanced-mode:</span> <span class="hljs-string">redir-host</span><br>  <span class="hljs-attr">nameserver:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;114.114.114.114&#x27;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;223.5.5.5&#x27;</span><br>  <span class="hljs-attr">fallback:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-number">208.67</span><span class="hljs-number">.220</span><span class="hljs-number">.220</span><span class="hljs-string">:5353</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-number">208.67</span><span class="hljs-number">.222</span><span class="hljs-number">.222</span><span class="hljs-string">:5353</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-number">101.6</span><span class="hljs-number">.6</span><span class="hljs-number">.6</span><span class="hljs-string">:5353</span><br>  <br>  <br><span class="hljs-attr">proxies:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;warp&quot;</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">wireguard</span><br>  <span class="hljs-attr">server:</span> <span class="hljs-number">188.114</span><span class="hljs-number">.98</span><span class="hljs-number">.240</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">1180</span><br>  <span class="hljs-attr">ip:</span> <span class="hljs-number">172.16</span><span class="hljs-number">.0</span><span class="hljs-number">.2</span><br>  <span class="hljs-attr">private-key:</span> <br>  <span class="hljs-attr">public-key:</span> <br>  <span class="hljs-comment"># remote-dns-resolve: true</span><br>  <span class="hljs-attr">udp:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-attr">proxy-groups:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">PROXY</span><br>  <span class="hljs-attr">proxies:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">warp</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">select</span><br><br><span class="hljs-attr">rule-providers:</span><br>  <span class="hljs-attr">reject:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/reject.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">icloud:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/icloud.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">apple:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/apple.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">google:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/google.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">proxy:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/proxy.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">direct:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/direct.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">private:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/private.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">gfw:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/gfw.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">greatfire:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/greatfire.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/greatfire.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">tld-not-cn:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/tld-not-cn.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">telegramcidr:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">ipcidr</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/telegramcidr.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">cncidr:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">ipcidr</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/cncidr.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">lancidr:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">ipcidr</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/lancidr.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">applications:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">classical</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/applications.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br>    <br><span class="hljs-attr">rules:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,applications,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">DOMAIN,clash.razord.top,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">DOMAIN,yacd.haishan.me,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,private,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,reject,REJECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,tld-not-cn,PROXY</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,gfw,PROXY</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,greatfire,PROXY</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,telegramcidr,PROXY</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">MATCH,DIRECT</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>How to</tag>
      
      <tag>Clash</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker更新容器镜像的三种方法</title>
    <link href="/2023/08/07/3-ways-for-Docker-to-update-container-images/"/>
    <url>/2023/08/07/3-ways-for-Docker-to-update-container-images/</url>
    
    <content type="html"><![CDATA[<p>利用Docker部署应用非常方便，随着镜像的更新，我们的应用也需要及时更新，这就来简单给大家介绍三种更新Docker镜像的方法。</p><h1 id="更新用Docker命令部署的应用"><a href="#更新用Docker命令部署的应用" class="headerlink" title="更新用Docker命令部署的应用"></a>更新用Docker命令部署的应用</h1><h2 id="利用docker-ps命令确定容器的名字"><a href="#利用docker-ps命令确定容器的名字" class="headerlink" title="利用docker ps命令确定容器的名字"></a>利用<code>docker ps</code>命令确定容器的名字</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker ps <br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202308071050586.png" alt="img"></p><p>这边圆圈圈起来的就是容器的名字啦。</p><p>Halo里面的容器名字就是<code>halo</code></p><h2 id="备份数据-重要-，并停止容器"><a href="#备份数据-重要-，并停止容器" class="headerlink" title="备份数据(重要)，并停止容器"></a>备份数据(重要)，并停止容器</h2><p>利用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker inspect `容器的名字`<br></code></pre></td></tr></table></figure><p>找出你容器的映射到本地的文件路径，</p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202308071052602.png" alt="img"></p><p>图片里就是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> -r /root/.halo /root/.halo.1.4.15  <span class="hljs-comment"># 备份并重命名为.halo.1.4.15</span><br></code></pre></td></tr></table></figure><h2 id="拉取最新的容器镜像"><a href="#拉取最新的容器镜像" class="headerlink" title="拉取最新的容器镜像"></a>拉取最新的容器镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull halohub/halo:1.4.16<br></code></pre></td></tr></table></figure><p><code>halohub/halo:1.4.16</code>这部分替换成你需要更新的镜像的名字和版本号</p><p>很多是类似这种<code>xxxxx/xxxxx:latest</code></p><h2 id="重新创建容器"><a href="#重新创建容器" class="headerlink" title="重新创建容器"></a>重新创建容器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ba">docker run -it -d --name halo -p 8090:8090 -v ~/.halo:/root/.halo --restart=unless-stopped halohub/halo:1.4.16<br></code></pre></td></tr></table></figure><p>这部分的命令可以保存在了自己对应文件夹下的<code>config.txt</code>文件里，下次更新，直接粘贴出来，修改最后面镜像的部分（这里是<code>halohub/halo:1.4.16</code>）重新部署就ok了。</p><h1 id="更新用Docker-compose部署的应用"><a href="#更新用Docker-compose部署的应用" class="headerlink" title="更新用Docker-compose部署的应用"></a>更新用Docker-compose部署的应用</h1><h2 id="进入docker-compose文件夹"><a href="#进入docker-compose文件夹" class="headerlink" title="进入docker-compose文件夹"></a>进入docker-compose文件夹</h2><p>​执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose pull<br></code></pre></td></tr></table></figure><h2 id="重启你的容器"><a href="#重启你的容器" class="headerlink" title="重启你的容器"></a>重启你的容器</h2><p>执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up -d --remove-orphans<br></code></pre></td></tr></table></figure><h2 id="删除掉旧的镜像"><a href="#删除掉旧的镜像" class="headerlink" title="删除掉旧的镜像"></a>删除掉旧的镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker image prune <br></code></pre></td></tr></table></figure><h2 id="更新Docker-compose的单个Docker镜像"><a href="#更新Docker-compose的单个Docker镜像" class="headerlink" title="更新Docker-compose的单个Docker镜像"></a>更新Docker-compose的单个Docker镜像</h2><p>假设有一服务名为<code>AAA</code>（基于镜像<code>AAA</code>）</p><h3 id="Stop容器"><a href="#Stop容器" class="headerlink" title="Stop容器"></a>Stop容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose stop AAA<br></code></pre></td></tr></table></figure><h3 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose <span class="hljs-built_in">rm</span> -f AAA<br></code></pre></td></tr></table></figure><h3 id="更新镜像"><a href="#更新镜像" class="headerlink" title="更新镜像"></a>更新镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose pull AAA<br></code></pre></td></tr></table></figure><h2 id="重启容器"><a href="#重启容器" class="headerlink" title="重启容器"></a>重启容器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up AAA -d<br></code></pre></td></tr></table></figure><h1 id="直接利用Portainer更新"><a href="#直接利用Portainer更新" class="headerlink" title="直接利用Portainer更新"></a>直接利用Portainer更新</h1><h2 id="登陆Portainer面板"><a href="#登陆Portainer面板" class="headerlink" title="登陆Portainer面板"></a>登陆Portainer面板</h2><p>选择容器</p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202308071109086.png" alt="img"></p><h2 id="更新容器"><a href="#更新容器" class="headerlink" title="更新容器"></a>更新容器</h2><p>点击<code>Recreate</code>，然后点击<code>Pull latest images</code>，最后点击<code>Recreate</code></p><p>等待完成就ok了。<img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202308071111851.png" alt="img"></p><h1 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h1><p><a href="https://cloud.tencent.com/developer/article/2086860">Docker更新容器镜像的三种方法</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>How to</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>正义回廊</title>
    <link href="/2023/08/05/The-Cloister-of-Justice/"/>
    <url>/2023/08/05/The-Cloister-of-Justice/</url>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202308051953162.jpg" alt="p2883864814"></p><h1 id="正义回廊的剧情简介-·-·-·-·-·-·"><a href="#正义回廊的剧情简介-·-·-·-·-·-·" class="headerlink" title="正义回廊的剧情简介 · · · · · ·"></a>正义回廊的剧情简介 · · · · · ·</h1><p>　　张显宗（杨伟伦 饰）联同友人唐文奇 (麦沛东 饰) 于寓所内杀害父母，并进行肢解。案件进入法庭审讯程序，二人皆否认谋杀罪名，两位资深大律师吴冠峰（林海峰 饰）和游嘉莉（苏玉华 饰）分别代表二人上庭辩护，检控官朱爱伦（周文健 饰）却质疑二人早已部署杀人计划，为财谋命似是毋庸置疑。然而在攻守互换后，吴和游两位大律师施展各自辩才，揭露出案情中更为扑朔迷离之处，而唐文奇出庭自辩时更把一切指控推得一干二净。在一幕幕激烈的法庭辩论下，两位被告上演出“天才”与“白痴”的戏码，真相似乎越辩越模糊。九位不同背景的陪审员在休息室展开话语权的角力，同时陷入对与错的正义思辩中。</p><h1 id="精选评论"><a href="#精选评论" class="headerlink" title="精选评论"></a><a href="https://movie.douban.com/review/14970043/">精选评论</a></h1><p>戏剧效果拉满，135分钟的密集对白也不显无聊。第一被告在罪证确凿的情况下陪审团唯一一个投出无罪的老头，和花大量篇幅争议第二被告是否有罪却获得一致投出的”无罪”是神来之笔。陪审团的天平还是倾向”人之常情”，为避免”冤狱”的无罪推定成为对第一被告的不公，正常人会同情于社会家庭联结密切的低能儿而不会真正去理解一个冰冷漠然的人，法庭始终是”正常人”的法庭，张显宗只能在一人的纳粹法庭角色扮演，对于正常的世界这种人只是自毁的程序。 对于唐文奇，我个人觉得这里暗示了他多次向别人提起恐惧的大蜘蛛，最后一个画面唐文奇被蛛网束缚，实际上蜘蛛是伏在他胸口，象征他所有的辩白都是自己吐出的丝，装饰性地编织成束缚的模样套在自己身上，但低智商还可以有这样恰如其分的应答实在不可信。包括张显宗对于唐文奇判决结果的不满都暗示唐文奇在说谎。最终陪审团交出的公义放过了可能是有罪的人，疑点利益归于被告，这就是复杂别扭的地方。导演稳定没有的立场，律师，媒体，警察都只做分内事，漂浮在空中的公义由陪审团(观众)去探寻。</p><h1 id="神秘链接-·-·-·-·-·-·"><a href="#神秘链接-·-·-·-·-·-·" class="headerlink" title="神秘链接 · · · · · ·"></a>神秘链接 · · · · · ·</h1><p><a href="https://www.aliyundrive.com/s/ro3tR82fHVt">正义回廊 国粤双语 (2022) 1080P REMUX 蓝光 原盘</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Movie</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>铃芽之旅</title>
    <link href="/2023/07/30/suzume/"/>
    <url>/2023/07/30/suzume/</url>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307302142845.jpg" alt="img"></p><h1 id="铃芽之旅的剧情简介-·-·-·-·-·-·"><a href="#铃芽之旅的剧情简介-·-·-·-·-·-·" class="headerlink" title="铃芽之旅的剧情简介 · · · · · ·"></a>铃芽之旅的剧情简介 · · · · · ·</h1><p>　故事讲述生活在日本九州田舍的17岁少女・铃芽遇见了为了寻找“门”而踏上旅途的青年。追随着青年的脚步，铃芽来到了山上一片废墟之地，在这里静静伫立着一扇古老的门，仿佛是坍塌中存留的唯一遗迹。铃芽仿佛被什么吸引了一般，将手伸向了那扇门…<br>　　不久之后，日本各地的门开始一扇一扇地打开。据说，开着的门必须关上，否则灾祸将会从门的那一边降临于现世。</p><h1 id="导演自述-·-·-·-·-·-·"><a href="#导演自述-·-·-·-·-·-·" class="headerlink" title="导演自述  · · · · · ·"></a>导演自述  · · · · · ·</h1><p><a href="https://movie.douban.com/review/15097765/">不管遇到什么痛苦 未来总是光明的 どんな苦しみにぶつかったとしても、未来は光に満ちている</a></p><h1 id="神秘链接-·-·-·-·-·-·"><a href="#神秘链接-·-·-·-·-·-·" class="headerlink" title="神秘链接 · · · · · ·"></a>神秘链接 · · · · · ·</h1><p><a href="https://www.aliyundrive.com/s/6HT7WhhD6j6">铃芽之旅 すずめの戸締まり (2022)</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Movie</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>太白金星有点烦</title>
    <link href="/2023/07/30/%E5%A4%AA%E7%99%BD%E9%87%91%E6%98%9F%E6%9C%89%E7%82%B9%E7%83%A6/"/>
    <url>/2023/07/30/%E5%A4%AA%E7%99%BD%E9%87%91%E6%98%9F%E6%9C%89%E7%82%B9%E7%83%A6/</url>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307301430790.jpg" alt="img"></p><h1 id="内容简介-·-·-·-·-·-·"><a href="#内容简介-·-·-·-·-·-·" class="headerlink" title="内容简介 · · · · · ·"></a>内容简介 · · · · · ·</h1><p>太白金星李长庚最近有点烦。</p><p>天庭和西天联合推出了“西天取经”的重大项目，他受命策划九九八十一难，确保唐僧能安全走完流程，平稳取经成佛。老神仙本以为一切尽在掌控中，谁知天大的麻烦才刚刚开始：费用报销、工作汇报、人事安排、各路大仙塞来的条子、各地妖怪暗藏的心思，捋不出的千头万缕，做不完的琐碎繁杂……当大闹天宫的真相重新浮出水面，牵扯出无数因果，李长庚发觉自己成就金仙的道路越加渺茫。</p><p>【编辑推荐】</p><p>这是每一个成年人应该重读的西游故事。</p><p>太白金星李长庚最近有点烦。天庭和西天联合推出了“西天取经”的重大项目，他受命策划九九八十一难，确保项目无虞。老神仙本以为一切尽在掌控中，谁知天大的麻烦才刚刚开始。</p><p>项目过程中，如何报销活动费用？如何写工作汇报？如何平衡不同上级的诉求？如何应对突发状况？如何解决人事纠纷？一系列问题在不改变经典著作《西游记》结局的基础上展开了丰富有趣的职场生态，即便李长庚锦囊无数，也不免常常陷入焦虑。</p><p>都说神仙要“超脱因果，太上忘情”，都说不要在职场里动感情，太白金星却说，“很多人间执念我们无法理解，但不代表那些痛苦就不存在。”即使得了“仙”“佛”之号，依旧抛不下一个人字，有人，就有抛不下的牵挂、因果与苦乐得失。</p><p>打碎无意义的追逐，才是真的得道。</p><p>延续《长安的荔枝》小开本双封设计，随书附10张著名画家施晓颉所绘创意插图。</p><p>【媒体推荐】</p><p>地下取经队伍降妖除魔百般威武，天上神界仙界各怀心思斗智斗勇。现代视角另类演绎西游故事，就算成仙也得讲究职场智慧。</p><p>——《收获》杂志</p><h1 id="作者简介-·-·-·-·-·-·"><a href="#作者简介-·-·-·-·-·-·" class="headerlink" title="作者简介 · · · · · ·"></a>作者简介 · · · · · ·</h1><p>马伯庸</p><p>作家。人民文学奖、朱自清散文奖、茅盾新人奖得主。</p><p>作品被评为沿袭“‘五四’以来历史文学创作的谱系”，致力于对“历史可能性小说”的探索。</p><p>代表作：《长安的荔枝》《大医》《两京十五日》《显微镜下的大明》《长安十二时辰》《古董局中局》《三国机密》《风起陇西》等。</p><h1 id="备注·-·-·-·-·-·"><a href="#备注·-·-·-·-·-·" class="headerlink" title="备注· · · · · ·"></a>备注· · · · · ·</h1><p>上面内容载自豆瓣</p><h1 id="神秘链接·-·-·-·-·-·"><a href="#神秘链接·-·-·-·-·-·" class="headerlink" title="神秘链接· · · · · ·"></a>神秘链接· · · · · ·</h1><p><a href="https://www.aliyundrive.com/s/a6KTht2fVzb">太白金星有点烦 (马伯庸)</a></p><p> 提取码: r57z </p>]]></content>
    
    
    
    <tags>
      
      <tag>Read</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>汉化佛教科普</title>
    <link href="/2023/07/30/buddhism-in-china/"/>
    <url>/2023/07/30/buddhism-in-china/</url>
    
    <content type="html"><![CDATA[<p>佛教在国内有很普遍的群众基础，除了心中信仰外，很多人把佛教看作是一种交换的场所，此文借助网上的资料给大家做个佛教科普。</p><h1 id="佛教分类"><a href="#佛教分类" class="headerlink" title="佛教分类"></a>佛教分类</h1><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307301342785.png"></p><ul><li>大乘佛教</li></ul><p>认为这个世界上可以有很多佛，他们不仅要解脱自我，还要解脱一切生灵，要普渡众生，让众生都能成佛，后来被称为大众部。</p><ul><li>小乘佛教</li></ul><p>世界上就只能有释迦牟尼这一个佛，也只认释迦牟尼这一个教主，其他人只能修到罗汉果位，而且他们的主张是自我完善、自我修行、自我解脱，这些人在后来就被称为上座部。</p><p><code>实际上“大乘”和“小乘”并无境界的高低之分，只不过是两波学生对佛法的理解不同而已。</code></p><h2 id="汉传佛教"><a href="#汉传佛教" class="headerlink" title="汉传佛教"></a>汉传佛教</h2><p>佛教在刚传入中国的时候面临着各种困难，因为那个时候中国的儒家文化是占据统治地位的，而且想推广佛教的思想学说，你还必须要获得中国统治阶级的支持。当然佛教的传播者们是非常聪明的，他们通过吸收儒家思想并对自家的思想和理论做出积极调整和改造，就这样他们慢慢解开了传播的困局。</p><p>佛教被汉化之后受强盛中国的影响，其又被传播到了朝鲜半岛、日本和越南，传播到这些地区的佛教就被称之为汉传佛教。</p><h2 id="藏传佛教"><a href="#藏传佛教" class="headerlink" title="藏传佛教"></a>藏传佛教</h2><p>松赞干布时期佛教开始大规模传入西藏，主要从两个方向传入西藏，一个方向自大唐（中原）文成公主处，另一个方向自尼泊尔毗俱胝公主处，所以这藏传佛教也是是深受汉传佛教的影响的。藏传佛教也属于大乘佛教，主张普渡众生，让众生都能成佛。</p><h2 id="南传佛教"><a href="#南传佛教" class="headerlink" title="南传佛教"></a>南传佛教</h2><p>大乘佛教的传播者到处传播佛法，这小乘佛教的传播者肯定不能天天在家葛优躺吧，他们也得进行佛法传播。于是由古印度向南传播到了斯里兰卡、东南亚及中国云南的傣族地区，传播到这些地区的佛教就被称为南传佛教。</p><h1 id="汉传佛教寺院的标准配置"><a href="#汉传佛教寺院的标准配置" class="headerlink" title="汉传佛教寺院的标准配置"></a>汉传佛教寺院的标准配置</h1><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307301347757.png"></p><h2 id="山门"><a href="#山门" class="headerlink" title="山门"></a>山门</h2><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307301348804.png"></p><p>由于过去的寺院大多是依山而建，所以这些建在山林之处的佛寺的入口就叫山门，当然根据佛教的教义，山门也被称之为“三门”，也就是无相门（右边）、空门（中间）和无作门（左边），这三门寓意着“三解脱门”。</p><p>当然有时候我们也能遇到殿堂式的山门，也就是说山门以殿堂的形式建造，殿内有两大金刚，也被称为“二王”，左边一个是“密迹金刚”右边一个是“罗延金刚”，他们都是山门的守护神。随着佛教在中国的流传，有的地方的民众通过神像的模样把这两大金刚称之为“哼哈二将”，嘴巴闭着的叫“哼”将，张着嘴巴的叫“哈”将，其实这哼哈二将不是佛教中的名称，是《封神演义》小说里的名称。</p><h2 id="天王殿"><a href="#天王殿" class="headerlink" title="天王殿"></a>天王殿</h2><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307301349275.png"></p><p>进入山门后的正前方（向北）第一眼看到的就是天王殿，这天王殿也叫“弥勒殿”或“韦驮殿”，是佛教寺院的第一重殿。</p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307301350592.png"></p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307301350175.png"></p><p>进入殿门，正中供奉的是弥勒佛，佛像面朝南，弥勒佛的背后就是韦驮菩萨，韦驮菩萨面朝北与弥勒佛背靠背，同时他也正对着“大雄宝殿”的大门。在弥勒佛和韦驮菩萨的左右分别是、南方增长天王、东方持国天王、北方多闻天王、西方广目天王，他们一起被称为四大天王。由于在封神演义小说中这四大天王的职能分别是“风”、“调”、“雨”、“顺”，所以民间就称佛教的四大天王为“风调雨顺”之神。</p><ul><li><p>弥勒佛：佛教作为表法教育，表示“量大福大”，提醒世人学习包容，世人在弥勒佛前拜求富乐、求未来。</p></li><li><p>韦驮菩萨：手持金刚杵，驱邪魔护佛法。</p></li><li><p>南方增长天王：能传令众生，增长善根，护持佛法；身为青色，穿甲胄，手握宝剑，这宝剑象征智慧，慧剑斩烦恼。</p></li><li><p>东方持国天王：意为慈悲为怀，保护众生，护持国土；身为白色，穿甲胄，手持琵琶或阮琴。</p></li><li><p>北方多闻天王：精通佛法，福、德闻于四方；身为绿色，穿甲胄，左手卧银鼠，右持宝伞。</p></li><li><p>西方广目天王：能以净天眼随时观察世界，护持人民；身为红色，穿甲胄，手缠一条龙或是蛇。</p></li></ul><h2 id="钟楼和鼓楼"><a href="#钟楼和鼓楼" class="headerlink" title="钟楼和鼓楼"></a>钟楼和鼓楼</h2><p>一般的大一点的寺院在山门和天王殿之间都会建“钟楼”和“鼓楼”，人们面向天王殿其左手边是鼓楼，右手边是钟楼。同时由于大多数的汉传佛教寺院都是坐北朝南，所以钟鼓楼也被称之为“东钟”、“西鼓”。</p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307301352611.png"></p><p>钟和鼓的使用方法是清晨先击钟，后以击鼓应和，晚上的时候先击鼓，然后击钟应和，这也就被大家称之为“晨钟暮鼓”。钟楼和鼓楼的作用一般是清晨起床后报告时间信息，还有就是定时定点击钟敲鼓让人们能够惊觉醒悟。</p><p>钟楼和鼓楼在不同的寺院供奉的佛像是不一样的，大多数的寺院鼓楼下供奉伽蓝神关羽，在钟楼下供奉地藏菩萨。</p><h2 id="大雄宝殿"><a href="#大雄宝殿" class="headerlink" title="大雄宝殿"></a>大雄宝殿</h2><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307301353541.png"></p><p>大雄宝殿又称“佛宝殿”“正殿”，是整个寺院最核心的建筑，也是僧众集中修持的地方。大雄宝殿中供奉的是佛教创始人释迦牟尼的佛像。大雄是佛的德号，这“大”有包含万有的意思；“雄”有摄伏群魔的意思。由于释迦牟尼佛具足圆觉智慧，能雄镇大千世界，因此佛弟子尊称他为大雄。最后，这宝殿的宝是指佛教三宝——佛宝、法宝、僧宝。</p><p>由于佛教的宗派不同，大雄宝殿之中所供的佛像也会有所不同，以下为几种最常见的情况：</p><h3 id="一佛二弟子"><a href="#一佛二弟子" class="headerlink" title="一佛二弟子"></a>一佛二弟子</h3><p>释迦牟尼佛（中间），迦叶弟子（右边，或东边），阿难弟子（左边，或西边）；老年的是迦叶，青年的是阿难，他们俩都是站着的。</p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307301354024.png"></p><p><strong>释迦牟尼佛：</strong>称为本师佛，是现在这个娑婆世界的教主。</p><p><strong>迦叶：</strong>佛陀的大弟子，佛陀渡灭后，成为僧团的主要领导人物。</p><p><strong>阿难：</strong>他专注地服侍佛陀，无误的记住佛的一言一语，因此被称为“多闻第一”，迦叶圆寂后，阿难尊者继承迦叶率领徒众宏扬佛法。</p><h3 id="一佛二菩萨"><a href="#一佛二菩萨" class="headerlink" title="一佛二菩萨"></a>一佛二菩萨</h3><p>释迦牟尼佛（中间），普贤菩萨（右边），文殊菩萨（左边）</p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307301355455.png"></p><p><strong>文殊菩萨：</strong>又称法王子，为智慧的象征，右手持金刚宝剑能斩群魔，断一切烦恼，左手持青莲花，花上有金刚般若经卷宝，象征所具无上智慧。</p><p><strong>普贤菩萨：</strong>普贤菩萨具有延命益寿之不可思议的力量，他是理德和大行愿的象征，也象征真理。</p><h3 id="供奉三尊佛——三身佛（佛有三种不同的佛身）"><a href="#供奉三尊佛——三身佛（佛有三种不同的佛身）" class="headerlink" title="供奉三尊佛——三身佛（佛有三种不同的佛身）"></a>供奉三尊佛——三身佛（佛有三种不同的佛身）</h3><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307301356252.png"></p><p><strong>毗卢遮那佛（法身佛）：</strong> 代表佛教真理凝聚所成的佛身。</p><p><strong>卢舍那佛（报身佛）：</strong>  经过修习得到佛果，享有佛国（净土）之身。</p><p>**释迦牟尼佛（应身佛，又称化身佛）： **指佛为超度众生、随缘应机而呈现的各种化身。</p><h3 id="供奉三尊佛——竖三世佛"><a href="#供奉三尊佛——竖三世佛" class="headerlink" title="供奉三尊佛——竖三世佛"></a>供奉三尊佛——竖三世佛</h3><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307301358651.png"></p><p><strong>释迦牟尼佛（现在佛）</strong></p><p><strong>燃灯佛（过去佛）：</strong>佛经说他生时身边一切光明如灯，在释迦牟尼未成佛时，燃灯佛曾为他“授记”，预言将来成佛的事。</p><p><strong>弥勒佛（未来佛）：</strong>佛经讲他将继承释迦的佛位而成佛，所以叫未来佛。</p><h3 id="供奉三尊佛——横三世佛"><a href="#供奉三尊佛——横三世佛" class="headerlink" title="供奉三尊佛——横三世佛"></a>供奉三尊佛——横三世佛</h3><p><strong>释迦牟尼佛：</strong>主管中央娑婆世界，他是这个世界的教化者，是佛教教主。</p><p><strong>阿弥陀佛：</strong>主管西方极乐世界，阿弥陀佛主要是以其愿力，引渡众生到极乐世界，脱离苦难的轮回，故亦号“接引佛”。</p><p><strong>药师佛：</strong>主管东方净琉璃世界，药师佛可以保佑世人消灾、延寿、去病，许多老者、病人都会礼拜药师佛，以求健康长寿。</p><p><em><strong>以上是我们常见的供奉在大雄宝殿里的佛像，在大雄宝殿佛主背后还供奉的有观音菩萨，也存在两种情况：</strong></em></p><ul><li><p>观音菩萨（中）、文殊菩萨（左）、普贤菩萨（右）</p></li><li><p>观音菩萨（中）、龙女（左）、善财童子（右）（这一组是最常见的）</p></li></ul><p>大雄宝殿主佛像的两边一般还有十八罗汉，每边各有9尊罗汉，当然我们前面也说了，由于佛教的宗派不同，其供奉的佛像会稍微有些不一样，总体来说就是以上介绍的情况。</p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307301402281.png"></p><h2 id="藏经楼（法堂）"><a href="#藏经楼（法堂）" class="headerlink" title="藏经楼（法堂）"></a>藏经楼（法堂）</h2><p>这藏（<strong>zàng</strong>）经楼又称说法堂，因为有楼上楼下，楼下一般是寺院讲经说法的场所，所以叫说法堂。楼上为藏经楼，楼上一般不对外开放，里面存放的是佛教典籍。</p><h2 id="与中轴线垂直方向的建筑（横向布局）"><a href="#与中轴线垂直方向的建筑（横向布局）" class="headerlink" title="与中轴线垂直方向的建筑（横向布局）"></a>与中轴线垂直方向的建筑（横向布局）</h2><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307301405306.png"></p><h3 id="菩萨殿"><a href="#菩萨殿" class="headerlink" title="菩萨殿"></a>菩萨殿</h3><p>地藏殿+观音殿</p><p><strong>地藏殿：</strong>主供地藏菩萨，是佛寺的重要配殿之一。地藏菩萨曾发下大誓愿要等度尽众生脱离苦难后，自己才升级成佛。所以他以“大孝”和“大愿”的德业被佛教广为弘传，也因此被普遍尊称为“大愿地藏王菩萨”。</p><p><strong>观音殿：</strong>以观音为主尊的佛寺殿堂，可以祈求：平等、平安吉祥、消灾解难、健康长寿、子孙兴旺、财源广进，有求必应。</p><h3 id="客堂和斋堂"><a href="#客堂和斋堂" class="headerlink" title="客堂和斋堂"></a>客堂和斋堂</h3><p><strong>客堂：</strong>客堂是寺院日常工作的管理中心，负责宾客、居士、云游僧的接待及负责僧众的考勤和纪律等</p><p><strong>斋堂：</strong>寺庙中僧人用斋吃饭的地方</p><h2 id="附属建筑——佛塔"><a href="#附属建筑——佛塔" class="headerlink" title="附属建筑——佛塔"></a>附属建筑——佛塔</h2><p>佛塔最早产生于印度，又称“浮屠”，是存放佛舍利的专用建筑物。这佛舍利就是僧人死后所遗留的头发、骨骼、骨灰等的总称。我们在影视剧经常听到这样一句话“救人一命胜造七级浮屠”，这浮屠就是佛塔，在佛教中七层的佛塔是最高等级的佛塔。</p><p>随着佛教在中国被汉化，它的作用也发生了变化，不仅限于存放佛舍利，有时候也是为了纪念某个人，比如：宝通禅寺里面的洪山宝塔就是为了纪念开山祖师灵济慈忍大师所建，又名灵济塔。</p><p>根据史料，佛教在西汉末年刚传入我国的时候，佛寺是以佛塔为中心的，四周围墙。魏晋南北朝时期，佛寺布局是塔与殿结合的形式，但塔还是居中，殿堂在中轴线上塔的后面。到了隋唐时期佛教在中国发展兴盛起来，出现了大型的佛寺布局，此时的佛塔已经不再是中心建筑，殿堂一跃成为佛寺中最主要的建筑。到了宋元明清，佛塔为中心的佛寺建筑一去不复返，基本形成以中轴线建大殿，中轴线两端设置左右对称的偏殿的建筑布局。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Life</tag>
      
      <tag>Culture</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>打造基于gist的Clash订阅</title>
    <link href="/2023/07/29/Build-a-gist-based-clash-subscription/"/>
    <url>/2023/07/29/Build-a-gist-based-clash-subscription/</url>
    
    <content type="html"><![CDATA[<p>Clash是一个开源的网络代理，具有强大的功能和易于使用。它支持各种协议，包括Socks5、HTTP和HTTPS，可以用于绕过防火墙、隐藏IP地址和保护隐私。Clash还支持各种功能，例如广告过滤、DNS解析和代理切换。</p><p>Clash的好处包括：</p><ul><li>强大的功能：Clash支持各种协议和功能，可以满足各种需求。</li><li>易于使用：Clash的用户界面简单直观，易于上手。</li><li>开源：Clash是开源的，这意味着任何人都可以查看其源代码，确保其安全和可靠。</li></ul><p>Clash的不便之处包括：</p><ul><li>需要订阅配置：Clash需要订阅配置才能使用。这些配置可以从各种来源获得，例如GitHub、论坛和私人服务器。</li><li>需要学习曲线：Clash具有强大的功能，因此需要一定的学习时间才能熟悉所有功能。</li></ul><p>尽管存在一些不便之处，但Clash仍然是一个功能强大且易于使用的网络代理。本文介绍如何使用gist打造自己的私有订阅。</p><h1 id="GitHub-Gist-配置"><a href="#GitHub-Gist-配置" class="headerlink" title="GitHub Gist 配置"></a><a href="https://gist.github.com/">GitHub Gist</a> 配置</h1><ul><li><p>Gist description 不用填，</p></li><li><p>Filename including extension… 填入包括拓展名的文件全名，如 myconfig.yaml，</p></li><li><p>Create secret gist  不要选择Create public gist</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307291111002.webp"></p><p> Gist，点击右上角的 Raw，复制当前的的地址，如：</p><p><a href="https://gist.githubusercontent.com/github/bf480acnew747d25e59/raw/1cc5824c712a0c8fe0aaa7ee6fa644cc26e9fb31/gistfile1.txt">https://gist.githubusercontent.com/github/bf480acnew747d25e59/raw/1cc5824c712a0c8fe0aaa7ee6fa644cc26e9fb31/gistfile1.txt</a></p><p>将 &#x2F;raw&#x2F; 之后的第二串随机数删除，得到形如：</p><p><a href="https://gist.githubusercontent.com/github/bf480sacf31a969e3acbc7ea2df4747ed25e59/raw/gistfile1.txt">https://gist.githubusercontent.com/github/bf480sacf31a969e3acbc7ea2df4747ed25e59/raw/gistfile1.txt</a></p><p>的 URL。在任意使用 Clash Premium 或 Meta 内核的 Clash 图形化客户端中</p><h1 id="Clash-分流规则"><a href="#Clash-分流规则" class="headerlink" title="Clash 分流规则"></a>Clash 分流规则</h1><h2 id="在线地址（URL）"><a href="#在线地址（URL）" class="headerlink" title="在线地址（URL）"></a>在线地址（URL）</h2><p><code>如果无法访问域名 raw.githubusercontent.com，可以使用第二个地址（cdn.jsdelivr.net），但是内容更新会有 12 小时的延迟。以下地址填写在 Clash 配置文件里的 rule-providers 里的 url 配置项中。</code></p><ul><li>直连域名列表 direct.txt：<br><a href="https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/direct.txt">https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/direct.txt</a><br><a href="https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt">https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt</a></li><li>代理域名列表 proxy.txt：<br><a href="https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/proxy.txt">https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/proxy.txt</a><br><a href="https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt">https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt</a></li><li>广告域名列表 reject.txt：<br><a href="https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/reject.txt">https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/reject.txt</a><br><a href="https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt">https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt</a></li><li>私有网络专用域名列表 private.txt：<br><a href="https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/private.txt">https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/private.txt</a><br><a href="https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt">https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt</a></li><li>Apple 在中国大陆可直连的域名列表 apple.txt：<br><a href="https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/apple.txt">https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/apple.txt</a><br><a href="https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt">https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt</a></li><li>iCloud 域名列表 icloud.txt：<br><a href="https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/icloud.txt">https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/icloud.txt</a><br><a href="https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt">https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt</a></li><li>[慎用]Google 在中国大陆可直连的域名列表 google.txt：<br><a href="https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/google.txt">https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/google.txt</a><br><a href="https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt">https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt</a></li><li>GFWList 域名列表 gfw.txt：<br><a href="https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/gfw.txt">https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/gfw.txt</a><br><a href="https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt">https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt</a></li><li>非中国大陆使用的顶级域名列表 tld-not-cn.txt：<br><a href="https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/tld-not-cn.txt">https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/tld-not-cn.txt</a><br><a href="https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt">https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt</a></li><li>Telegram 使用的 IP 地址列表 telegramcidr.txt：<br><a href="https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/telegramcidr.txt">https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/telegramcidr.txt</a><br><a href="https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt">https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt</a></li><li>局域网 IP 及保留 IP 地址列表 lancidr.txt：<br><a href="https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/lancidr.txt">https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/lancidr.txt</a><br><a href="https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt">https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt</a></li><li>中国大陆 IP 地址列表 cncidr.txt：<br><a href="https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/cncidr.txt">https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/cncidr.txt</a><br><a href="https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt">https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt</a></li><li>需要直连的常见软件列表 applications.txt：<br><a href="https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/applications.txt">https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/applications.txt</a><br><a href="https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt">https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt</a></li></ul><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>Rule Providers 配置方式</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">rule-providers:</span><br>  <span class="hljs-attr">reject:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/reject.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">icloud:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/icloud.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">apple:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/apple.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">google:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/google.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">proxy:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/proxy.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">direct:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/direct.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">private:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/private.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">gfw:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/gfw.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">tld-not-cn:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">domain</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/tld-not-cn.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">telegramcidr:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">ipcidr</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/telegramcidr.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">cncidr:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">ipcidr</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/cncidr.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">lancidr:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">ipcidr</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/lancidr.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br><br>  <span class="hljs-attr">applications:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">http</span><br>    <span class="hljs-attr">behavior:</span> <span class="hljs-string">classical</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt&quot;</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">./ruleset/applications.yaml</span><br>    <span class="hljs-attr">interval:</span> <span class="hljs-number">86400</span><br></code></pre></td></tr></table></figure><h3 id="白名单模式-Rules-配置方式（推荐）"><a href="#白名单模式-Rules-配置方式（推荐）" class="headerlink" title="白名单模式 Rules 配置方式（推荐）"></a>白名单模式 Rules 配置方式（推荐）</h3><ul><li>白名单模式，意为「没有命中规则的网络流量，统统使用代理」，适用于服务器线路网络质量稳定、快速，不缺服务器流量的用户。</li><li>以下配置中，除了 DIRECT 和 REJECT 是默认存在于 Clash 中的 policy（路由策略&#x2F;流量处理策略），其余均为自定义 policy，对应配置文件中 proxies 或 proxy-groups 中的 name。如你直接使用下面的 rules 规则，则需要在 proxies 或 proxy-groups 中手动配置一个 name 为 PROXY 的 policy。</li><li>如你希望 Apple、iCloud 和 Google 列表中的域名使用代理，则把 policy 由 DIRECT 改为 PROXY，以此类推，举一反三。</li><li>如你不希望进行 DNS 解析，可在 GEOIP 规则的最后加上 ,no-resolve，如 GEOIP,CN,DIRECT,no-resolve。</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">rules:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,applications,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">DOMAIN,clash.razord.top,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">DOMAIN,yacd.haishan.me,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,private,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,reject,REJECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,icloud,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,apple,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,google,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,proxy,PROXY</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,direct,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,lancidr,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,cncidr,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,telegramcidr,PROXY</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">GEOIP,LAN,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">GEOIP,CN,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">MATCH,PROXY</span><br></code></pre></td></tr></table></figure><h3 id="黑名单模式-Rules-配置方式"><a href="#黑名单模式-Rules-配置方式" class="headerlink" title="黑名单模式 Rules 配置方式"></a>黑名单模式 Rules 配置方式</h3><ul><li>黑名单模式，意为「只有命中规则的网络流量，才使用代理」，适用于服务器线路网络质量不稳定或不够快，或服务器流量紧缺的用户。通常也是软路由用户、家庭网关用户的常用模式。</li><li>以下配置中，除了 DIRECT 和 REJECT 是默认存在于 Clash 中的 policy（路由策略&#x2F;流量处理策略），其余均为自定义 policy，对应配置文件中 proxies 或 proxy-groups 中的 name。如你直接使用下面的 rules 规则，则需要在 proxies 或 proxy-groups 中手动配置一个 name 为 PROXY 的 policy。<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">rules:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,applications,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">DOMAIN,clash.razord.top,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">DOMAIN,yacd.haishan.me,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,private,DIRECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,reject,REJECT</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,tld-not-cn,PROXY</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,gfw,PROXY</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RULE-SET,telegramcidr,PROXY</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">MATCH,DIRECT</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>How to</tag>
      
      <tag>Github</tag>
      
      <tag>Clash</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决 git@github.com:Permission denied (publickey)</title>
    <link href="/2023/07/23/slove-git-github-com-Permission-denied-publickey/"/>
    <url>/2023/07/23/slove-git-github-com-Permission-denied-publickey/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在使用github作为hexo博客托管机的时候，经常会遇到 <a href="mailto:&#x67;&#x69;&#x74;&#64;&#103;&#x69;&#116;&#x68;&#117;&#x62;&#x2e;&#99;&#111;&#109;">&#x67;&#x69;&#x74;&#64;&#103;&#x69;&#116;&#x68;&#117;&#x62;&#x2e;&#99;&#111;&#109;</a>: Permission denied (publickey)，本文介绍如何（临时性）解决此问题</p><h1 id="进入macOS-ssh文件夹"><a href="#进入macOS-ssh文件夹" class="headerlink" title="进入macOS ssh文件夹"></a>进入macOS ssh文件夹</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/.ssh     <br></code></pre></td></tr></table></figure><h1 id="SSH-Key生成"><a href="#SSH-Key生成" class="headerlink" title="SSH Key生成"></a>SSH Key生成</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;xx@example.com&quot;</span><br><span class="hljs-comment">#  youremail@example.com改为自己的邮箱即可，途中会让你输入密码啥的，不需要管，一路回车即可，会生成你的ssh key。（如果重新生成的话会覆盖之前的ssh key）</span><br></code></pre></td></tr></table></figure><h1 id="验证命令"><a href="#验证命令" class="headerlink" title="验证命令"></a>验证命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -v git@github.com<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-agent -s<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-add ~/.ssh/id_rsa<br></code></pre></td></tr></table></figure><p>如果出现错误提示：<br>请执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">eval</span> `ssh-agent -s`<br></code></pre></td></tr></table></figure><p>后，继续执行命令 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-add ~/.ssh/id_rsa，<br></code></pre></td></tr></table></figure><h1 id="同步github"><a href="#同步github" class="headerlink" title="同步github"></a>同步github</h1><p>打开你刚刚生成的id_rsa.pub，将里面的内容复制，进入你的github账号，在settings下，SSH and GPG keys下new SSH key，title随便取一个名字，然后将id_rsa.pub里的内容复制到Key中，完成后Add SSH Key。</p><h1 id="验证key"><a href="#验证key" class="headerlink" title="验证key"></a>验证key</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>显示如下输出即表示暂时解决此问题：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">You<span class="hljs-symbol">&#x27;ve</span> successfully authenticated, but GitHub does <span class="hljs-keyword">not</span> provide shell <span class="hljs-keyword">access</span>.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>How to</tag>
      
      <tag>Github</tag>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Cloudflare申请免费https证书</title>
    <link href="/2023/07/23/https-certificate-apply-on-the-cloudflare-for-free/"/>
    <url>/2023/07/23/https-certificate-apply-on-the-cloudflare-for-free/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>您是否注意过网址栏上的小锁🔒或者https这四个字母？它们代表了什么意义呢？</p><p>Https是一种网络协议，它可以保证您在网站上输入的信息，比如密码、银行卡号、个人信息等，不会被其他人窃取或篡改。它也可以防止您访问的网站被恶意篡改或伪造，从而保护您的权益和安全。</p><p>如果一个网站没有使用https协议，那么您在网站上的一切操作都可能被其他人监视或干扰。这就像您在大街上大声说出自己的秘密一样，任何人都可以听到或者插嘴。而使用https协议的网站，就像您和对方用加密的对讲机通话一样，只有您和对方能听到或者说话，其他人即使截获了信号也无法破解。</p><h3 id="1-绑定域名"><a href="#1-绑定域名" class="headerlink" title="1.绑定域名"></a>1.绑定域名</h3><p> ……略</p><h3 id="2-SSL-x2F-TLS设置"><a href="#2-SSL-x2F-TLS设置" class="headerlink" title="2.SSL&#x2F;TLS设置"></a>2.SSL&#x2F;TLS设置</h3><p>将加密模式改为：完全</p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307232015432.png"></p><h3 id="3-边缘证书-x2F-客户端证书"><a href="#3-边缘证书-x2F-客户端证书" class="headerlink" title="3.边缘证书&#x2F;客户端证书"></a>3.边缘证书&#x2F;客户端证书</h3><p>……此处可按全部默认</p><h3 id="4-源服务器"><a href="#4-源服务器" class="headerlink" title="4.源服务器"></a>4.源服务器</h3><ul><li>按默认，</li><li>如果只代理单一网页，主机名这里只要保留一个具体网址，去掉带 * 的域名</li></ul><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307232015633.png"></p><ul><li>创建之后，将私钥和源证书复制到自己的服务器</li><li>确认返回到DNS设置</li></ul><h3 id="5-DNS设置"><a href="#5-DNS设置" class="headerlink" title="5.DNS设置"></a>5.DNS设置</h3><p>代理状态改为：已代理</p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307232016574.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>How to</tag>
      
      <tag>VPS</tag>
      
      <tag>Cloudflare</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github：设置自己私有床图</title>
    <link href="/2023/07/23/picture-bed-build-on-Github/"/>
    <url>/2023/07/23/picture-bed-build-on-Github/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天我想和你聊聊图床对于blog而言，为什么很重要。图床是一个可以存储和展示图片的网络服务，它可以让你的blog更加美观和丰富。有了图床，你就不用担心图片占用你的空间和流量，也不用担心图片加载速度慢或者失效。图床还可以提供一些编辑和管理图片的功能，让你的blog更加个性化和专业。总之，图床是一个blog的好帮手，如果你还没有使用图床，那么赶快试试吧！</p><h4 id="1-注册github账号"><a href="#1-注册github账号" class="headerlink" title="1.注册github账号"></a>1.注册github账号</h4><p>略</p><h4 id="2-新建一个仓库"><a href="#2-新建一个仓库" class="headerlink" title="2.新建一个仓库"></a>2.新建一个仓库</h4><p><img src="https://raw.githubusercontent.com/justincnn/pictures/master/create_new_repo.png"></p><h4 id="3-生成一个token用于PicGo操作你的仓库："><a href="#3-生成一个token用于PicGo操作你的仓库：" class="headerlink" title="3.生成一个token用于PicGo操作你的仓库："></a>3.生成一个token用于PicGo操作你的仓库：</h4><p>访问：<a href="https://github.com/settings/tokens">生成token</a></p><ul><li><p>点击Generate new token<br><img src="https://raw.githubusercontent.com/justincnn/pictures/master/generate_new_token.png"></p></li><li><p>repo的勾打上。点击Generate token生成token<br><img src="https://raw.githubusercontent.com/justincnn/pictures/master/20180508210435.png"></p></li><li><p>这个token生成后只会显示一次！你要把这个token复制一下存到其他地方以备以后要用<br><img src="https://raw.githubusercontent.com/justincnn/pictures/master/copy_token.png"></p></li></ul><h4 id="4-配置图床工具poco"><a href="#4-配置图床工具poco" class="headerlink" title="4.配置图床工具poco"></a>4.配置图床工具poco</h4><ul><li><p>设定仓库名：按照 用户名&#x2F;仓库名 的格式填写（就是刚才创建的仓库）</p></li><li><p>设定分支名：master</p></li><li><p>设定 Token：粘贴之前叫你保存的Token。</p></li><li><p>设定自定义域名：它的的作用是，在图片上传后，PicGo 会按照自定义域名+上传的图片名的方式生成访问链接，放到粘贴板上。<br><code>https://cdn.jsdelivr.net/gh/用户名/仓库名</code></p></li></ul><p><img src="https://raw.githubusercontent.com/justincnn/pictures/master/setup_github.png"></p><h4 id="5-参考文献"><a href="#5-参考文献" class="headerlink" title="5. 参考文献"></a>5. 参考文献</h4><p>感谢<a href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html#github%E5%9B%BE%E5%BA%8A">poco官网</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>How to</tag>
      
      <tag>Github</tag>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Sublime:Markdown 预览设置</title>
    <link href="/2023/07/23/Sublime-Markdown-preview-settings/"/>
    <url>/2023/07/23/Sublime-Markdown-preview-settings/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Markdown是一种简单而强大的文本格式化语言，可以让你用很少的标记就能创造出漂亮的文档。Sublime是一款优秀的代码编辑器，它支持多种语言和功能，包括markdown。要在Sublime中编辑markdown文件，你需要安装一些插件和主题，这样你就可以享受到语法高亮、实时预览、快捷键等便利。下面我就来告诉你具体的步骤。</p><h3 id="1-安装Install-Package-Control"><a href="#1-安装Install-Package-Control" class="headerlink" title="1. 安装Install Package Control"></a>1. 安装Install Package Control</h3><p><code>Win/Linux: ctrl+shift+p, Mac: cmd+shift+p</code></p><p>输入,并回车</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">Install</span> <span class="hljs-built_in">Package</span> <span class="hljs-built_in">Control</span><br></code></pre></td></tr></table></figure><h3 id="2-sublime插件安装"><a href="#2-sublime插件安装" class="headerlink" title="2.sublime插件安装"></a>2.sublime插件安装</h3><ul><li><p>调出控制台<br><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202305272023577.png"></p></li><li><p>安装 MarkdownEditing、MarkdownPreview、LiveReload<br><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202305272027035.png"></p></li><li><p>运行一次打开网页预览后，每次修改.md文件后保存即可实时自动刷新网页预览。<br>Preferences &gt; Package Settings &gt; LiveReload &gt; Settings User，<br>在user的配置文件中加入如下设置并保存：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&#123;<span class="hljs-string">&quot;enabled_plugins&quot;</span>: [<span class="hljs-string">&quot;SimpleReloadPlugin&quot;</span>,<span class="hljs-string">&quot;SimpleRefresh&quot;</span>]&#125;,<br></code></pre></td></tr></table></figure></li></ul><h3 id="3-设置MarkdownPreview-LiveReload实时刷新网页预览"><a href="#3-设置MarkdownPreview-LiveReload实时刷新网页预览" class="headerlink" title="3.设置MarkdownPreview + LiveReload实时刷新网页预览"></a>3.设置MarkdownPreview + LiveReload实时刷新网页预览</h3><ul><li>常规Ctrl+Shift+P方法<br>组合键 Ctrl+Shift+P 调出命令面板，找到并选中Markdown Preview： Preview in Browser<br>出现两个选项：github和markdown，任选其一即可。</li><li>自定义快捷键打开<br>Markdown Preview默认没有快捷键，我们可以自己为Markdown Preview： Preview in Browser设置快捷键。<br>方法是在Preferences -&gt; Key Bindings打开的文件的右侧栏的中括号中添加一行代码：<figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&#123; <span class="hljs-string">&quot;keys&quot;</span>: [<span class="hljs-string">&quot;option+m&quot;</span>], <span class="hljs-string">&quot;command&quot;</span>: <span class="hljs-string">&quot;markdown_preview&quot;</span>, <span class="hljs-string">&quot;args&quot;</span>: &#123;<span class="hljs-string">&quot;target&quot;</span>: <span class="hljs-string">&quot;browser&quot;</span>, <span class="hljs-string">&quot;parser&quot;</span>:<span class="hljs-string">&quot;markdown&quot;</span>&#125;  &#125;<br></code></pre></td></tr></table></figure></li></ul><p>以上两种方式本质是同一种方法，每次预览都要打开一个新的网页才能看到修改的效果，我们希望它能自动刷新网页预览。</p><ul><li>LiveReload是一个可实时刷新的插件，</li></ul><p>不仅可用于Markdown，也可用于HTML等。Ctrl+shift+p找到LiveReload: Enable&#x2F;disable plug-ins,然后回车, 选择 Simple Reload with delay (400ms)或者Simple Reload，两者的区别仅仅在于后者没有延迟。</p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202305272033901.png"></p><h3 id="感谢csdn的原文"><a href="#感谢csdn的原文" class="headerlink" title="感谢csdn的原文"></a>感谢csdn的原文</h3><p>参考文献：<a href="https://sophia-fez.blog.csdn.net/article/details/106969639?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-106969639-blog-127178668.235%5Ev36%5Epc_relevant_anti_vip_base&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-106969639-blog-127178668.235%5Ev36%5Epc_relevant_anti_vip_base&utm_relevant_index=2">Sublime配置markdown环境</a></p><h3 id="如何删除sublime插件"><a href="#如何删除sublime插件" class="headerlink" title="如何删除sublime插件"></a>如何删除sublime插件</h3><ul><li>调出命令框</li><li>输入代码,回车<figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-comment">remove package</span><br></code></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202305272037284.png"></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>How to</tag>
      
      <tag>Mac</tag>
      
      <tag>Script</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Telegram：如何申请信息推送机器人</title>
    <link href="/2023/07/23/Message-push-channel-telegram-bot-token-and-ID-generation/"/>
    <url>/2023/07/23/Message-push-channel-telegram-bot-token-and-ID-generation/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>随着现在大家对于垃圾推送的抗拒，特别是国内一些手机厂和部分大厂app的垃圾推送。让推送开始慢慢变成一种贬义词。其实还在黑莓机的年代，推送是一种高端且舒服的信息及时获取渠道。</p><p>虽然大厂的信息推送很垃圾，但是我们可以建立自己的消息推送渠道，出了bark外，推荐telegram的机器人服务。</p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307231625434.png"></p><h3 id="1-添加机器人生成工具"><a href="#1-添加机器人生成工具" class="headerlink" title="1.添加机器人生成工具"></a>1.添加机器人生成工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">@botfather<br></code></pre></td></tr></table></figure><h3 id="2-生成推送机器人"><a href="#2-生成推送机器人" class="headerlink" title="2.生成推送机器人"></a>2.生成推送机器人</h3><p>点击工具开始，输入名录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/newbot<br></code></pre></td></tr></table></figure><h3 id="3-输入ID"><a href="#3-输入ID" class="headerlink" title="3.输入ID"></a>3.输入ID</h3><p>输入你自己需要的id，必须以bot结尾，比如<br><code>telegram_bot</code></p><h3 id="4-获取token"><a href="#4-获取token" class="headerlink" title="4.获取token"></a>4.获取token</h3><p>对于下面的token，需要保密<br><code> token: 1287833603:AAGmx9hQq6ViT3km0_77z8psBGqUKfdpSHY</code></p><h3 id="5-获取ID"><a href="#5-获取ID" class="headerlink" title="5.获取ID"></a>5.获取ID</h3><h5 id="i-添加机器人为好友"><a href="#i-添加机器人为好友" class="headerlink" title="i 添加机器人为好友"></a>i 添加机器人为好友</h5><h5 id="ii-在浏览器打开网址"><a href="#ii-在浏览器打开网址" class="headerlink" title="ii 在浏览器打开网址"></a>ii 在浏览器打开网址</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>api.telegram.org<span class="hljs-regexp">/botXXX:YYYY/g</span>etUpdates<br></code></pre></td></tr></table></figure><p>将 XXX:YYYY 替换为您的机器人令牌，如：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>api.telegram.org<span class="hljs-regexp">/bot1287833603:AAGmx9hQq6ViT3km0_77z8psBGqUKfdpSHY/g</span>etUpdates<br></code></pre></td></tr></table></figure><h5 id="iii-查找ID"><a href="#iii-查找ID" class="headerlink" title="iii 查找ID"></a>iii 查找ID</h5><p> “chat”:{“id”:-zzzzzzzzzz，-zzzzzzzzzz 是您的聊天 ID（带有负号）。</p><h5 id="iv-测试"><a href="#iv-测试" class="headerlink" title="iv 测试"></a>iv 测试</h5><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">curl</span> -X POST <span class="hljs-string">&quot;https://api.telegram.org/botXXX:YYYY/sendMessage&quot;</span> -d <span class="hljs-string">&quot;chat_id=-zzzzzzzzzz&amp;text=my sample text&quot;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>How to</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS:一键增加SWAP内存</title>
    <link href="/2023/07/23/VPS-One-click-increase-SWAP/"/>
    <url>/2023/07/23/VPS-One-click-increase-SWAP/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>很多人的VPS服务器由于内存太小，会导致很多进程被杀掉，这时候就需要我们添加Swap虚拟内存了，这里就整了个一键脚本方便懒人或小白使用。</p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307231622278.png"></p><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>提示：脚本不支持OpenVZ架构，安装会自动退出</p><h3 id="查看现有swap"><a href="#查看现有swap" class="headerlink" title="查看现有swap"></a>查看现有swap</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">free -h</span><br></code></pre></td></tr></table></figure><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/zhucaidan/</span>swap.sh<span class="hljs-regexp">/main/</span>swap.sh &amp;&amp; bash swap.sh<br></code></pre></td></tr></table></figure><p>添加swap的时候填写纯数字，默认单位为M</p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p>感谢<a href="https://github.com/zhucaidan/swap.sh">Linux VPS一键添加&#x2F;删除Swap虚拟内存</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Script</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker:常用命令（不定期更新）</title>
    <link href="/2023/07/23/Docker-common-command-record/"/>
    <url>/2023/07/23/Docker-common-command-record/</url>
    
    <content type="html"><![CDATA[<h4 id="记一些不常用的命令是一件很麻烦的事，此文用以记录一些常用的docker命令"><a href="#记一些不常用的命令是一件很麻烦的事，此文用以记录一些常用的docker命令" class="headerlink" title="记一些不常用的命令是一件很麻烦的事，此文用以记录一些常用的docker命令"></a>记一些不常用的命令是一件很麻烦的事，此文用以记录一些常用的docker命令</h4><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307231618191.png"></p><h4 id="列出所有的容器-ID"><a href="#列出所有的容器-ID" class="headerlink" title="列出所有的容器 ID"></a>列出所有的容器 ID</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker ps -aq</span><br></code></pre></td></tr></table></figure><h4 id="停止所有的容器"><a href="#停止所有的容器" class="headerlink" title="停止所有的容器"></a>停止所有的容器</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">docker stop $(docker ps -aq)</span><br><span class="hljs-section">~~~~</span><br><br>#### 删除所有的容器<br></code></pre></td></tr></table></figure><p>docker rm $(docker ps -aq)</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>#### 删除所有不使用的镜像<br></code></pre></td></tr></table></figure><p>docker image prune –force –all</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ~">或者<br></code></pre></td></tr></table></figure><p>docker image prune -f -a&#96; : </p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>#### 删除所有停止的容器<br></code></pre></td></tr></table></figure><p>docker container prune -f</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br><br>#### 复制文件<br></code></pre></td></tr></table></figure><p>docker cp mycontainer:&#x2F;opt&#x2F;file.txt &#x2F;opt&#x2F;local&#x2F;<br>docker cp &#x2F;opt&#x2F;local&#x2F;file.txt mycontainer:&#x2F;opt&#x2F;</p><pre><code class="hljs"></code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Oracle：如何开放Ubuntu VPS全部端口</title>
    <link href="/2023/07/23/Oracle-open-all-ports-of-Ubuntu/"/>
    <url>/2023/07/23/Oracle-open-all-ports-of-Ubuntu/</url>
    
    <content type="html"><![CDATA[<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>在甲骨文的后台先开放所有的端口</p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307231616878.png"></p><h3 id="1-切换到root用户"><a href="#1-切换到root用户" class="headerlink" title="1.切换到root用户"></a>1.切换到root用户</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">sudo -<span class="hljs-selector-tag">i</span><br></code></pre></td></tr></table></figure><h3 id="2-开放所有端口"><a href="#2-开放所有端口" class="headerlink" title="2.开放所有端口"></a>2.开放所有端口</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">sudo iptables -<span class="hljs-selector-tag">P</span> <span class="hljs-selector-tag">INPUT</span> ACCEPT<br></code></pre></td></tr></table></figure><figure class="highlight tp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tp">sudo iptables -<span class="hljs-keyword">P</span> FORWARD <span class="hljs-keyword">ACC</span>EPT<br></code></pre></td></tr></table></figure><figure class="highlight tp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tp">sudo iptables -<span class="hljs-keyword">P</span> OUTPUT <span class="hljs-keyword">ACC</span>EPT<br></code></pre></td></tr></table></figure><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo iptables -F</span><br></code></pre></td></tr></table></figure><h3 id="3-Oracle自带的Ubuntu镜像默认设置了Iptable规则，关闭它"><a href="#3-Oracle自带的Ubuntu镜像默认设置了Iptable规则，关闭它" class="headerlink" title="3.Oracle自带的Ubuntu镜像默认设置了Iptable规则，关闭它"></a>3.Oracle自带的Ubuntu镜像默认设置了Iptable规则，关闭它</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">apt-<span class="hljs-built_in">get</span> purge netfilter-persistent<br></code></pre></td></tr></table></figure><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">reboot</span><br></code></pre></td></tr></table></figure><h3 id="4-强制删除规则"><a href="#4-强制删除规则" class="headerlink" title="4.强制删除规则"></a>4.强制删除规则</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">rm -rf <span class="hljs-regexp">/etc/i</span>ptables &amp;&amp; reboot<br></code></pre></td></tr></table></figure><h3 id="5-删除oracle-cloud-agent，防止甲骨文监控"><a href="#5-删除oracle-cloud-agent，防止甲骨文监控" class="headerlink" title="5.删除oracle-cloud-agent，防止甲骨文监控"></a>5.删除oracle-cloud-agent，防止甲骨文监控</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">snap <span class="hljs-built_in">remove</span> oracle-cloud-agent<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>How to</tag>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>Ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Cloudflare:如何利用代理你的VPS IP</title>
    <link href="/2023/07/23/Cloudflare-%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8%E4%BB%A3%E7%90%86%E4%BD%A0%E7%9A%84VPS-IP/"/>
    <url>/2023/07/23/Cloudflare-%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8%E4%BB%A3%E7%90%86%E4%BD%A0%E7%9A%84VPS-IP/</url>
    
    <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>使用 Cloudflare 代理 VPS IP 有几个好处：</p><ul><li><p>隐藏 IP 地址：VPS IP 是可以公开访问的，如果攻击者知道您的 IP 地址，他们可能会对您的服务器进行攻击。使用 Cloudflare 代理可以隐藏实际的 IP 地址，使攻击者无法直接访问您的服务器。</p></li><li><p>加速网站：Cloudflare 具有全球分布的 CDN（内容分发网络），可以帮助加速您的网站。Cloudflare 会将您的网站内容缓存在其服务器上，并自动选择最接近访问者的服务器提供网站内容，从而减少访问延迟。</p></li><li><p>防御 DDoS 攻击：Cloudflare 可以为您的网站提供 DDoS 攻击防护。它使用高级算法来检测和防御各种类型的 DDoS 攻击。</p></li><li><p>简化 SSL 部署：Cloudflare 可以为您的网站提供免费的 SSL 证书，并自动更新证书。这可以帮助简化 SSL 部署，并确保您的网站使用安全的 HTTPS 连接。</p><p>  使用 Cloudflare 代理 VPS IP 可以提高网站的安全性和性能，并简化 SSL 部署。</p><p>  <img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307231611982.png"></p></li></ul><h4 id="DNS托管到Cloudflare"><a href="#DNS托管到Cloudflare" class="headerlink" title="DNS托管到Cloudflare"></a>DNS托管到Cloudflare</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">略<br></code></pre></td></tr></table></figure><h4 id="将域名解析道Cloudflare"><a href="#将域名解析道Cloudflare" class="headerlink" title="将域名解析道Cloudflare"></a>将域名解析道Cloudflare</h4><p><img src="https://img1.imgtp.com/2023/05/15/aejIOjMv.png" alt="截屏2023-05-15 22.19.21.png"></p><h6 id="子域名"><a href="#子域名" class="headerlink" title="子域名"></a>子域名</h6><p>如果需要解析二级或者其他子域名，只需要在域名前+前缀，并备注指向ip就行</p>]]></content>
    
    
    
    <tags>
      
      <tag>How to</tag>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac:Slicon Mac上查看硬盘写入量的方法</title>
    <link href="/2023/07/23/Mac-Slicon-Mac%E4%B8%8A%E6%9F%A5%E7%9C%8B%E7%A1%AC%E7%9B%98%E5%86%99%E5%85%A5%E9%87%8F%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <url>/2023/07/23/Mac-Slicon-Mac%E4%B8%8A%E6%9F%A5%E7%9C%8B%E7%A1%AC%E7%9B%98%E5%86%99%E5%85%A5%E9%87%8F%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>苹果公司于2020年推出了搭载M1芯片的Mac电脑，这款新型号的电脑在性能方面表现优异，吸引了众多用户的关注。然而，随着M1 Mac电脑的普及，一些用户开始关注硬盘的使用情况。特别是，很多用户注意到他们的硬盘写入量异常高，这可能会影响硬盘寿命和整体性能。那么，如何查看M1 Mac电脑的硬盘写入量？</p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307231607949.png"></p><h3 id="1-安装-smartctl"><a href="#1-安装-smartctl" class="headerlink" title="1.安装 smartctl"></a>1.安装 smartctl</h3><p>在终端中输入如下代码，即可进行安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install smartmontools<br></code></pre></td></tr></table></figure><p>在终端输入 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">smartctl<br></code></pre></td></tr></table></figure><p>如果没有报错则说明安装成功了。</p><h3 id="2-查看硬盘使用量"><a href="#2-查看硬盘使用量" class="headerlink" title="2.查看硬盘使用量"></a>2.查看硬盘使用量</h3><p>在终端中输入如下代码，即可进行看查硬盘使用量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">smartctl -a disk0<br></code></pre></td></tr></table></figure><p>结果如下，里面的Percentage Used 就是损耗值，Data Units Written 就是写入量。</p><h3 id="3-如何卸载"><a href="#3-如何卸载" class="headerlink" title="3.如何卸载"></a>3.如何卸载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew uninstall smartmontools <br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>How to</tag>
      
      <tag>Mac</tag>
      
      <tag>Script</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSH:更改端口防止网络攻击</title>
    <link href="/2023/07/23/SSH-Change-Port-to-Protect-Your-Server-From-Malicious-Attacks/"/>
    <url>/2023/07/23/SSH-Change-Port-to-Protect-Your-Server-From-Malicious-Attacks/</url>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>当您在使用 VPS 时，SSH（Secure Shell）是一种重要的远程连接协议，它可以帮助您通过命令行访问您的 VPS，管理您的服务器和应用程序。然而，如果您的 SSH 端口设置为默认端口22，那么您的服务器就面临着被攻击者攻击的风险。黑客可以使用自动化的脚本扫描您的服务器并尝试使用暴力破解方法攻击您的 SSH 连接。这可能会导致安全漏洞和服务器被入侵。</p><p>为了保护您的 VPS 免受这种类型的攻击，您需要更改 SSH 端口，这是一种简单而有效的安全措施。适合常见的CentOS&#x2F;Fedora&#x2F;RedHat、Debian&#x2F;Ubuntu等常见的Linux发行版。</p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307231603742.png"></p><h4 id="1、备份原sshd配置文件"><a href="#1、备份原sshd配置文件" class="headerlink" title="1、备份原sshd配置文件"></a>1、备份原sshd配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /etc/ssh/sshd_config /etc/ssh/sshd_config.backup<br>~~~~<br><br><span class="hljs-comment">#### 2、修改sshd配置文件</span><br><br>可以使用winscp、nano、vim之类的软件编辑 <br>~~~bash<br>vi /etc/ssh/sshd_config<br></code></pre></td></tr></table></figure><p>查找Port 22，有可能 Port 22 是注释的(即前面有#号，有的话删掉 # 号)。</p><p>在 Port 22 下面添加一行 Port 3322  其中3322为你更改SSH后的端口。</p><p>这里建议先保留原来的22端口，待新的SSH端口测试正常工作后再删掉原Port 22 端口行。</p><p>修改完成后保存。</p><h4 id="3、重启SSH服务器"><a href="#3、重启SSH服务器" class="headerlink" title="3、重启SSH服务器"></a>3、重启SSH服务器</h4><p>重启SSH服务器命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl restart sshd<br></code></pre></td></tr></table></figure><p>如果没有systemctl的话可以执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/etc/init.d/sshd restart <br></code></pre></td></tr></table></figure><p>或 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/etc/init.d/ssh restart<br></code></pre></td></tr></table></figure><p>如果没有报错的话就生效了，可以 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ss -ntl <br></code></pre></td></tr></table></figure><p>或 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netstat -ntl <br></code></pre></td></tr></table></figure><p>查看一下端口。</p><h4 id="4、防火墙、安全组规则设置"><a href="#4、防火墙、安全组规则设置" class="headerlink" title="4、防火墙、安全组规则设置"></a>4、防火墙、安全组规则设置</h4><p>iptables添加SSH新端口规则：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables -A INPUT -p tcp --dport 3322 -j ACCEPT             <span class="hljs-comment">#3322替换为新的端口#</span><br></code></pre></td></tr></table></figure><p>然后保存iptables规则</p><p>firewalld添加SSH新端口规则：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --zone=public --add-port=3322/tcp             <span class="hljs-comment">#3322替换为新的端口#</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --reload             <span class="hljs-comment">#重载firewalld#</span><br></code></pre></td></tr></table></figure><p>阿里云之类的安全组规则添加SSH新端口规则：</p><p>阿里云之类的有安全组之类设置的云服务器一定要在安全组规则里将新端口添加到“入方向”的允许规则。</p><h4 id="转载文献"><a href="#转载文献" class="headerlink" title="转载文献"></a>转载文献</h4><p><a href="https://www.vpser.net/security/centos-debian-ubuntu-linux-change-ssh-port.html">VPS侦探：CentOS&#x2F;Debian&#x2F;Ubuntu Linux修改SSH默认22端口</a></p><h3 id="第二种方案：适用于oracle-linux"><a href="#第二种方案：适用于oracle-linux" class="headerlink" title="第二种方案：适用于oracle linux"></a>第二种方案：适用于oracle linux</h3><h4 id="i-查看ssh默认绑定端口"><a href="#i-查看ssh默认绑定端口" class="headerlink" title="i.查看ssh默认绑定端口"></a>i.查看ssh默认绑定端口</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">semanage port -l | grep ssh<br></code></pre></td></tr></table></figure><hr><p>ssh_port_t                     tcp      22</p><h4 id="ii-添加新端口（以，12345为例）"><a href="#ii-添加新端口（以，12345为例）" class="headerlink" title="ii.添加新端口（以，12345为例）"></a>ii.添加新端口（以，12345为例）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 注意名称是 ssh_port_t</span><br>semanage port -a -t ssh_port_t -p tcp 12345<br></code></pre></td></tr></table></figure><h4 id="iii-验证下是否添加成功"><a href="#iii-验证下是否添加成功" class="headerlink" title="iii.验证下是否添加成功"></a>iii.验证下是否添加成功</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">semanage port -l | grep ssh<br></code></pre></td></tr></table></figure><hr><p>ssh_port_t                     tcp   12345, 22</p><h4 id="iv-参数解释"><a href="#iv-参数解释" class="headerlink" title="iv.参数解释"></a>iv.参数解释</h4><ul><li>-l：查看记录</li><li>-a：添加</li><li>-m：修改</li><li>-d：删除</li><li>-t：添加类型</li><li>-p：指定端口类型（tcp、udp</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Gacm:Mi 11 摄像头参数</title>
    <link href="/2023/07/23/Gacm-Mi-11-camera-parameters/"/>
    <url>/2023/07/23/Gacm-Mi-11-camera-parameters/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Google相机（GCam）是一款基于Android系统的相机应用程序，具有比一般相机更出色的算法和处理技术。对于小米11这样的高端智能手机而言，使用GCam可以显著提升摄像头的性能和画质。相比原厂相机应用，GCam提供了更高质量的图片和视频，特别是在光线不足的情况下，能够获得更多的细节和色彩。此外，GCam还支持更多的功能和调整选项，用户可以根据自己的需求进行个性化设置，更好地掌控摄像头的表现。</p><p>对于小米11手机用户而言，想要优化其摄像头效果，使用gcam软件是一个不错的选择。但是，gcam的参数设置相对较为复杂，需要一定的技术和操作经验。对于不熟悉该软件的用户来说，设置过程可能会遇到一些困难和挑战。例如，需要了解不同的参数含义及其对照表，需要耐心调试和尝试，还需要保证手机越狱或解锁状态等。因此，对于一般用户而言，可能需要花费一定的时间和精力来进行gcam的参数设置，但是最终的摄像头效果提升将是值得的。</p><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307231559004.jpg"></p><p>下面是一些小米摄像头的参数供参考</p><h3 id="全局参数"><a href="#全局参数" class="headerlink" title="全局参数"></a>全局参数</h3><ul><li>Hardware Level：Level 3</li><li>Viewfinder Format：YUV</li></ul><h3 id="后置主摄"><a href="#后置主摄" class="headerlink" title="后置主摄"></a>后置主摄</h3><ul><li>108MP</li><li>f&#x2F;1.33</li><li>1.6µm</li><li>OIS</li><li>S5KHMX</li></ul><h3 id="后置广角"><a href="#后置广角" class="headerlink" title="后置广角"></a>后置广角</h3><ul><li>13MP</li><li>f&#x2F;2.4</li><li>123度</li><li>OV13B10</li></ul><h3 id="后置微距"><a href="#后置微距" class="headerlink" title="后置微距"></a>后置微距</h3><ul><li>5MP</li><li>S5K5E9</li></ul><h3 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h3><ul><li>20MP</li><li>S5K3T2</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OPENAI:国内用户如何无墙访问</title>
    <link href="/2023/07/23/OPENAI-How-to-Make-ChatGPT-Accessible-to-Domestic-Users/"/>
    <url>/2023/07/23/OPENAI-How-to-Make-ChatGPT-Accessible-to-Domestic-Users/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>ChatGPT 是一个基于英语的自然语言处理技术的大型语言模型，由 OpenAI 开发并维护。在国内使用 ChatGPT 面临以下困难：</p><ul><li><p>注册难：由于 ChatGPT 是由外国公司开发和维护的，因此需要通过国际互联网进行注册，需要填写个人信息等敏感信息，这对于一些用户来说可能会有隐私安全的顾虑。</p></li><li><p>充值难：由于 ChatGPT 是一个付费的云服务，需要通过信用卡等国际支付方式进行充值。然而，由于中国大陆的金融监管政策限制，很多用户无法使用国际支付方式进行充值，这导致了使用 ChatGPT 的门槛较高。</p></li><li><p>网络封锁：由于 ChatGPT 的服务器在国外，受到中国大陆的网络封锁影响，使用 ChatGPT 时可能会遇到连接困难、网络不稳定等问题。此外，中国政府也对聊天机器人进行了严格的审查和限制，这也导致了 ChatGPT 在中国的使用面临了一定的限制和困难。</p></li></ul><h2 id="跨越网络的warp"><a href="#跨越网络的warp" class="headerlink" title="跨越网络的warp"></a>跨越网络的warp</h2><p>此为option，具体从下面的docker-compose选择来决定是否要运行此脚本</p><h3 id="1-Warp的好处"><a href="#1-Warp的好处" class="headerlink" title="1.Warp的好处"></a>1.Warp的好处</h3><p>1.1  支持 chatGPT，解锁奈飞流媒体<br>1.2 避免 Google 验证码或是使用 Google 学术搜索<br>1.3 可调用 IPv4 接口，使青龙和V2P等项目能正常运行<br>1.4 由于可以双向转输数据，能做对方VPS的跳板和探针，替代 HE tunnelbroker能让 IPv6 only VPS 上做的节点支持 Telegram<br>1.5 IPv6 建的节点能在只支持 IPv4 的 PassWall、ShadowSocksR Plus+ 上使用</p><h3 id="2-Warp-安装脚本"><a href="#2-Warp-安装脚本" class="headerlink" title="2.Warp 安装脚本"></a>2.Warp 安装脚本</h3><h5 id="option-1"><a href="#option-1" class="headerlink" title="option 1"></a>option 1</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -N --no-check-certificate https://cdn.jsdelivr.net/gh/mikupeto/warp-script/warp.sh &amp;&amp; bash warp.sh<br></code></pre></td></tr></table></figure><h5 id="option-2"><a href="#option-2" class="headerlink" title="option 2"></a>option 2</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -N https://raw.githubusercontent.com/fscarmen/warp/main/menu.sh &amp;&amp; bash menu.sh [option] [lisence]<br></code></pre></td></tr></table></figure><h3 id="3-Warp命令"><a href="#3-Warp命令" class="headerlink" title="3.Warp命令"></a>3.Warp命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">warp [option] [lisence]<br></code></pre></td></tr></table></figure><h3 id="4-Warp-Option-解释"><a href="#4-Warp-Option-解释" class="headerlink" title="4.Warp Option 解释"></a>4.Warp Option 解释</h3><table><thead><tr><th>[option] 变量1 变量2</th><th>具体动作说明</th></tr></thead><tbody><tr><td>h</td><td>帮助</td></tr><tr><td>4</td><td>原无论任何状态 -&gt; WARP IPv4</td></tr><tr><td>4 lisence name</td><td>把 WARP+ Lisence 和设备名添加进去，如 bash menu.sh 4 5670ljg-sS9jD334-6o6g4M9F Goodluck</td></tr><tr><td>6</td><td>原无论任何状态 -&gt; WARP IPv6</td></tr><tr><td>d</td><td>原无论任何状态 -&gt; WARP 双栈</td></tr><tr><td>o</td><td>WARP 开关，脚本主动判断当前状态，自动开或关</td></tr><tr><td>u</td><td>卸载 WARP</td></tr><tr><td>n</td><td>断网时，用于刷WARP网络 (WARP bug)</td></tr><tr><td>b</td><td>升级内核、开启BBR及DD</td></tr><tr><td>a</td><td>免费 WARP 账户升级 WARP+</td></tr><tr><td>a lisence</td><td>在上面基础上把 WARP+ Lisence 添加进去，如 bash menu.sh a N5670ljg-sS9jD334-6o6g4M9F</td></tr><tr><td>p</td><td>刷 Warp+ 流量</td></tr><tr><td>c</td><td>安装 WARP Linux Client，开启 Socks5 代理模式</td></tr><tr><td>l</td><td>安装 WARP Linux Client，开启 WARP 模式</td></tr><tr><td>c</td><td>lisence在上面基础上把 WARP+ Lisence 添加进去，如 bash menu.sh c N5670ljg-sS9jD334-6o6g4M9F</td></tr><tr><td>r</td><td>WARP Linux Client 开关</td></tr><tr><td>v</td><td>同步脚本至最新版本</td></tr><tr><td>i</td><td>更换 WARP IP</td></tr><tr><td>e</td><td>安装 iptables + dnsmasq + ipset 分流流媒体方案</td></tr><tr><td>w</td><td>安装 WireProxy 解决方案</td></tr><tr><td>y</td><td>WireProxy 开关</td></tr><tr><td>其他或空值</td><td>菜单界面</td></tr></tbody></table><h3 id="5-验证是否可以链接openai"><a href="#5-验证是否可以链接openai" class="headerlink" title="5.验证是否可以链接openai"></a>5.验证是否可以链接openai</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -Ls https://cpp.li/openai)<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -Ls https://cdn.jsdelivr.net/gh/missuo/OpenAI-Checker/openai.sh)<br></code></pre></td></tr></table></figure><p>如果输出如下内容，表示此步已经成功：</p><p><strong>Your IP supports access to OpenAI.</strong><br><img src="https://img1.imgtp.com/2023/05/07/OfxLcUbK.png" alt="截屏2023-05-07 09.08.25.png"></p><h3 id="6-参考链接"><a href="#6-参考链接" class="headerlink" title="6.参考链接"></a>6.参考链接</h3><p><a href="https://github.com/fscarmen/warp">服务器添加IPv4&#x2F;IPv6网络</a></p><h2 id="部署-go-chatgpt-api"><a href="#部署-go-chatgpt-api" class="headerlink" title="部署 go-chatgpt-api"></a>部署 go-chatgpt-api</h2><h3 id="1-防火墙设置（option）"><a href="#1-防火墙设置（option）" class="headerlink" title="1.防火墙设置（option）"></a>1.防火墙设置（option）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ufw allow 8080/tcp comment <span class="hljs-string">&#x27;chatgpt &#x27;</span> &amp;&amp; sudo ufw reload<br></code></pre></td></tr></table></figure><h3 id="2-VPS可直接访问Chatgpt的docker-compose-yml配置"><a href="#2-VPS可直接访问Chatgpt的docker-compose-yml配置" class="headerlink" title="2.VPS可直接访问Chatgpt的docker-compose.yml配置"></a>2.VPS可直接访问Chatgpt的docker-compose.yml配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">go-chatgpt-api:</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">go-chatgpt-api</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">linweiyuan/go-chatgpt-api</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8080</span><span class="hljs-string">:8080</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">GIN_MODE=release</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">GO_CHATGPT_API_PROXY=</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br></code></pre></td></tr></table></figure><h3 id="3-VPS自建如上Warp的docker-compose-yml"><a href="#3-VPS自建如上Warp的docker-compose-yml" class="headerlink" title="3.VPS自建如上Warp的docker-compose.yml"></a>3.VPS自建如上Warp的docker-compose.yml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">go-chatgpt-api:</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">go-chatgpt-api</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">linweiyuan/go-chatgpt-api</span><br>    <span class="hljs-attr">network_mode:</span> <span class="hljs-string">&quot;host&quot;</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8080</span><span class="hljs-string">:8080</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">GIN_MODE=release</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">GO_CHATGPT_API_PROXY=</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br></code></pre></td></tr></table></figure><h3 id="4-Docker内建Warp和API的docker-compose-yml"><a href="#4-Docker内建Warp和API的docker-compose-yml" class="headerlink" title="4.Docker内建Warp和API的docker-compose.yml"></a>4.Docker内建Warp和API的docker-compose.yml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">go-chatgpt-api:</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">go-chatgpt-api</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">linweiyuan/go-chatgpt-api</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8080</span><span class="hljs-string">:8080</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">GIN_MODE=release</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">GO_CHATGPT_API_PROXY=socks5://chatgpt-proxy-server-warp:65535</span><br>    <span class="hljs-attr">depends_on:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">chatgpt-proxy-server-warp</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br><br>  <span class="hljs-attr">chatgpt-proxy-server-warp:</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">chatgpt-proxy-server-warp</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">linweiyuan/chatgpt-proxy-server-warp</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">LOG_LEVEL=OFF</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br></code></pre></td></tr></table></figure><h3 id="5-Docker部署完后反代的地址："><a href="#5-Docker部署完后反代的地址：" class="headerlink" title="5.Docker部署完后反代的地址："></a>5.Docker部署完后反代的地址：</h3><p>5.1 如果是同一台VPS</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">http://172.17.0.1:8080/chatgpt/conversation</span><br></code></pre></td></tr></table></figure><p>5.2 若交由其他VPS使用</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">http://&lt;vps-ip&gt;:8080/chatgpt/conversation</span><br></code></pre></td></tr></table></figure><p>5.3 token模拟api：支持 ChatGPT 转 API，接口 &#x2F;imitate&#x2F;v1&#x2F;chat&#x2F;completions，利用 accessToken 模拟 apiKey，实现伪免费使用 API ，从而支持集成仅支持 apiKey 调用的第三方客户端项目</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">http://&lt;vps-ip&gt;:8080/imitate/v1/chat/completions</span><br></code></pre></td></tr></table></figure><p>Example：</p><p><a href="https://github.com/Yidadaa/ChatGPT-Next-Web">Yidadaa&#x2F;ChatGPT-Next-Web</a>的环境变量</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">BASE_URL=http://go-chatgpt-api:8080/imitate</span><br><span class="hljs-string">~~~~</span><br><br><span class="hljs-number">5.4</span> <span class="hljs-string">反代建立之后，回到api的docker查看日志：</span><br><span class="hljs-string">~~~bash</span><br><span class="hljs-string">docker-compose</span> <span class="hljs-string">logs</span> <span class="hljs-string">-f</span><br></code></pre></td></tr></table></figure><p>如果输出为200则代表成功，403和404都是无法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker logs -f  go-chatgpt-api<br><span class="hljs-comment"># [GIN] 2023/04/19 - 23:38:00 | 200 | 21.785759553s | 192.168.0.1 | POST     &quot;/conversation&quot;</span><br></code></pre></td></tr></table></figure><h3 id="6-参考链接-1"><a href="#6-参考链接-1" class="headerlink" title="6.参考链接"></a>6.参考链接</h3><p><a href="https://github.com/linweiyuan/go-chatgpt-api">go-chatgpt-api</a></p><h2 id="部署Chatgpt-Docker"><a href="#部署Chatgpt-Docker" class="headerlink" title="部署Chatgpt Docker"></a>部署Chatgpt Docker</h2><h3 id="1-获取API或者Token"><a href="#1-获取API或者Token" class="headerlink" title="1.获取API或者Token"></a>1.获取API或者Token</h3><ul><li>使用 OpenAI API Key 请填写 OPENAI_API_KEY 字段 (<a href="https://platform.openai.com/overview">获取 apiKey</a>)</li><li>使用 Web API 请填写 OPENAI_ACCESS_TOKEN 字段 ({获取 accessToken}(<a href="https://chat.openai.com/api/auth/session">https://chat.openai.com/api/auth/session</a>))</li></ul><h3 id="2-Docker-compose配置"><a href="#2-Docker-compose配置" class="headerlink" title="2.Docker-compose配置"></a>2.Docker-compose配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3&#x27;</span><br><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">app:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">chenzhaoyu94/chatgpt-web</span> <span class="hljs-comment"># 总是使用 latest ,更新时重新 pull 该 tag 镜像即可</span><br>    <span class="hljs-attr">network_mode:</span> <span class="hljs-string">&quot;host&quot;</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:3002:3002</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-comment"># 二选一</span><br>      <span class="hljs-attr">OPENAI_API_KEY:</span> <span class="hljs-string">sk-xxx</span><br>      <span class="hljs-comment"># 二选一</span><br>      <span class="hljs-attr">OPENAI_ACCESS_TOKEN:</span> <span class="hljs-string">xxx</span><br>      <span class="hljs-comment"># API接口地址，可选，设置 OPENAI_API_KEY 时可用</span><br>      <span class="hljs-attr">OPENAI_API_BASE_URL:</span> <span class="hljs-string">xxx</span><br>      <span class="hljs-comment"># API模型，可选，设置 OPENAI_API_KEY 时可用，https://platform.openai.com/docs/models</span><br>      <span class="hljs-comment"># gpt-4, gpt-4-0314, gpt-4-32k, gpt-4-32k-0314, gpt-3.5-turbo, gpt-3.5-turbo-0301, text-davinci-003, text-davinci-002, code-davinci-002</span><br>      <span class="hljs-attr">OPENAI_API_MODEL:</span> <span class="hljs-string">xxx</span><br>      <span class="hljs-comment"># 反向代理，可选，即为上文提到的反代</span><br>      <span class="hljs-attr">API_REVERSE_PROXY:</span> <span class="hljs-string">xxx</span><br>      <span class="hljs-comment"># 访问权限密钥，可选</span><br>      <span class="hljs-attr">AUTH_SECRET_KEY:</span> <span class="hljs-string">xxx</span><br>      <span class="hljs-comment"># 每小时最大请求次数，可选，默认无限</span><br>      <span class="hljs-attr">MAX_REQUEST_PER_HOUR:</span> <span class="hljs-number">0</span><br>      <span class="hljs-comment"># 超时，单位毫秒，可选</span><br>      <span class="hljs-attr">TIMEOUT_MS:</span> <span class="hljs-number">60000</span><br>      <span class="hljs-comment"># Socks代理，可选，和 SOCKS_PROXY_PORT 一起时生效</span><br>      <span class="hljs-attr">SOCKS_PROXY_HOST:</span> <span class="hljs-string">xxx</span><br>      <span class="hljs-comment"># Socks代理端口，可选，和 SOCKS_PROXY_HOST 一起时生效</span><br>      <span class="hljs-attr">SOCKS_PROXY_PORT:</span> <span class="hljs-string">xxx</span><br>      <span class="hljs-comment"># HTTPS 代理，可选，支持 http，https，socks5</span><br>      <span class="hljs-attr">HTTPS_PROXY:</span> <span class="hljs-string">http://xxx:7890</span><br></code></pre></td></tr></table></figure><h3 id="3-参考链接"><a href="#3-参考链接" class="headerlink" title="3. 参考链接"></a>3. 参考链接</h3><p><a href="https://github.com/Chanzhaoyu/chatgpt-web">ChatGPT Web</a></p><h3 id="4-备用反代方案"><a href="#4-备用反代方案" class="headerlink" title="4.备用反代方案"></a>4.备用反代方案</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">go-chatgpt-api:</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">go-chatgpt-api</span><br>    <span class="hljs-comment"># legacy是依赖chatgpt-proxy-server的，我个人测试比较稳定</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">linweiyuan/go-chatgpt-api:legacy</span> <br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8080</span><span class="hljs-string">:8080</span> <span class="hljs-comment"># 宿主机8080端口可按需改为其它端口</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">GIN_MODE=release</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">CHATGPT_PROXY_SERVER=http://chatgpt-proxy-server:9515</span><br>    <span class="hljs-attr">depends_on:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">chatgpt-proxy-server</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br> <br>  <span class="hljs-attr">chatgpt-proxy-server:</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">chatgpt-proxy-server</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">linweiyuan/chatgpt-proxy-server</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">LOG_LEVEL=INFO</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br></code></pre></td></tr></table></figure><ul><li><p>如果是同一台VPS</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">http://172.17.0.1:8080/conversation</span><br></code></pre></td></tr></table></figure></li><li><p>若交由其他VPS使用</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">http://&lt;vps-ip&gt;:8080/conversation</span><br></code></pre></td></tr></table></figure></li><li><p>web配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">app:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">chenzhaoyu94/chatgpt-web:latest</span> <span class="hljs-comment"># 总是使用 latest ,更新时重新 pull 该 tag 镜像即可</span><br>    <span class="hljs-attr">network_mode:</span> <span class="hljs-string">&quot;host&quot;</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">3002</span><span class="hljs-string">:3002</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-comment"># 二选一</span><br>      <span class="hljs-comment"># OPENAI_API_KEY: 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</span><br>      <span class="hljs-comment"># 二选一</span><br>      <span class="hljs-attr">OPENAI_ACCESS_TOKEN:</span><br>      <span class="hljs-comment"># API接口地址，可选，设置 OPENAI_API_KEY 时可用</span><br>      <span class="hljs-comment"># OPENAI_API_BASE_URL: xxx</span><br>      <span class="hljs-comment"># API模型，可选，设置 OPENAI_API_KEY 时可用</span><br>      <span class="hljs-attr">OPENAI_API_MODEL:</span> <span class="hljs-string">gpt-3.5-turbo</span><br>      <span class="hljs-comment"># 反向代理，可选</span><br>      <span class="hljs-attr">API_REVERSE_PROXY:</span> <span class="hljs-string">http://172.17.0.1:8080/conversation</span><br>      <span class="hljs-comment"># 访问权限密钥，可选</span><br>      <span class="hljs-attr">AUTH_SECRET_KEY:</span> <span class="hljs-string">Dhl123456,</span><br>      <span class="hljs-comment"># 每小时最大请求次数，可选，默认无限</span><br>      <span class="hljs-attr">MAX_REQUEST_PER_HOUR:</span> <span class="hljs-number">0</span><br>      <span class="hljs-comment"># 超时，单位毫秒，可选</span><br>      <span class="hljs-attr">TIMEOUT_MS:</span> <span class="hljs-number">60000</span><br>      <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>VPS</tag>
      
      <tag>Script</tag>
      
      <tag>Linux</tag>
      
      <tag>ChatGpt</tag>
      
      <tag>AI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu:如何安装 Docker and Docker Compose</title>
    <link href="/2023/07/23/Ubuntu-How-to-install-Docker-and-Docker-Compose/"/>
    <url>/2023/07/23/Ubuntu-How-to-install-Docker-and-Docker-Compose/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><ul><li><p>Docker是一种容器化技术，它能够让开发者打包应用程序和其依赖项成为一个独立的容器，并可以在任何地方运行这个容器，不受运行环境的限制。简单来说，Docker就像是一个小型的虚拟机，可以在其中运行应用程序。</p></li><li><p>Docker Compose是一个用于管理Docker容器的工具，它能够让开发者通过编写简单的YAML文件来定义并运行多个容器，协同工作。与Docker不同的是，Docker Compose更注重于在多个容器之间建立联系和协调，以实现更复杂的应用程序部署。它可以让开发者更方便地管理多个容器，减少容器之间的配置和交互的复杂度，从而更容易地构建和维护应用程序。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307231517150.png"></p><p>本文介绍下如何在Ubuntu下安装这两者，其他Linux也可参照</p><h3 id="安装Docker："><a href="#安装Docker：" class="headerlink" title="安装Docker："></a>安装Docker：</h3><p>1.1 更新包列表并安装必要的软件包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get update<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common<br></code></pre></td></tr></table></figure><p>1.2. 添加Docker的GPG密钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -<br></code></pre></td></tr></table></figure><p>1.3. 添加Docker的APT仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo add-apt-repository <span class="hljs-string">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu <span class="hljs-subst">$(lsb_release -cs)</span> stable&quot;</span><br></code></pre></td></tr></table></figure><p>1.4. 安装Docker CE：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get update<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install docker-ce docker-ce-cli containerd.io<br></code></pre></td></tr></table></figure><h3 id="安装Docker-Compose"><a href="#安装Docker-Compose" class="headerlink" title="安装Docker Compose"></a>安装Docker Compose</h3><p>2.1. 下载Docker Compose的二进制文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo curl -L <span class="hljs-string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="hljs-subst">$(uname -s)</span>-<span class="hljs-subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><p>2.2. 赋予docker-compose可执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">chmod</span> +x /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><p>2.3. 添加docker-compose到系统PATH中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">ln</span> -s /usr/local/bin/docker-compose /usr/bin/docker-compose<br></code></pre></td></tr></table></figure><p>2.4. 验证Docker Compose是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose --version<br></code></pre></td></tr></table></figure><p>如果Docker Compose版本号被正确显示，则说明安装成功。</p><h3 id="DockerGPG密钥的作用"><a href="#DockerGPG密钥的作用" class="headerlink" title="DockerGPG密钥的作用"></a>DockerGPG密钥的作用</h3><p>Docker的GPG密钥用于验证Docker软件包的真实性和完整性，以确保其未被篡改或恶意修改。当您从Docker官方仓库中下载Docker软件包时，您可以使用这个GPG密钥进行验证。如果您下载的软件包与Docker官方发布的软件包不匹配，GPG密钥验证将失败并给出警告。这有助于确保您下载的软件包是来自可信来源的，并且没有被篡改。</p>]]></content>
    
    
    
    <tags>
      
      <tag>How to</tag>
      
      <tag>Linux</tag>
      
      <tag>Ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MiTV:Hosts去广告大法</title>
    <link href="/2023/07/10/MiTV-How-to-remove-ADs-by-host/"/>
    <url>/2023/07/10/MiTV-How-to-remove-ADs-by-host/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>小米的东西很好，但是广告很不好</p><ul><li>屏蔽小米电视广告</li><li>屏蔽大部分小米电视自带程序升级</li><li>屏蔽小米电视系统升级</li></ul><h3 id="host配置："><a href="#host配置：" class="headerlink" title="host配置："></a>host配置：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs host"># 米家app需要前两行,不用米家可以取消注释<br># 127.0.0.1 api.io.mi.com<br># 127.0.0.1 device.io.mi.com<br><br>127.0.0.1 519332DA.rtc.youme.im<br>127.0.0.1 ad.doubleclick.net<br>127.0.0.1 ad.hpplay.cn<br>127.0.0.1 ad.mi.com<br>127.0.0.1 ad.xiaomi.com<br>127.0.0.1 ad1.xiaomi.com<br>127.0.0.1 adc.hpplay.cn<br>127.0.0.1 adcdn.hpplay.cn<br>127.0.0.1 adeng.hpplay.cn<br>127.0.0.1 admaster.com.cn<br>127.0.0.1 adv.sec.miui.com<br>127.0.0.1 alert.kuyun.com<br>127.0.0.1 alog.umeng.com<br>127.0.0.1 android.bugly.qq.com<br>127.0.0.1 api.ad.xiaomi.com<br>127.0.0.1 api.cupid.ptqy.gitv.tv<br>127.0.0.1 api.hpplay.com.cn<br>127.0.0.1 appstore.cdn.pandora.xiaomi.com<br>127.0.0.1 appstore.pandora.xiaomi.com<br>127.0.0.1 assistant.pandora.xiaomi.com<br>127.0.0.1 auth.api.gitv.tv<br>127.0.0.1 b.netcheck.gallery.pandora.xiaomi.com<br>127.0.0.1 broker.mqtt.pandora.xiaomi.com<br>127.0.0.1 bss.pandora.xiaomi.com<br>127.0.0.1 cdn.ad.xiaomi.com<br>127.0.0.1 cdn.hpplay.com.cn<br>127.0.0.1 cdn1.hpplay.cn<br>127.0.0.1 cloud.hpplay.cn<br>127.0.0.1 conf.hpplay.cn<br>127.0.0.1 config.kuyun.com<br>127.0.0.1 d1.xiaomi.com<br>127.0.0.1 data.mistat.xiaomi.com<br>127.0.0.1 de.pandora.xiaomi.com<br>127.0.0.1 devicemgr.hpplay.cn<br>127.0.0.1 dvb.pandora.xiaomi.com<br>127.0.0.1 e.ad.xiaomi.com<br>127.0.0.1 f1.market.mi-img.com<br>127.0.0.1 f1.market.xiaomi.com<br>127.0.0.1 f2.market.mi-img.com<br>127.0.0.1 f2.market.xiaomi.com<br>127.0.0.1 f3.market.mi-img.com<br>127.0.0.1 f3.market.xiaomi.com<br>127.0.0.1 f4.market.mi-img.com<br>127.0.0.1 f4.market.xiaomi.com<br>127.0.0.1 f5.market.mi-img.com<br>127.0.0.1 f5.market.xiaomi.com<br>127.0.0.1 file.xmpush.xiaomi.com<br>127.0.0.1 fix.hpplay.cn<br>127.0.0.1 ftp.hpplay.com.cn<br>127.0.0.1 g.dtv.cn.miaozhan.com<br>127.0.0.1 g.dtv.cn.miaozhen.com<br>127.0.0.1 gallery.pandora.xiaomi.com<br>127.0.0.1 gslb.hpplay.cn<br>127.0.0.1 gvod.aiseejapp.atianqi.com<br>127.0.0.1 h5.hpplay.com.cn<br>127.0.0.1 hotupgrade.hpplay.cn<br>127.0.0.1 hotupgrade.hpplay.cn<br>127.0.0.1 hpplay.cdn.cibn.cc<br>127.0.0.1 hub5btmain.sandai.net<br>127.0.0.1 hub5emu.sandai.net<br>127.0.0.1 image.hpplay.cn<br>127.0.0.1 imdns.hpplay.cn<br>127.0.0.1 jellyfish.pandora.xiaomi.com<br>127.0.0.1 leboapi.hpplay.com.cn<br>127.0.0.1 logonext.tv.kuyun.com<br>127.0.0.1 market.xiaomi.com<br>127.0.0.1 metok.sys.miui.com<br>127.0.0.1 milink.pandora.xiaomi.com<br>127.0.0.1 misc.in.duokanbox.com<br>127.0.0.1 misc.pandora.xiaomi.com<br>127.0.0.1 mishop.pandora.xiaomi.com<br>127.0.0.1 mitv.tracking.miui.com<br>127.0.0.1 new.api.ad.xiaomi.com<br>127.0.0.1 o2o.api.xiaomi.com<br>127.0.0.1 omgmta.play.aiseet.atianqi.com<br>127.0.0.1 osfota.cdn.aliyun.com<br>127.0.0.1 osupdateservice.yunos.com<br>127.0.0.1 ota.cdn.pandora.xiaomi.com<br>127.0.0.1 package.box.xiaomi.com<br>127.0.0.1 package.cdn.pandora.xiaomi.com<br>127.0.0.1 pandora.mi.com<br>127.0.0.1 pin.hpplay.cn<br>127.0.0.1 r.browser.miui.com<br>127.0.0.1 redirect.pandora.xiaomi.com<br>127.0.0.1 register.xmpush.xiaomi.com<br>127.0.0.1 resolver.msg.xiaomi.net<br>127.0.0.1 rp.hpplay.cn<br>127.0.0.1 rp.hpplay.com.cn<br>127.0.0.1 rps.hpplay.cn<br>127.0.0.1 sdkauth.hpplay.cn<br>127.0.0.1 sdkconfig.ad.xiaomi.com<br>127.0.0.1 secure-chn.imrworldwide.com<br>127.0.0.1 sl.hpplay.cn<br>127.0.0.1 ssp.ad.xiaomi.com<br>127.0.0.1 staging.ai.api.xiaomi.com<br>127.0.0.1 starfish.pandora.xiaomi.com<br>127.0.0.1 stat.pandora.xiaomi.com<br>127.0.0.1 t1.a.market.xiaomi.com<br>127.0.0.1 t2.a.market.xiaomi.com<br>127.0.0.1 t3.a.market.xiaomi.com<br>127.0.0.1 t4.a.market.xiaomi.com<br>127.0.0.1 t5.a.market.xiaomi.com<br>127.0.0.1 t7z.cupid.ptqy.gitv.tv<br>127.0.0.1 tat.pandora.xiaomi.com<br>127.0.0.1 test.ad.xiaomi.com<br>127.0.0.1 test.new.api.ad.xiaomi.com<br>127.0.0.1 tracking.miui.com<br>127.0.0.1 tv.aiseet.atianqi.com<br>127.0.0.1 tv.weixin.pandora.xiaomi.com<br>127.0.0.1 tvapi.kuyun.com<br>127.0.0.1 tvapp.hpplay.cn<br>127.0.0.1 tvmanager.pandora.xiaomi.com<br>127.0.0.1 tvmgr.pandora.xiaomi.com<br>127.0.0.1 upgrade.mishop.pandora.xiaomi.com<br>127.0.0.1 upgrade.xl9.xunlei.com<br>127.0.0.1 userapi.hpplay.com.cn<br>127.0.0.1 v.admaster.com.cn<br>127.0.0.1 video.market.xiaomi.com<br>127.0.0.1 vipauth.hpplay.cn<br>127.0.0.1 vipsdkauth.hpplay.cn<br>127.0.0.1 vv.play.aiseet.atianqi.com<br></code></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p>感谢<a href="https://github.com/liamliu108/miTVhosts">liamliu108&#x2F;miTVhosts</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>How to</tag>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
