[{"title":"1panel 反向代理设置步骤","url":"/2023/06/04/1panel-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE%E6%AD%A5%E9%AA%A4/","content":"如何保护您的网站免受黑客的侵害？您是否想提高您的网站的访问速度和用户体验？您是否想利用一些高级的网络技术来优化您的网站的内容和传输？如果您的答案是肯定的，那么您需要了解什么是反向代理，以及为什么要使用它。在本文中，我将向您介绍反向代理在1panel的设置。\n安装OpenResty直接在线商店即可以一键安装\n\n创建网站\n注释主域名：…… 一级域名、二级域名皆可，比如 news.163.com\n代理地址：…… 需要代理的ip地址，需要带端口号，比如：http://123.12.13.1:8080……如果主ip没有设置ssl，代理的地址不需以https:&#x2F;&#x2F;...:123, 否则会无法代理\nHttps设置：\n添加ssl的key和证书，推荐cloudflare的免费ssl\n","categories":["VPS"],"tags":["How to","Vps"]},{"title":"Cloudflare申请免费https证书","url":"/2023/06/04/Cloudflare%E7%94%B3%E8%AF%B7%E5%85%8D%E8%B4%B9https%E8%AF%81%E4%B9%A6/","content":"您是否注意过网址栏上的小锁🔒或者https这四个字母？它们代表了什么意义呢？\nHttps是一种网络协议，它可以保证您在网站上输入的信息，比如密码、银行卡号、个人信息等，不会被其他人窃取或篡改。它也可以防止您访问的网站被恶意篡改或伪造，从而保护您的权益和安全。\n如果一个网站没有使用https协议，那么您在网站上的一切操作都可能被其他人监视或干扰。这就像您在大街上大声说出自己的秘密一样，任何人都可以听到或者插嘴。而使用https协议的网站，就像您和对方用加密的对讲机通话一样，只有您和对方能听到或者说话，其他人即使截获了信号也无法破解。\n绑定域名 ……略\nSSL&#x2F;TLS设置将加密模式改为：完全\n\n边缘证书&#x2F;客户端证书……此处可按全部默认\n源服务器\n按默认，\n如果只代理单一网页，主机名这里只要保留一个具体网址，去掉带 * 的域名\n\n\n\n创建之后，将私钥和源证书复制到自己的服务器\n确认返回到DNS设置\n\nDNS设置代理状态改为：已代理\n","categories":["VPS"],"tags":["How to","Vps"]},{"title":"Docker+Cloudreve：快速搭建公有云文件系统","url":"/2023/06/04/Docker-Cloudreve%EF%BC%9A%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%85%AC%E6%9C%89%E4%BA%91%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/","content":"和大家分享一个很好用的云盘软件，叫做cloudreve。cloudreve是一个开源的个人网盘系统，它可以让你把自己的存储空间变成一个私有的云盘，方便你随时随地访问和管理你的文件。cloudreve有很多优点，比如：\n\n支持多种存储后端，包括本地存储、FTP、OneDrive、阿里云OSS等\n支持多用户和多团队，可以设置不同的权限和配额\n支持在线预览和编辑文档、图片、视频、音乐等\n支持断点续传和秒传，提高上传效率\n支持分享链接和密码保护，方便与他人协作\n支持WebDAV协议，可以在各种设备上挂载云盘\n支持自定义域名和主题，可以打造个性化的云盘界面\n\n如果对cloudreve感兴趣，可以访问官网https://cloudreve.org/ 了解更多信息，或者直接下按我下面的方法，使用Docker安装\n1.创建安装目录sudo -i\nmkdir -p &#x2F;root&#x2F;data&#x2F;docker_data&#x2F;cloudreve\ncd /root/data/docker_data/cloudreve\nmkdir &#123;cloudreve,data&#125;\ncd cloudreve\nmkdir &#123;avatar,uploads&#125;\ntouch &#123;conf.ini,cloudreve.db&#125;\ncd /root/data/docker_data/cloudreve\nvim docker-compose.yml\n\n2.Docker-compose.yaml文件配置version: &quot;3.8&quot;services:  cloudreve:    container_name: cloudreve    image: cloudreve/cloudreve:latest    restart: unless-stopped    ports:      - &quot;5212:5212&quot;            # 冒号左边的 5212 可以换成主机未被占用的端口    volumes:      - temp_data:/data      - ./cloudreve/uploads:/cloudreve/uploads        # 冒号左边的这个可以换成你自己服务器的路径      - ./cloudreve/conf.ini:/cloudreve/conf.ini      # 冒号左边的这个可以换成你自己服务器的路径      - ./cloudreve/cloudreve.db:/cloudreve/cloudreve.db  # 冒号左边的这个可以换成你自己服务器的路径      - ./cloudreve/avatar:/cloudreve/avatar    depends_on:      - aria2  aria2:    container_name: aria2    image: ddsderek/aria2-pro    restart: unless-stopped    environment:      - RPC_SECRET=your_aria_rpc_token  # 注意修改一下这个密钥      - RPC_PORT=6800      - DOWNLOAD_DIR=/data      - PUID=0      - PGID=0      - UMASK_SET=022      - TZ=Asia/Shanghai    volumes:      - ./aria2/config:/config    # 冒号左边的这个可以换成你自己服务器的路径      - temp_data:/datavolumes:  temp_data:    driver: local    driver_opts:      type: none      device: $PWD/data      o: bind\n\n3.拉取Docker和生成管理员用户名密码docker-compose up -d \n\ndocker-compose logs\n\n4.打开防火墙\n5212 确定即可（如果你在dockercompose文件里换了8081，这边就需要填8081，以此类推）\n\n输入 http://ip:5212 访问了。\n\n\n5.更新Dockercd /root/data/docker_data/cloudreve\ndocker-compose down \ncp -r /root/data/docker_data/cloudreve /root/data/docker_data/cloudreve.archive  # 万事先备份，以防万一\ndocker-compose pull\ndocker-compose up -d \ndocker image prune\n\n出现下面提示，直接输入：yWARNING! This will remove all dangling images.Are you sure you want to continue? [y/N] \n\n6.卸载cd /root/data/docker_data/cloudreve\ndocker-compose down   # 停止容器，此时不会删除映射到本地的数据\ncd ~\nrm -rf /root/data/docker_data/cloudreve  # 完全删除映射到本地的数据\n7.离线下载配置\n8.webdav配置\n参考文件感谢 咕咕鸽 折腾起来！\n","categories":["VPS"],"tags":["Docker","Linux","VPS","Cloud"]},{"title":"Docker常用命令记录","url":"/2023/06/04/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/","content":"记一些不常用的命令是一件很麻烦的事，此文用以记录一些常用的docker命令\n列出所有的容器 IDdocker ps -aq\n\n停止所有的容器docker stop $(docker ps -aq)\n\n删除所有的容器docker rm $(docker ps -aq)\n\n删除所有不使用的镜像docker image prune --force --all\n或者\ndocker image prune -f -a` : \n\n删除所有停止的容器docker container prune -f\n\n复制文件docker cp mycontainer:/opt/file.txt /opt/local/docker cp /opt/local/file.txt mycontainer:/opt/\n","categories":["VPS"],"tags":["Docker"]},{"title":"Gcam全方位解析，小米11摄像头参数","url":"/2023/06/04/Gcam%E5%85%A8%E6%96%B9%E4%BD%8D%E8%A7%A3%E6%9E%90%EF%BC%8C%E5%B0%8F%E7%B1%B311%E6%91%84%E5%83%8F%E5%A4%B4%E5%8F%82%E6%95%B0/","content":"Google相机（GCam）是一款基于Android系统的相机应用程序，具有比一般相机更出色的算法和处理技术。对于小米11这样的高端智能手机而言，使用GCam可以显著提升摄像头的性能和画质。相比原厂相机应用，GCam提供了更高质量的图片和视频，特别是在光线不足的情况下，能够获得更多的细节和色彩。此外，GCam还支持更多的功能和调整选项，用户可以根据自己的需求进行个性化设置，更好地掌控摄像头的表现。\n对于小米11手机用户而言，想要优化其摄像头效果，使用gcam软件是一个不错的选择。但是，gcam的参数设置相对较为复杂，需要一定的技术和操作经验。对于不熟悉该软件的用户来说，设置过程可能会遇到一些困难和挑战。例如，需要了解不同的参数含义及其对照表，需要耐心调试和尝试，还需要保证手机越狱或解锁状态等。因此，对于一般用户而言，可能需要花费一定的时间和精力来进行gcam的参数设置，但是最终的摄像头效果提升将是值得的。\n下面是一些小米摄像头的参数供参考\n全局参数\nHardware Level：Level 3\nViewfinder Format：YUV\n\n后置主摄\n108MP\nf&#x2F;1.33\n1.6µm\nOIS\nS5KHMX\n\n后置广角\n13MP\nf&#x2F;2.4\n123度\nOV13B10\n\n后置微距\n5MP\nS5K5E9\n\n前置\n20MP\nS5K3T2\n\n","categories":["APP"],"tags":["App","Android"]},{"title":"Eu.org域名申请","url":"/2023/06/04/Eu-org%E5%9F%9F%E5%90%8D%E7%94%B3%E8%AF%B7/","content":"eu.org是一个免费的顶级域名，它由欧盟组织在1996年创建，旨在为无力承担费用的个人和组织提供一个网络空间。eu.org域名有很多优点，比如：\n\n永久免费，不需要续费\n支持中文域名\n可以自定义DNS服务器\n可以转到CloudFlare等服务提供商\n\n准备材料\n邮箱（建议为gmail、hotmail之类的非国内邮箱）\nGV电话（有的话最佳）\n美国地址（生成链接在此）\n\n注册链接https://nic.eu.org/arf/en/login/ \n\n登录信息注意：登录的时候，用户名需要使用通过邮件发送给你的，并非自己在注册填写的ID\n\n创建域名\n点击创建\n\n按自己的需求生成，可以点list，查看各个域名的含义\n\n\n\nDNS设置推荐下面两个Free DNS服务商Cloudflare\nHostry\n递交域名由于DNS解析需要时间，一般为几分钟，等显示no error的时候，就表示递交成功\n域名生成一般审核在几个小时到几天不等 ，审核通过会发送邮件\n注意事项\n为什么我在中国大陆地区无法使用 eu.org 域名？\n\n因为不可描述的原因，eu.org 域名在国内是被强行 http 重置的状态，只需要使用 https 即可\n参考文件感谢：EdNovas 的小站\n","categories":["VPS"],"tags":["How to","VPS"]},{"title":"Hexo+GitHub Pages：解析域名","url":"/2023/06/04/Hexo-GitHub-Pages%EF%BC%9A%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/","content":"GitHub Pages是一个很棒的工具，它可以让你用GitHub来创建自己的博客网站，而不需要自己搭建服务器。你的博客网站会有一个默认的地址，就是username.github.io，其中username是你在GitHub上的用户名。不过，这样的地址可能不太好记，也不太有个性。幸运的是，GitHub Pages还支持绑定个人域名，这样你就可以用你喜欢的域名来访问你的博客网站了，而不用再输入username.github.io这样的长串字母了。\n域名申请略\nCNAME设置记录类型：选择“CNAME- 将域名指向另一个域名”；记录值：填写自己的GitHub Pages的地址，我这里填的是“napoleon940911.github.io”；其余：默认即可。\n“GitHub Pages”映射到“域名”其实前面相当于是完成了域名到GitHub Pages的映射，接下来还需要完成 GitHub Pages到域名的映射。\n进入到本地Hexo源码目录，找到source文件夹并进入，在该目录下创建一个 名为CNAME但无后缀的文件，\n打开CNAME文件，加入域名xxxx.xxx，保存并退出。\n创建 A 记录185.199.108.153185.199.109.153185.199.110.153185.199.111.153\n\n创建 AAAA 记录2606:50c0:8000::1532606:50c0:8001::1532606:50c0:8002::1532606:50c0:8003::153\n\n\n重新部署网站回到本地Hexo源码目录下，依次执行如下3条指令，完成网站的部署：\nhexo clean\nhexo generate\nhexo deploy\n\n此时，再去查看部署仓库的settings中关于Pages的描述，可以看到这里也有提示：Your site is published at https://****.***/ ，如下图所示。\n","categories":["Blog"],"tags":["How to","Blog"]},{"title":"Github 部署 Hexo","url":"/2023/06/04/Github-%E9%83%A8%E7%BD%B2-Hexo/","content":"你有没有想过自己搭建一个博客，分享你的知识和经验，或者记录你的生活和感想？如果你觉得这很麻烦，那么你一定要试试hexo，一个简单而强大的静态博客框架。hexo可以让你用markdown语法写文章，然后快速生成静态网页，部署到GitHub Pages或者其他平台上。hexo还有很多优秀的主题和插件，可以让你的博客更美观和个性化。hexo是一个开源的项目，有着活跃的社区和完善的文档，你可以随时找到你需要的帮助和资源。不管你是一个程序员，还是一个爱好者，hexo都能让你轻松拥有一个属于自己的博客。\n\n后面的内容在首页不显示，只显示到这里\nGithub博客申请创建部署目录仓库按照官方说明的使用规则，如果使用GitHub Pages进行网站部署的话，所建仓库必须要取名为“GitHub用户名.github.io”。因为我的GitHub用户名为justincnn，所以我的这个仓库应取名为“justincnn.github.io”。\n在GitHub官网创建repository\n创建页面：\n\n在上图所示的“Repository name”方框中填入仓库名称；\n勾选“Add a README file”；\n点击“Create repository”。即可完成该仓库的创建（简单起见，其余所有内容均保持默认）。\n\n注意：一定要勾选“Add a README file”，不然后面会看不到GitHub Pages的域名和部署分支\nGitHub Pages设置该仓库创建成功后，点击Settings，将所进入的网页至Pages\n\n致此，我们已经创建了属于自己的github博客空间：justincnn.github.io\n本地环境搭建软件准备\n安装Git环境\nbrew install git\n\n安装Node.js环境\nbrew install node.js\n一般在安装Node.js的同时，npm也会被一起安装,如果没有安装，请继续：\nbrew install npm\n\n安装Hexo\n\n\n在终端执行：\nnpm install hexo-cli -g\n\n创建Hexo源码文件夹进入自己博客本地目录，执行：\nhexo init &lt;hexo源码文件夹&gt;\n\n&lt;hexo源码文件夹&gt;命名为&lt;GitHub用户名.github.io&gt;,与GitHub仓库名保持一致\n安装依赖项进入hexo源码文件夹后，执行：\nnpm install\n\n安装一键部署插件进入hexo源码文件夹后，执行:\nnpm install hexo-deployer-git –save\n\n运行验证启动Hexo服务器hexo server -o\n\n博客网站的允许地址为http://localhost:4000；\n如果要停止运行，按下Ctrl+C即可。\n\n部署至Github本地文件修改打开根目录下面的 _config.yml 文件，并滚动到文件最后，可以看到如下图所示内容：\n# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy:  type: &#x27;git&#x27;  repo: git@github.com:justincnn/justincnn.github.io.git  branch: main\nRepo地址获取如下：\n生成网页文件Hexo源码目录中已有的源码编译生成为静态网页文件：\nhexo generate\n部署到GitHub Pageshexo deploy\n这个时候访问justincnn.github.io，就是生成的博客地址。\n如果测试发现 GitHub Pages 还是没有任何变化，不要着急，等几分钟之后再次刷新即可。\n至此，我们就已经成功将本地的 Hexo 仓库部署到 GitHub 上了。\n参考文献感谢搭建个人博客网站教程@拿破仑940911\n","categories":["Blog"],"tags":["How to","Blog"]},{"title":"Hexo 更换主题","url":"/2023/06/04/Hexo-%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/","content":"Hexo除了可以自由部署外，吸引人的另外一点就是多样的个性化主题，有谁可以在21世纪对个性化产生抗性呢，接下来给大家演示下如何更换主题：\n\n后面的内容在首页不显示，只显示到这里\n安装主题到主题的 GitHub 主页下，复制地址\n\n进入博客根目录：输入命令： git clone 刚才复制的地址 themes/xxxx ，xxxx 是主题名例如：\ngit clone https://github.com/theme-next/hexo-theme-next.git themes/next\n或者：从 https://hexo.io/themes/ 下载 release 包，解压到博客根目录 themes/ 文件夹下\n使用主题修改博客根目录下的 _config.yml 文件，注释掉原来的 theme 并新增一句 theme: xxxx （注意冒号后面有空格）\n# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: keep\nxxxx 为博客根目录 themes/ 文件夹下，对应的主题文件夹名称。\n本地预览hexo clean\nhexo g\nhexo s\n\n部署Github主题hexo clean\nhexo g\nhexo d\n\n主题更新\n通过 NPM 安装最新版本 （推荐）进入博客根目录：npm install hexo-theme-keep@latest～～～- 通过 Git 更新到最新的 master 分支进入主题目录：\ngit pull\n\n\n### 参考文献\n感谢[Hexo 更换主题@v1coder](https://www.cnblogs.com/v1coder/p/16368938.html)\n\n","categories":["Blog"],"tags":["How to","Blog"]},{"title":"Host大法--小米电视去广告","url":"/2023/06/04/Host%E5%A4%A7%E6%B3%95-%E5%B0%8F%E7%B1%B3%E7%94%B5%E8%A7%86%E5%8E%BB%E5%B9%BF%E5%91%8A/","content":"小米的东西很好，但是广告很不好\n\n屏蔽小米电视广告\n屏蔽大部分小米电视自带程序升级\n屏蔽小米电视系统升级\n\n\n后面的内容在首页不显示，只显示到这里\nhost配置：# 米家app需要前两行,不用米家可以取消注释# 127.0.0.1 api.io.mi.com# 127.0.0.1 device.io.mi.com127.0.0.1 519332DA.rtc.youme.im127.0.0.1 ad.doubleclick.net127.0.0.1 ad.hpplay.cn127.0.0.1 ad.mi.com127.0.0.1 ad.xiaomi.com127.0.0.1 ad1.xiaomi.com127.0.0.1 adc.hpplay.cn127.0.0.1 adcdn.hpplay.cn127.0.0.1 adeng.hpplay.cn127.0.0.1 admaster.com.cn127.0.0.1 adv.sec.miui.com127.0.0.1 alert.kuyun.com127.0.0.1 alog.umeng.com127.0.0.1 android.bugly.qq.com127.0.0.1 api.ad.xiaomi.com127.0.0.1 api.cupid.ptqy.gitv.tv127.0.0.1 api.hpplay.com.cn127.0.0.1 appstore.cdn.pandora.xiaomi.com127.0.0.1 appstore.pandora.xiaomi.com127.0.0.1 assistant.pandora.xiaomi.com127.0.0.1 auth.api.gitv.tv127.0.0.1 b.netcheck.gallery.pandora.xiaomi.com127.0.0.1 broker.mqtt.pandora.xiaomi.com127.0.0.1 bss.pandora.xiaomi.com127.0.0.1 cdn.ad.xiaomi.com127.0.0.1 cdn.hpplay.com.cn127.0.0.1 cdn1.hpplay.cn127.0.0.1 cloud.hpplay.cn127.0.0.1 conf.hpplay.cn127.0.0.1 config.kuyun.com127.0.0.1 d1.xiaomi.com127.0.0.1 data.mistat.xiaomi.com127.0.0.1 de.pandora.xiaomi.com127.0.0.1 devicemgr.hpplay.cn127.0.0.1 dvb.pandora.xiaomi.com127.0.0.1 e.ad.xiaomi.com127.0.0.1 f1.market.mi-img.com127.0.0.1 f1.market.xiaomi.com127.0.0.1 f2.market.mi-img.com127.0.0.1 f2.market.xiaomi.com127.0.0.1 f3.market.mi-img.com127.0.0.1 f3.market.xiaomi.com127.0.0.1 f4.market.mi-img.com127.0.0.1 f4.market.xiaomi.com127.0.0.1 f5.market.mi-img.com127.0.0.1 f5.market.xiaomi.com127.0.0.1 file.xmpush.xiaomi.com127.0.0.1 fix.hpplay.cn127.0.0.1 ftp.hpplay.com.cn127.0.0.1 g.dtv.cn.miaozhan.com127.0.0.1 g.dtv.cn.miaozhen.com127.0.0.1 gallery.pandora.xiaomi.com127.0.0.1 gslb.hpplay.cn127.0.0.1 gvod.aiseejapp.atianqi.com127.0.0.1 h5.hpplay.com.cn127.0.0.1 hotupgrade.hpplay.cn127.0.0.1 hotupgrade.hpplay.cn127.0.0.1 hpplay.cdn.cibn.cc127.0.0.1 hub5btmain.sandai.net127.0.0.1 hub5emu.sandai.net127.0.0.1 image.hpplay.cn127.0.0.1 imdns.hpplay.cn127.0.0.1 jellyfish.pandora.xiaomi.com127.0.0.1 leboapi.hpplay.com.cn127.0.0.1 logonext.tv.kuyun.com127.0.0.1 market.xiaomi.com127.0.0.1 metok.sys.miui.com127.0.0.1 milink.pandora.xiaomi.com127.0.0.1 misc.in.duokanbox.com127.0.0.1 misc.pandora.xiaomi.com127.0.0.1 mishop.pandora.xiaomi.com127.0.0.1 mitv.tracking.miui.com127.0.0.1 new.api.ad.xiaomi.com127.0.0.1 o2o.api.xiaomi.com127.0.0.1 omgmta.play.aiseet.atianqi.com127.0.0.1 osfota.cdn.aliyun.com127.0.0.1 osupdateservice.yunos.com127.0.0.1 ota.cdn.pandora.xiaomi.com127.0.0.1 package.box.xiaomi.com127.0.0.1 package.cdn.pandora.xiaomi.com127.0.0.1 pandora.mi.com127.0.0.1 pin.hpplay.cn127.0.0.1 r.browser.miui.com127.0.0.1 redirect.pandora.xiaomi.com127.0.0.1 register.xmpush.xiaomi.com127.0.0.1 resolver.msg.xiaomi.net127.0.0.1 rp.hpplay.cn127.0.0.1 rp.hpplay.com.cn127.0.0.1 rps.hpplay.cn127.0.0.1 sdkauth.hpplay.cn127.0.0.1 sdkconfig.ad.xiaomi.com127.0.0.1 secure-chn.imrworldwide.com127.0.0.1 sl.hpplay.cn127.0.0.1 ssp.ad.xiaomi.com127.0.0.1 staging.ai.api.xiaomi.com127.0.0.1 starfish.pandora.xiaomi.com127.0.0.1 stat.pandora.xiaomi.com127.0.0.1 t1.a.market.xiaomi.com127.0.0.1 t2.a.market.xiaomi.com127.0.0.1 t3.a.market.xiaomi.com127.0.0.1 t4.a.market.xiaomi.com127.0.0.1 t5.a.market.xiaomi.com127.0.0.1 t7z.cupid.ptqy.gitv.tv127.0.0.1 tat.pandora.xiaomi.com127.0.0.1 test.ad.xiaomi.com127.0.0.1 test.new.api.ad.xiaomi.com127.0.0.1 tracking.miui.com127.0.0.1 tv.aiseet.atianqi.com127.0.0.1 tv.weixin.pandora.xiaomi.com127.0.0.1 tvapi.kuyun.com127.0.0.1 tvapp.hpplay.cn127.0.0.1 tvmanager.pandora.xiaomi.com127.0.0.1 tvmgr.pandora.xiaomi.com127.0.0.1 upgrade.mishop.pandora.xiaomi.com127.0.0.1 upgrade.xl9.xunlei.com127.0.0.1 userapi.hpplay.com.cn127.0.0.1 v.admaster.com.cn127.0.0.1 video.market.xiaomi.com127.0.0.1 vipauth.hpplay.cn127.0.0.1 vipsdkauth.hpplay.cn127.0.0.1 vv.play.aiseet.atianqi.com\n\n参考文献感谢liamliu108&#x2F;miTVhosts\n","categories":["Life Style"],"tags":["How to","Life Style"]},{"title":"Omnivore：释放你的在线阅读潜能，畅享精彩内容","url":"/2023/06/04/Omnivore%EF%BC%9A%E9%87%8A%E6%94%BE%E4%BD%A0%E7%9A%84%E5%9C%A8%E7%BA%BF%E9%98%85%E8%AF%BB%E6%BD%9C%E8%83%BD%EF%BC%8C%E7%95%85%E4%BA%AB%E7%B2%BE%E5%BD%A9%E5%86%85%E5%AE%B9/","content":"在信息爆炸的时代，我们面对着无尽的在线文章、博客和新闻，但有时我们的时间无法满足我们的阅读欲望。现在，有一个工具可以帮助你解放阅读的潜力，留住每一篇精彩的内容，它就是Omnivore。本文将带你领略Omnivore的独特魅力，让你迫不及待地安装和使用它。\n\n1.发现和保存无尽精彩：Omnivore让你能够轻松发现并保存你所感兴趣的精彩内容。遇到一篇引人入胜的文章或一个吸引眼球的博客？只需点击一下，它将瞬间保存到你的阅读列表中，方便你在适合的时候深入阅读。\n2.个性化阅读体验：Omnivore为你提供了强大的组织和标记功能，让你可以按照自己的兴趣和主题创建标签和文件夹。无论是收集美食佳肴还是追踪最新的科技趋势，你可以轻松分类和整理你的阅读列表，享受个性化的阅读体验。\n3.随时随地畅享：Omnivore的多设备同步功能让你无论身处何地，都能随时畅享你的阅读乐趣。无论你是在工作时使用电脑还是在闲暇时使用手机，只需登录你的Omnivore账户，你的阅读列表将立即同步到所有设备上，让你无缝切换，保持阅读连续性。\n4.离线模式，不错过任何精彩：Omnivore支持离线模式，你可以将你保存的内容下载到本地，即使在没有网络连接的情况下，也能随时随地畅读。在长途旅行或区域网络不稳定的地方，你仍能轻松享受阅读的乐趣。\n5.解放阅读潜能，汲取无尽智慧：安装和使用Omnivore，你将解放你的阅读潜能，汲取无尽智慧。不再担心错过任何重要的文章，不再为遗忘感兴趣的内容而烦恼。Omnivore将为你打开一扇通往精彩世界的大门，让你在知识的海运\n6.全平台使用\nIOS安装链接\n\nmacOS安装链接\n\nAndroid安装链接\n\nChrome Extension\n\nFirefox Extension\n\nSafari Extension\n\nEdge Extension\n\n\n","categories":["APP"],"tags":["Android","Mac","Safari","Chrome","Edge","IOS"]},{"title":"Sublime Markdown可视化和预览设置","url":"/2023/06/04/Sublime-Markdown%E5%8F%AF%E8%A7%86%E5%8C%96%E5%92%8C%E9%A2%84%E8%A7%88%E8%AE%BE%E7%BD%AE/","content":"Markdown是一种简单而强大的文本格式化语言，可以让你用很少的标记就能创造出漂亮的文档。Sublime是一款优秀的代码编辑器，它支持多种语言和功能，包括markdown。要在Sublime中编辑markdown文件，你需要安装一些插件和主题，这样你就可以享受到语法高亮、实时预览、快捷键等便利。下面我就来告诉你具体的步骤。\n1. 安装Install Package ControlWin/Linux: ctrl+shift+p, Mac: cmd+shift+p\n输入,并回车\nInstall Package Control\n\n2.sublime插件安装\n调出控制台\n\n安装 MarkdownEditing、MarkdownPreview、LiveReload\n\n运行一次打开网页预览后，每次修改.md文件后保存即可实时自动刷新网页预览。Preferences &gt; Package Settings &gt; LiveReload &gt; Settings User，在user的配置文件中加入如下设置并保存：\n&#123;&quot;enabled_plugins&quot;: [&quot;SimpleReloadPlugin&quot;,&quot;SimpleRefresh&quot;]&#125;,\n\n3.设置MarkdownPreview + LiveReload实时刷新网页预览\n常规Ctrl+Shift+P方法组合键 Ctrl+Shift+P 调出命令面板，找到并选中Markdown Preview： Preview in Browser出现两个选项：github和markdown，任选其一即可。\n自定义快捷键打开Markdown Preview默认没有快捷键，我们可以自己为Markdown Preview： Preview in Browser设置快捷键。方法是在Preferences -&gt; Key Bindings打开的文件的右侧栏的中括号中添加一行代码：&#123; &quot;keys&quot;: [&quot;option+m&quot;], &quot;command&quot;: &quot;markdown_preview&quot;, &quot;args&quot;: &#123;&quot;target&quot;: &quot;browser&quot;, &quot;parser&quot;:&quot;markdown&quot;&#125;  &#125;\n\n以上两种方式本质是同一种方法，每次预览都要打开一个新的网页才能看到修改的效果，我们希望它能自动刷新网页预览。\n\nLiveReload是一个可实时刷新的插件，\n\n不仅可用于Markdown，也可用于HTML等。Ctrl+shift+p找到LiveReload: Enable&#x2F;disable plug-ins,然后回车, 选择 Simple Reload with delay (400ms)或者Simple Reload，两者的区别仅仅在于后者没有延迟。\n\n感谢csdn的原文参考文献：Sublime配置markdown环境\n如何删除sublime插件\n调出命令框\n输入代码,回车remove package\n\n\n","categories":["APP"],"tags":["How to","Mac"]},{"title":"一键增加VPS虚拟内存 SWAP","url":"/2023/06/04/%E4%B8%80%E9%94%AE%E5%A2%9E%E5%8A%A0VPS%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98-SWAP/","content":"很多人的VPS服务器由于内存太小，会导致很多进程被杀掉，这时候就需要我们添加Swap虚拟内存了，这里就整了个一键脚本方便懒人或小白使用。\n\n后面的内容在首页不显示，只显示到这里\n提示提示：脚本不支持OpenVZ架构，安装会自动退出\n查看现有swapfree -h\n\n命令wget https://raw.githubusercontent.com/zhucaidan/swap.sh/main/swap.sh &amp;&amp; bash swap.sh\n\n添加swap的时候填写纯数字，默认单位为M\n参考文献感谢Linux VPS一键添加&#x2F;删除Swap虚拟内存\n","categories":["VPS"],"tags":["How to","Vps","Docker","Linux","Script"]},{"title":"Docker中轻松安装Ubuntu：在Docker中探索无限可能","url":"/2023/06/04/Docker%E4%B8%AD%E8%BD%BB%E6%9D%BE%E5%AE%89%E8%A3%85Ubuntu%EF%BC%9A%E5%9C%A8Docker%E4%B8%AD%E6%8E%A2%E7%B4%A2%E6%97%A0%E9%99%90%E5%8F%AF%E8%83%BD/","content":"Docker是一种软件容器平台，它允许您将应用程序和它们的所有依赖项打包在一起，以便在不同的计算机上运行。安装Docker有以下几个好处：\n\n更轻松的应用程序部署：使用Docker容器打包应用程序和所有依赖项，可以减少应用程序部署的工作量和时间，同时还可以减少出错的可能性。\n\n更高效的资源利用：Docker容器与传统虚拟机相比，消耗更少的资源，因此在同一物理机器上可以运行更多的Docker容器，从而更高效地利用硬件资源。\n\n更易于管理的环境：使用Docker可以轻松地管理和维护应用程序的不同版本和配置。例如，可以轻松地在不同环境中运行相同的应用程序，例如开发、测试和生产环境。\n\n\n总之，Docker可以简化应用程序开发和部署的流程，并提高系统的可移植性和可维护性。接下来简单介绍下如何安装Docker版Ubuntu。\n1.拉取Ubuntu系统的镜像docker pull ubuntu\n\n2.查看拉取是否成功docker images\n\n3.运行容器docker run --name ubuntu -ti -v /data/projects:/var/www/html -d -p 3316:22 ubuntu\n\n\n宿主机根目录中的AAA文件夹就映射到了容器中去了，两者之间能够共享\n–name 指定生成的容器的名称\ni: 以交互模式运行容器，保证容器中STDIN是开启的。通常与 -t 同时使用；\nt: 为容器重新分配一个伪tty终端，通常与 -i 同时使用；\nd: 后台运行容器，并返回容器ID；\np:可以指定要映射的IP和端口，但是在一个指定端口上只可以绑定一个容器。支持的格式有 hostPort:containerPort、ip:hostPort:containerPort、 ip::containerPort。\nubuntu 则是镜像名称，镜像ID也可以的。\n\n4.查看容器是否运行成功docker ps -a # 查看所有的容器，包含启动和挂起的容器\n\n5.进入ubuntu系统docker exec -t -i ubuntu /bin/bash\n\n\n这是一个极度精简的系统，连最基本的wget命令都没有；所以先要apt-get update升级系统和安装apt-get install wget命令\n\n正确退出系统方式：先按，ctrl+p；再按，ctrl+q。绝对不能使用exit或者ctrl+d来退出，这样整个系统就退出了。具体到MAC电脑应该使用control代替ctrl键\n\n退出后 再进入ubuntu1、首先用docker ps -a 查找到该CONTAINER ID对应编号（比如：0a3309a3b29e）2、进入该系统，使用命令：docker attach 0a3309a3b29e\n\n\n6.安装ssh-client、ssh-serverapt-get install openssh-clientapt-get install openssh-server\n\n7.安装完成之后，就可以启动服务/etc/init.d/ssh start\n\n8.查看是否启动成功ps -e|grep ssh\n\n9.编辑sshd_config文件\n需要先安装vim编辑器 apt-get install vim\n编辑sshd_config文件，添加一行 PermitRootLogin yes ，使用Esc + ：输入WQ保存修改，退出文件编辑界面\n\n10.重启SSH服务service ssh restart\n\n11.设置SSH的密码passwd root  # 这个过程需要输入两遍\n\n12.查看容器的IP地址\n先安装net-tools的安装包apt-get install net-tools\n查看ip地址ifconfig\n\n13.保存修改的镜像docker commit [容器ID/容器名] [REPOSITORY:TAG]","categories":["VPS"],"tags":["Docker","Linux"]},{"title":"从无法到畅通：如何让国内用户无障碍使用ChatGPT","url":"/2023/06/04/%E4%BB%8E%E6%97%A0%E6%B3%95%E5%88%B0%E7%95%85%E9%80%9A%EF%BC%9A%E5%A6%82%E4%BD%95%E8%AE%A9%E5%9B%BD%E5%86%85%E7%94%A8%E6%88%B7%E6%97%A0%E9%9A%9C%E7%A2%8D%E4%BD%BF%E7%94%A8ChatGPT/","content":"ChatGPT 是一个基于英语的自然语言处理技术的大型语言模型，由 OpenAI 开发并维护。在国内使用 ChatGPT 面临以下困难：\n\n注册难：由于 ChatGPT 是由外国公司开发和维护的，因此需要通过国际互联网进行注册，需要填写个人信息等敏感信息，这对于一些用户来说可能会有隐私安全的顾虑。\n\n充值难：由于 ChatGPT 是一个付费的云服务，需要通过信用卡等国际支付方式进行充值。然而，由于中国大陆的金融监管政策限制，很多用户无法使用国际支付方式进行充值，这导致了使用 ChatGPT 的门槛较高。\n\n网络封锁：由于 ChatGPT 的服务器在国外，受到中国大陆的网络封锁影响，使用 ChatGPT 时可能会遇到连接困难、网络不稳定等问题。此外，中国政府也对聊天机器人进行了严格的审查和限制，这也导致了 ChatGPT 在中国的使用面临了一定的限制和困难。\n\n\n跨越网络的warp此为option，具体从下面的docker-compose选择来决定是否要运行此脚本\nWarp的好处1.1  支持 chatGPT，解锁奈飞流媒体1.2 避免 Google 验证码或是使用 Google 学术搜索1.3 可调用 IPv4 接口，使青龙和V2P等项目能正常运行1.4 由于可以双向转输数据，能做对方VPS的跳板和探针，替代 HE tunnelbroker能让 IPv6 only VPS 上做的节点支持 Telegram1.5 IPv6 建的节点能在只支持 IPv4 的 PassWall、ShadowSocksR Plus+ 上使用\nWarp 安装脚本option 1wget -N --no-check-certificate https://cdn.jsdelivr.net/gh/mikupeto/warp-script/warp.sh &amp;&amp; bash warp.sh\noption 2wget -N https://raw.githubusercontent.com/fscarmen/warp/main/menu.sh &amp;&amp; bash menu.sh [option] [lisence]\n\nWarp命令warp [option] [lisence]\n\nWarp Option 解释\n\n\n[option] 变量1 变量2\n具体动作说明\n\n\n\nh\n帮助\n\n\n4\n原无论任何状态 -&gt; WARP IPv4\n\n\n4 lisence name\n把 WARP+ Lisence 和设备名添加进去，如 bash menu.sh 4 5670ljg-sS9jD334-6o6g4M9F Goodluck\n\n\n6\n原无论任何状态 -&gt; WARP IPv6\n\n\nd\n原无论任何状态 -&gt; WARP 双栈\n\n\no\nWARP 开关，脚本主动判断当前状态，自动开或关\n\n\nu\n卸载 WARP\n\n\nn\n断网时，用于刷WARP网络 (WARP bug)\n\n\nb\n升级内核、开启BBR及DD\n\n\na\n免费 WARP 账户升级 WARP+\n\n\na lisence\n在上面基础上把 WARP+ Lisence 添加进去，如 bash menu.sh a N5670ljg-sS9jD334-6o6g4M9F\n\n\np\n刷 Warp+ 流量\n\n\nc\n安装 WARP Linux Client，开启 Socks5 代理模式\n\n\nl\n安装 WARP Linux Client，开启 WARP 模式\n\n\nc\nlisence\t在上面基础上把 WARP+ Lisence 添加进去，如 bash menu.sh c N5670ljg-sS9jD334-6o6g4M9F\n\n\nr\nWARP Linux Client 开关\n\n\nv\n同步脚本至最新版本\n\n\ni\n更换 WARP IP\n\n\ne\n安装 iptables + dnsmasq + ipset 分流流媒体方案\n\n\nw\n安装 WireProxy 解决方案\n\n\ny\nWireProxy 开关\n\n\n其他或空值\n菜单界面\n\n\n验证是否可以链接openaibash &lt;(curl -Ls https://cpp.li/openai)\n\n\nbash &lt;(curl -Ls https://cdn.jsdelivr.net/gh/missuo/OpenAI-Checker/openai.sh)\n\n如果输出如下内容，表示此步已经成功：\nYour IP supports access to OpenAI.\n参考链接服务器添加IPv4&#x2F;IPv6网络\n部署 go-chatgpt-api防火墙设置（option）sudo ufw allow 8080/tcp comment &#x27;chatgpt &#x27; &amp;&amp; sudo ufw reload\nVPS可直接访问Chatgpt的docker-compose.yml配置services:  go-chatgpt-api:    container_name: go-chatgpt-api    image: linweiyuan/go-chatgpt-api    ports:      - 8080:8080    environment:      - GIN_MODE=release      - GO_CHATGPT_API_PROXY=    restart: unless-stopped\nVPS自建如上Warp的docker-compose.ymlservices:  go-chatgpt-api:    container_name: go-chatgpt-api    image: linweiyuan/go-chatgpt-api    network_mode: &quot;host&quot;    ports:      - 8080:8080    environment:      - GIN_MODE=release      - GO_CHATGPT_API_PROXY=    restart: unless-stopped\n\nDocker内建Warp和API的docker-compose.ymlservices:  go-chatgpt-api:    container_name: go-chatgpt-api    image: linweiyuan/go-chatgpt-api    ports:      - 8080:8080    environment:      - GIN_MODE=release      - GO_CHATGPT_API_PROXY=socks5://chatgpt-proxy-server-warp:65535    depends_on:      - chatgpt-proxy-server-warp    restart: unless-stopped  chatgpt-proxy-server-warp:    container_name: chatgpt-proxy-server-warp    image: linweiyuan/chatgpt-proxy-server-warp    environment:      - LOG_LEVEL=OFF    restart: unless-stopped\n\nDocker部署完后反代的地址：如果是同一台VPS\nhttp://172.17.0.1:8080/chatgpt/conversation\n若交由其他VPS使用\nhttp://&lt;vps-ip&gt;:8080/chatgpt/conversation\n反代建立之后，回到api的docker查看日志：\ndocker-compose logs -f\n如果输出为200则代表成功，403和404都是无法\ndocker logs -f  go-chatgpt-api# [GIN] 2023/04/19 - 23:38:00 | 200 | 21.785759553s | 192.168.0.1 | POST     &quot;/conversation&quot;\n\n参考链接go-chatgpt-api\n部署Chatgpt Docker1.获取API或者Token\n使用 OpenAI API Key 请填写 OPENAI_API_KEY 字段 (获取 apiKey)\n使用 Web API 请填写 OPENAI_ACCESS_TOKEN 字段 ({获取 accessToken}(https://chat.openai.com/api/auth/session))\n\nDocker-compose配置version: &#x27;3&#x27;services:  app:    image: chenzhaoyu94/chatgpt-web # 总是使用 latest ,更新时重新 pull 该 tag 镜像即可    network_mode: &quot;host&quot;    ports:      - 127.0.0.1:3002:3002    environment:      # 二选一      OPENAI_API_KEY: sk-xxx      # 二选一      OPENAI_ACCESS_TOKEN: xxx      # API接口地址，可选，设置 OPENAI_API_KEY 时可用      OPENAI_API_BASE_URL: xxx      # API模型，可选，设置 OPENAI_API_KEY 时可用，https://platform.openai.com/docs/models      # gpt-4, gpt-4-0314, gpt-4-32k, gpt-4-32k-0314, gpt-3.5-turbo, gpt-3.5-turbo-0301, text-davinci-003, text-davinci-002, code-davinci-002      OPENAI_API_MODEL: xxx      # 反向代理，可选，即为上文提到的反代      API_REVERSE_PROXY: xxx      # 访问权限密钥，可选      AUTH_SECRET_KEY: xxx      # 每小时最大请求次数，可选，默认无限      MAX_REQUEST_PER_HOUR: 0      # 超时，单位毫秒，可选      TIMEOUT_MS: 60000      # Socks代理，可选，和 SOCKS_PROXY_PORT 一起时生效      SOCKS_PROXY_HOST: xxx      # Socks代理端口，可选，和 SOCKS_PROXY_HOST 一起时生效      SOCKS_PROXY_PORT: xxx      # HTTPS 代理，可选，支持 http，https，socks5      HTTPS_PROXY: http://xxx:7890\n\n参考链接ChatGPT Web\n备用反代方案services:  go-chatgpt-api:    container_name: go-chatgpt-api    # legacy是依赖chatgpt-proxy-server的，我个人测试比较稳定    image: linweiyuan/go-chatgpt-api:legacy     ports:      - 8080:8080 # 宿主机8080端口可按需改为其它端口    environment:      - GIN_MODE=release      - CHATGPT_PROXY_SERVER=http://chatgpt-proxy-server:9515    depends_on:      - chatgpt-proxy-server    restart: unless-stopped   chatgpt-proxy-server:    container_name: chatgpt-proxy-server    image: linweiyuan/chatgpt-proxy-server    environment:      - LOG_LEVEL=INFO    restart: unless-stopped\n\n如果是同一台VPShttp://172.17.0.1:8080/conversation\n若交由其他VPS使用http://&lt;vps-ip&gt;:8080/conversation- web配置\nservices:  app:    image: chenzhaoyu94/chatgpt-web:latest # 总是使用 latest ,更新时重新 pull 该 tag 镜像即可    network_mode: &quot;host&quot;    ports:      - 3002:3002    environment:      # 二选一      # OPENAI_API_KEY: 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      # 二选一      OPENAI_ACCESS_TOKEN:      # API接口地址，可选，设置 OPENAI_API_KEY 时可用      # OPENAI_API_BASE_URL: xxx      # API模型，可选，设置 OPENAI_API_KEY 时可用      OPENAI_API_MODEL: gpt-3.5-turbo      # 反向代理，可选      API_REVERSE_PROXY: http://172.17.0.1:8080/conversation      # 访问权限密钥，可选      AUTH_SECRET_KEY: Dhl123456,      # 每小时最大请求次数，可选，默认无限      MAX_REQUEST_PER_HOUR: 0      # 超时，单位毫秒，可选      TIMEOUT_MS: 60000      restart: unless-stopped\n\n","categories":["VPS"],"tags":["How to","Vps","Docker","Linux","Script","Ai"]},{"title":"免费的消息推送渠道：telegram机器人token和ID生成","url":"/2023/06/04/%E5%85%8D%E8%B4%B9%E7%9A%84%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81%E6%B8%A0%E9%81%93%EF%BC%9Atelegram%E6%9C%BA%E5%99%A8%E4%BA%BAtoken%E5%92%8CID%E7%94%9F%E6%88%90/","content":"随着现在大家对于垃圾推送的抗拒，特别是国内一些手机厂和部分大厂app的垃圾推送。让推送开始慢慢变成一种贬义词。其实还在黑莓机的年代，推送是一种高端且舒服的信息及时获取渠道。\n虽然大厂的信息推送很垃圾，但是我们可以建立自己的消息推送渠道，出了bark外，推荐telegram的机器人服务。\n1.添加机器人生成工具@botfather\n\n2.生成推送机器人点击工具开始，输入名录：\n/newbot\n\n3.输入ID输入你自己需要的id，必须以bot结尾，比如telegram_bot\n4.获取token对于下面的token，需要保密 token: 1287833603:AAGmx9hQq6ViT3km0_77z8psBGqUKfdpSHY\n5.获取IDi 添加机器人为好友ii 在浏览器打开网址https://api.telegram.org/botXXX:YYYY/getUpdates\n将 XXX:YYYY 替换为您的机器人令牌，如：\nhttps://api.telegram.org/bot1287833603:AAGmx9hQq6ViT3km0_77z8psBGqUKfdpSHY/getUpdates\niii 查找ID “chat”:{“id”:-zzzzzzzzzz，-zzzzzzzzzz 是您的聊天 ID（带有负号）。\niv 测试curl -X POST &quot;https://api.telegram.org/botXXX:YYYY/sendMessage&quot; -d &quot;chat_id=-zzzzzzzzzz&amp;text=my sample text&quot;\n","categories":["APP"],"tags":["How to"]},{"title":"创建自己永久的图床--github","url":"/2023/06/04/%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E6%B0%B8%E4%B9%85%E7%9A%84%E5%9B%BE%E5%BA%8A-github/","content":"this is a test\n今天我想和你聊聊图床对于blog而言，为什么很重要。图床是一个可以存储和展示图片的网络服务，它可以让你的blog更加美观和丰富。有了图床，你就不用担心图片占用你的空间和流量，也不用担心图片加载速度慢或者失效。图床还可以提供一些编辑和管理图片的功能，让你的blog更加个性化和专业。总之，图床是一个blog的好帮手，如果你还没有使用图床，那么赶快试试吧！\n1.注册github账号略\n2.新建一个仓库\n3.生成一个token用于PicGo操作你的仓库：访问：生成token\n\n点击Generate new token\n\nrepo的勾打上。点击Generate token生成token\n\n这个token生成后只会显示一次！你要把这个token复制一下存到其他地方以备以后要用\n\n\n4.配置图床工具poco\n设定仓库名：按照 用户名&#x2F;仓库名 的格式填写（就是刚才创建的仓库）\n\n设定分支名：master\n\n设定 Token：粘贴之前叫你保存的Token。\n\n设定自定义域名：它的的作用是，在图片上传后，PicGo 会按照自定义域名+上传的图片名的方式生成访问链接，放到粘贴板上。https://cdn.jsdelivr.net/gh/用户名/仓库名\n\n\n\n5. 参考文献感谢poco官网\n","categories":["Blog"],"tags":["How to"]},{"title":"在Hexo博客中发布文章","url":"/2023/06/04/%E5%9C%A8Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/","content":"Hexo是一种稍微有点门槛，但是一上手就很香的博客编辑和发布工具，这里介绍下，如何发布文章\n\n后面的内容在首页不显示，只显示到这里\n新建文章1.在Hexo博客目录下，进入Git Bash命令窗口中，输入以下命令：\nhexo new &quot;在这里&quot;\n2.在博客目录下的&#x2F;source&#x2F;_posts&#x2F; 文件夹下，可以看到已经生成了标题为(在这里.md)的博客文件\n3.在（在这里.md）文件中编辑自己的博客文章即可。\n添加分类和标签1.在文件中设置tags和categories属性：\ntitle: 在这里date: 2018-08-02 11:41:10tags:- 博客           //多个标签可以这样添加- hexocategories: web前端\n\n本地测试、预览博客文章hexo s\n\n添加”全文阅读”按钮Option1:在文章任意你想添加的位置添加即可\n&lt;!--more--&gt;     \n比如：\n---title: 在这里date: 2018-08-02 11:41:10tags:- 博客- hexocategories: web前端---javascript是一门充满活力、简单易用的语言，又是一门具有许多复杂微妙技术的语言。即使是经验丰富的javascript开发者，如果没有认真学习的话，也无法真正理解它们，这就是javascript的矛盾之处。由于javascript不必理解就可以使用，因此通常来说很难真正理解语言本身，这就是我们面临的挑战。不满足于只是让代码正常工作，而是想要弄清楚为什么，勇于挑战这条崎岖颠簸的少有人走的路，拥抱整个javascript&lt;!--more--&gt;后面的内容在首页不显示，只显示到&lt;!--more--&gt;这里\n\nOption2:设置首页文章以摘要形式显示，打开主题配置文件，找到auto_excerpt进行修改：\nauto_excerpt:  enable: true  length: 150\n其中length代表显示摘要的截取字符长度。注：这两种方法，在博客首页显示的效果不一样，根据自己的需要，选择自己喜欢的方法\n在博文中添加图片Option1:\n\n在hexo目录下，安装插件：npm install hexo-asset-image --save\n在hexo\\source 目录下新建一个img文件夹，把图片放置在里面；\n在xxx.md文件中引用图片：![header]( img/header.jpg)\nOption2:\n在全局配置文件（hexo&#x2F;_config.yml)中将post_asset_folder设置为true；\n创建文章（在创建的时候，会在hexo&#x2F;source&#x2F;_post目录下，生成一个XXX.md文件和一个XXX的文件夹）：hexo new &quot;XXX&quot;\n把XXX这个博文需要展示的图片放在XXX文件夹目录下；\n在XXX.md文件中引入图片的方式：&#123;% asset_img example.jpg This is an example image %&#125;\n\n发布到Github上发表的文章在本地预览无误后，在 Git Bash 命令窗口执行以下命令：\nhexo clean &amp;&amp; hexo g &amp;&amp; hexo d\n\n\n\n","categories":["Blog"],"tags":["How to","Blog"]},{"title":"安利--1panel：让您的 Linux VPS 管理成为一种美学","url":"/2023/06/04/%E5%AE%89%E5%88%A9-1panel%EF%BC%9A%E8%AE%A9%E6%82%A8%E7%9A%84-Linux-VPS-%E7%AE%A1%E7%90%86%E6%88%90%E4%B8%BA%E4%B8%80%E7%A7%8D%E7%BE%8E%E5%AD%A6/","content":"在当今互联网时代，Linux 服务器的需求越来越高。但是，对于那些没有 Linux 管理经验的用户来说，管理 Linux 服务器可能会显得非常困难。这时，Linux 面板管理工具便应运而生。Linux 面板管理工具是一种方便管理 Linux 服务器的工具，它们提供了一种简单的方法来安装和配置各种软件和服务。这些面板还允许用户创建和管理域名、邮箱、FTP 用户和数据库，以及监控服务器的性能和资源使用情况。\n对于新手来说，学习 Linux 管理可能需要花费大量的时间和精力。但是，使用面板管理工具，可以简化管理过程，同时还能够帮助新手更好地掌握 Linux 管理技巧。而对于那些需要管理多个服务器的用户来说，面板管理工具也非常有用。通过使用面板管理工具，用户可以更轻松地管理多个服务器，同时避免了在每个服务器上进行繁琐的手动配置的麻烦。\n安装部署在线安装\nUBUNTU\ncurl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; sudo bash quick_start.sh\n\nRedHat &#x2F; CentOS\n\n\ncurl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; sh quick_start.sh\n\n\nDebiancurl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; bash quick_start.sh\n\n安装成功后，控制台日志会提示对应端口号，可通过浏览器访问如下页面登录 1Panel：http://目标服务器 IP 地址:目标端口\n\n命令行工具Usage:  ./1pctl [COMMAND] [ARGS...]  ./1pctl --helpCommands:  status          查看 1Panel 服务运行状态  start           启动 1Panel 服务  stop            停止 1Panel 服务  restart         重启 1Panel 服务  uninstall       卸载 1Panel 服务  user-info       获取 1Panel 用户信息  version         查看 1Panel 版本信息\n\n如果在当前目录找不到1pctl，可以先运行1pctl所在的目录：\nwhereis 1pctl","categories":["VPS"],"tags":["Vps","Linux","Script"]},{"title":"更改SSH端口：保护您的服务器免受恶意攻击","url":"/2023/06/04/%E6%9B%B4%E6%94%B9SSH%E7%AB%AF%E5%8F%A3%EF%BC%9A%E4%BF%9D%E6%8A%A4%E6%82%A8%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%8D%E5%8F%97%E6%81%B6%E6%84%8F%E6%94%BB%E5%87%BB/","content":"当您在使用 VPS 时，SSH（Secure Shell）是一种重要的远程连接协议，它可以帮助您通过命令行访问您的 VPS，管理您的服务器和应用程序。然而，如果您的 SSH 端口设置为默认端口22，那么您的服务器就面临着被攻击者攻击的风险。黑客可以使用自动化的脚本扫描您的服务器并尝试使用暴力破解方法攻击您的 SSH 连接。这可能会导致安全漏洞和服务器被入侵。\n为了保护您的 VPS 免受这种类型的攻击，您需要更改 SSH 端口，这是一种简单而有效的安全措施。适合常见的CentOS&#x2F;Fedora&#x2F;RedHat、Debian&#x2F;Ubuntu等常见的Linux发行版。\n1、备份原sshd配置文件cp /etc/ssh/sshd_config /etc/ssh/sshd_config.backup~~~~#### 2、修改sshd配置文件可以使用winscp、nano、vim之类的软件编辑 \nvi &#x2F;etc&#x2F;ssh&#x2F;sshd_config\n查找Port 22，有可能 Port 22 是注释的(即前面有#号，有的话删掉 # 号)。在 Port 22 下面添加一行 Port 3322  其中3322为你更改SSH后的端口。这里建议先保留原来的22端口，待新的SSH端口测试正常工作后再删掉原Port 22 端口行。修改完成后保存。#### 3、重启SSH服务器重启SSH服务器命令：\nsystemctl restart sshd\n如果没有systemctl的话可以执行：\n&#x2F;etc&#x2F;init.d&#x2F;sshd restart \n或 \n&#x2F;etc&#x2F;init.d&#x2F;ssh restart\n如果没有报错的话就生效了，可以 \nss -ntl \n或 \nnetstat -ntl \n查看一下端口。#### 4、防火墙、安全组规则设置iptables添加SSH新端口规则：\niptables -A INPUT -p tcp –dport 3322 -j ACCEPT             #3322替换为新的端口#\n然后保存iptables规则firewalld添加SSH新端口规则：\nfirewall-cmd –permanent –zone&#x3D;public –add-port&#x3D;3322&#x2F;tcp             #3322替换为新的端口#\n~~~firewall-cmd --reload             #重载firewalld#\n\n阿里云之类的安全组规则添加SSH新端口规则：\n阿里云之类的有安全组之类设置的云服务器一定要在安全组规则里将新端口添加到“入方向”的允许规则。\n转载文献VPS侦探：CentOS&#x2F;Debian&#x2F;Ubuntu Linux修改SSH默认22端口\n第二种方案：适用于oracle linuxi.查看ssh默认绑定端口semanage port -l | grep ssh\n\n\nssh_port_t                     tcp      22\nii.添加新端口（以，12345为例）# 注意名称是 ssh_port_tsemanage port -a -t ssh_port_t -p tcp 12345\niii.验证下是否添加成功semanage port -l | grep ssh\n\nssh_port_t                     tcp   12345, 22\niv.参数解释\n-l：查看记录\n-a：添加\n-m：修改\n-d：删除\n-t：添加类型\n-p：指定端口类型（tcp、udp\n\n","categories":["VPS"],"tags":["Vps","Linux"]},{"title":"用clash畅通无阻地访问binggpt","url":"/2023/06/04/%E7%94%A8clash%E7%95%85%E9%80%9A%E6%97%A0%E9%98%BB%E5%9C%B0%E8%AE%BF%E9%97%AEbinggpt/","content":"你是否听说过BingGpt这个平台？它是一个人工智能写作平台，它可以根据你的输入，生成各种类型和风格的文本，让你的写作更加有趣和高效。无论你是想要写一篇文章，还是想要写一首诗，或者是想要写一段对话，binggpt都可以帮你实现。但是，很遗憾的是，由于某些原因，我们国内的用户无法直接访问这个平台，这让很多人感到失望和遗憾。那么，我们有没有办法解决这个问题呢？答案是肯定的，只要我们用一个简单的工具，就可以轻松地访问BingGpt，那就是Clash。\n规则添加- DOMAIN-SUFFIX,openai.com,PROXY- DOMAIN-SUFFIX,auth0.com,PROXY- DOMAIN-SUFFIX,bing.com,PROXY- DOMAIN-SUFFIX,live.com,PROXY\n\n当然如果接受网络白名单就不存在烦恼了。\n","categories":["APP"],"tags":["App","Clash","AI","MicroSoft"]},{"title":"甲骨文vps ubuntu开放所有端口","url":"/2023/06/04/%E7%94%B2%E9%AA%A8%E6%96%87vps-ubuntu%E5%BC%80%E6%94%BE%E6%89%80%E6%9C%89%E7%AB%AF%E5%8F%A3/","content":"如果你想在甲骨文vps上运行一些需要网络访问的应用，比如web服务器、数据库、代理等，你可能需要开放一些端口，让外界可以访问你的vps。但是，甲骨文vps默认是不开放任何端口的，你需要在它的后台设置和操作系统上进行一些配置，才能实现端口开放。本文将介绍如何在甲骨文vps ubuntu上开放所有端口，以及如何关闭ubuntu的防火墙，让你的vps更加灵活和安全。\n请先在甲骨文的后台先开放所有的端口，\n1.切换到root用户sudo -i\n\n2.开放所有端口sudo iptables -P INPUT ACCEPT\nsudo iptables -P FORWARD ACCEPT\nsudo iptables -P OUTPUT ACCEPT\nsudo iptables -F\n\n3.Oracle自带的Ubuntu镜像默认设置了Iptable规则，关闭它apt-get purge netfilter-persistent\nreboot\n\n4.强制删除规则rm -rf /etc/iptables &amp;&amp; reboot\n\n5.删除oracle-cloud-agent，防止甲骨文监控snap remove oracle-cloud-agent\n","categories":["VPS"],"tags":["How to","Vps","Linux"]},{"title":"硬盘健康，从检查写入量开始：M1 Mac上查看硬盘写入量","url":"/2023/06/04/%E7%A1%AC%E7%9B%98%E5%81%A5%E5%BA%B7%EF%BC%8C%E4%BB%8E%E6%A3%80%E6%9F%A5%E5%86%99%E5%85%A5%E9%87%8F%E5%BC%80%E5%A7%8B%EF%BC%9AM1-Mac%E4%B8%8A%E6%9F%A5%E7%9C%8B%E7%A1%AC%E7%9B%98%E5%86%99%E5%85%A5%E9%87%8F/","content":"苹果公司于2020年推出了搭载M1芯片的Mac电脑，这款新型号的电脑在性能方面表现优异，吸引了众多用户的关注。然而，随着M1 Mac电脑的普及，一些用户开始关注硬盘的使用情况。特别是，很多用户注意到他们的硬盘写入量异常高，这可能会影响硬盘寿命和整体性能。那么，如何查看M1 Mac电脑的硬盘写入量？\n1.安装 smartctl在终端中输入如下代码，即可进行安装：\nbrew install smartmontools\n\n在终端输入 \nsmartctl\n如果没有报错则说明安装成功了。\n2.查看硬盘使用量在终端中输入如下代码，即可进行看查硬盘使用量。\nsmartctl -a disk0\n\n结果如下，里面的Percentage Used 就是损耗值，Data Units Written 就是写入量。\n3.如何卸载brew uninstall smartmontools \n","categories":["APP"],"tags":["Mac"]},{"title":"利用cloudflare代理你的VPS IP","url":"/2023/06/04/%E5%88%A9%E7%94%A8cloudflare%E4%BB%A3%E7%90%86%E4%BD%A0%E7%9A%84VPS-IP/","content":"使用 Cloudflare 代理 VPS IP 有几个好处：\n\n隐藏 IP 地址：VPS IP 是可以公开访问的，如果攻击者知道您的 IP 地址，他们可能会对您的服务器进行攻击。使用 Cloudflare 代理可以隐藏实际的 IP 地址，使攻击者无法直接访问您的服务器。\n\n加速网站：Cloudflare 具有全球分布的 CDN（内容分发网络），可以帮助加速您的网站。Cloudflare 会将您的网站内容缓存在其服务器上，并自动选择最接近访问者的服务器提供网站内容，从而减少访问延迟。\n\n防御 DDoS 攻击：Cloudflare 可以为您的网站提供 DDoS 攻击防护。它使用高级算法来检测和防御各种类型的 DDoS 攻击。\n\n简化 SSL 部署：Cloudflare 可以为您的网站提供免费的 SSL 证书，并自动更新证书。这可以帮助简化 SSL 部署，并确保您的网站使用安全的 HTTPS 连接。\n  使用 Cloudflare 代理 VPS IP 可以提高网站的安全性和性能，并简化 SSL 部署。\n\n\nDNS托管到Cloudflare略\n\n将域名解析道Cloudflare\n子域名","categories":["VPS"],"tags":["How to","Vps","Linux"]},{"title":"笛卡尔梦境中的容器之旅：Ubuntu上Docker和Docker Compose的安装方法","url":"/2023/06/04/%E7%AC%9B%E5%8D%A1%E5%B0%94%E6%A2%A6%E5%A2%83%E4%B8%AD%E7%9A%84%E5%AE%B9%E5%99%A8%E4%B9%8B%E6%97%85%EF%BC%9AUbuntu%E4%B8%8ADocker%E5%92%8CDocker-Compose%E7%9A%84%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/","content":"\nDocker是一种容器化技术，它能够让开发者打包应用程序和其依赖项成为一个独立的容器，并可以在任何地方运行这个容器，不受运行环境的限制。简单来说，Docker就像是一个小型的虚拟机，可以在其中运行应用程序。\n\nDocker Compose是一个用于管理Docker容器的工具，它能够让开发者通过编写简单的YAML文件来定义并运行多个容器，协同工作。与Docker不同的是，Docker Compose更注重于在多个容器之间建立联系和协调，以实现更复杂的应用程序部署。它可以让开发者更方便地管理多个容器，减少容器之间的配置和交互的复杂度，从而更容易地构建和维护应用程序。\n\n\n本文介绍下如何在Ubuntu下安装这两者，其他Linux也可参照\n安装Docker：更新包列表并安装必要的软件包：sudo apt-get update\nsudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common\n\n添加Docker的GPG密钥：curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n\n添加Docker的APT仓库：sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;\n\n安装Docker CE：sudo apt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io\n\n安装Docker Compose下载Docker Compose的二进制文件：sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose\n\n赋予docker-compose可执行权限：sudo chmod +x /usr/local/bin/docker-compose\n\n添加docker-compose到系统PATH中：sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\n\n验证Docker Compose是否安装成功：docker-compose --version\n\n如果Docker Compose版本号被正确显示，则说明安装成功。\nDockerGPG密钥的作用Docker的GPG密钥用于验证Docker软件包的真实性和完整性，以确保其未被篡改或恶意修改。当您从Docker官方仓库中下载Docker软件包时，您可以使用这个GPG密钥进行验证。如果您下载的软件包与Docker官方发布的软件包不匹配，GPG密钥验证将失败并给出警告。这有助于确保您下载的软件包是来自可信来源的，并且没有被篡改。\n","categories":["VPS"],"tags":["Docker","Linux"]},{"title":"自动抢注甲骨文 ARM VPS，让您的云计算之路更加便捷","url":"/2023/06/04/%E8%87%AA%E5%8A%A8%E6%8A%A2%E6%B3%A8%E7%94%B2%E9%AA%A8%E6%96%87-ARM-VPS%EF%BC%8C%E8%AE%A9%E6%82%A8%E7%9A%84%E4%BA%91%E8%AE%A1%E7%AE%97%E4%B9%8B%E8%B7%AF%E6%9B%B4%E5%8A%A0%E4%BE%BF%E6%8D%B7/","content":"本人从未成功，哈哈 🤣\n甲骨文的ARM架构的VPS（Virtual Private Server）是一种云服务器产品，它采用了ARM芯片架构，相比传统的x86架构具有更低的能耗、更高的性能和更高的并发性能。因此，如果你的业务需要更高的性能和更低的能耗，可以考虑申请甲骨文的ARM VPS。\n此外，甲骨文是全球领先的云计算服务提供商之一，其云计算产品稳定可靠、安全高效、性能卓越，具有全球化的覆盖能力和丰富的服务经验，适用于企业级应用、高并发网站、大数据处理等各种场景。甲骨文的ARM VPS可以为你的业务提供高品质的云计算服务，帮助你更好地实现业务发展和创新。\n配置要求\nLinux主机或者VPS，我目前使用的是Docker版Ubuntu，挂在旁路由下\nTelegarm账号\n\n甲骨文信息获取\n进入控制台\n\n\n2.找到API Keys\n\n3.添加API\n\n4.下载API信息的一对Key，点Add，复制内容\n\n\n\n脚本配置I. Linux一键安装&#x2F;更新（运行完后使用bash sh_java_oci.sh可重启运行）\n\n脚本并未创建文件夹 可手动创建文件夹方便管理 如：mkdir rbot &amp;&amp; cd rbotwget -O gz_client_bot.tar.gz  https://github.com/semicons/java_oci_manage/releases/latest/download/gz_client_bot.tar.gz &amp;&amp; tar -zxvf gz_client_bot.tar.gz --exclude=client_config  &amp;&amp; tar -zxvf gz_client_bot.tar.gz --skip-old-files client_config &amp;&amp; chmod +x sh_client_bot.sh &amp;&amp; bash sh_client_bot.sh\n\nII. 修改配置文件参数\n\n按参数说明编辑client_config文件（model填写local为启动本地无公网IP模式）#在oci=begin和oci=end之间放入你的API配置信息 支持多个配置文件 机器人切换profile可更换操作配置oci=begin[DEFAULT]user=ocid1.user.oc1..aaaaaaaaxxxxgwlg3xuzwgsaazxtzbozqqfingerprint=b8:33:6f:xxxx:45:43:33tenancy=ocid1.tenancy.oc1..aaaaaaaaxxx7x7h4yaregion=ap-singapore-1key_file=写你的API密钥文件路径[DEFAULT2]user=ocid1.user.oc1..aaaaaaaaxxxxgwlg3xuzwgsaazxtzbozqqfingerprint=b8:33:6f:xxxx:45:43:33tenancy=ocid1.tenancy.oc1..aaaaaaaaxxx7x7h4yaregion=ap-singapore-1key_file=写你的API密钥文件路径oci=end#用户信息 从 https://t.me/radiance_helper_bot 配置(bot可使用/raninfo命令随机生成)#必传username=#必传password=#cloudflare 功能参数 非必传#非必传 cloudflare邮箱cf_email=#非必传 cloudflare key 在我的个人资料-&gt;API令牌处-&gt;API密钥-&gt;Global API Key\t获取cf_account_key=#非必填 本机ip和端口号 (进阶玩家选项 可填写域名) 不写将自动获取本机ip 并使用默认端口号9527 (小白用户建议不填) 如填写 格式为:https://xxx.xx:9527local_address=#非必填 url名称(默认为address 可在bot上修改)local_url_name=#非必填 启动模式 填写local为启动本地无公网IP模式(只要能联网即可) 不填或填其他 则启动端口模式model=#在azure=begin和azure=end之间放入你的azure的API配置信息 支持多个配置文件 机器人切换profile可更换操作配置 上传配置支持使用原格式(&#123;&quot;appId&quot;:&quot;xxx&quot;,&quot;password&quot;:&quot;xxx&quot;...&#125;)上传 azure=begin[az001]appId=551xxxx7-xxxx-xxxx-xxxx-b9xxxx60cc65password=T618Q~.LIy_xxxxx~jm~xxxxxxtenant=xxxx3713-xxxx-4cb5-xxxx-3001060xxxxxazure=end\n\nIII.启动、终止、查看日志、卸载\n请先在配置文件内输入对应的参数，然后运行下方需要的指令启动或重启bash sh_client_bot.sh 查看日志(ctrl + c退出日志)tail -f log_r_client.log  终止程序ps -ef | grep r_client.jar | grep -v grep | awk &#x27;&#123;print $2&#125;&#x27; | xargs kill -9  卸载程序rm -rf gz_client_bot.tar.gz client_config r_client.jar sh_client_bot.sh log_r_client.log debug-.log 如也不需要JDK也可卸载：apt-get remove openjdk*\n\n参考文献\nThis article references  GitHub\n\nThis article references 回收站\n\n\n","categories":["VPS"],"tags":["How to","Vps","Docker","Linux","Script"]}]