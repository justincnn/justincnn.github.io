[{"title":"Docker+Cloudreve：快速搭建公有云文件系统","url":"/2023/06/04/Docker-Cloudreve%EF%BC%9A%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%85%AC%E6%9C%89%E4%BA%91%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/","content":"和大家分享一个很好用的云盘软件，叫做cloudreve。cloudreve是一个开源的个人网盘系统，它可以让你把自己的存储空间变成一个私有的云盘，方便你随时随地访问和管理你的文件。cloudreve有很多优点，比如：\n\n支持多种存储后端，包括本地存储、FTP、OneDrive、阿里云OSS等\n支持多用户和多团队，可以设置不同的权限和配额\n支持在线预览和编辑文档、图片、视频、音乐等\n支持断点续传和秒传，提高上传效率\n支持分享链接和密码保护，方便与他人协作\n支持WebDAV协议，可以在各种设备上挂载云盘\n支持自定义域名和主题，可以打造个性化的云盘界面\n\n如果对cloudreve感兴趣，可以访问官网https://cloudreve.org/ 了解更多信息，或者直接下按我下面的方法，使用Docker安装\n1.创建安装目录sudo -i\nmkdir -p &#x2F;root&#x2F;data&#x2F;docker_data&#x2F;cloudreve\ncd /root/data/docker_data/cloudreve\nmkdir &#123;cloudreve,data&#125;\ncd cloudreve\nmkdir &#123;avatar,uploads&#125;\ntouch &#123;conf.ini,cloudreve.db&#125;\ncd /root/data/docker_data/cloudreve\nvim docker-compose.yml\n\n2.Docker-compose.yaml文件配置version: &quot;3.8&quot;services:  cloudreve:    container_name: cloudreve    image: cloudreve/cloudreve:latest    restart: unless-stopped    ports:      - &quot;5212:5212&quot;            # 冒号左边的 5212 可以换成主机未被占用的端口    volumes:      - temp_data:/data      - ./cloudreve/uploads:/cloudreve/uploads        # 冒号左边的这个可以换成你自己服务器的路径      - ./cloudreve/conf.ini:/cloudreve/conf.ini      # 冒号左边的这个可以换成你自己服务器的路径      - ./cloudreve/cloudreve.db:/cloudreve/cloudreve.db  # 冒号左边的这个可以换成你自己服务器的路径      - ./cloudreve/avatar:/cloudreve/avatar    depends_on:      - aria2  aria2:    container_name: aria2    image: ddsderek/aria2-pro    restart: unless-stopped    environment:      - RPC_SECRET=your_aria_rpc_token  # 注意修改一下这个密钥      - RPC_PORT=6800      - DOWNLOAD_DIR=/data      - PUID=0      - PGID=0      - UMASK_SET=022      - TZ=Asia/Shanghai    volumes:      - ./aria2/config:/config    # 冒号左边的这个可以换成你自己服务器的路径      - temp_data:/datavolumes:  temp_data:    driver: local    driver_opts:      type: none      device: $PWD/data      o: bind\n\n3.拉取Docker和生成管理员用户名密码docker-compose up -d \n\ndocker-compose logs\n\n4.打开防火墙\n5212 确定即可（如果你在dockercompose文件里换了8081，这边就需要填8081，以此类推）\n\n输入 http://ip:5212 访问了。\n\n\n5.更新Dockercd /root/data/docker_data/cloudreve\ndocker-compose down \ncp -r /root/data/docker_data/cloudreve /root/data/docker_data/cloudreve.archive  # 万事先备份，以防万一\ndocker-compose pull\ndocker-compose up -d \ndocker image prune\n\n出现下面提示，直接输入：yWARNING! This will remove all dangling images.Are you sure you want to continue? [y/N] \n\n6.卸载cd /root/data/docker_data/cloudreve\ndocker-compose down   # 停止容器，此时不会删除映射到本地的数据\ncd ~\nrm -rf /root/data/docker_data/cloudreve  # 完全删除映射到本地的数据\n7.离线下载配置\n8.webdav配置\n参考文件感谢 咕咕鸽 折腾起来！\n","categories":["VPS"],"tags":["Docker","Linux","VPS","Cloud"]},{"title":"Github 部署 Hexo","url":"/2023/06/04/Github-%E9%83%A8%E7%BD%B2-Hexo/","content":"你有没有想过自己搭建一个博客，分享你的知识和经验，或者记录你的生活和感想？如果你觉得这很麻烦，那么你一定要试试hexo，一个简单而强大的静态博客框架。hexo可以让你用markdown语法写文章，然后快速生成静态网页，部署到GitHub Pages或者其他平台上。hexo还有很多优秀的主题和插件，可以让你的博客更美观和个性化。hexo是一个开源的项目，有着活跃的社区和完善的文档，你可以随时找到你需要的帮助和资源。不管你是一个程序员，还是一个爱好者，hexo都能让你轻松拥有一个属于自己的博客。\n\n后面的内容在首页不显示，只显示到这里\nGithub博客申请创建部署目录仓库按照官方说明的使用规则，如果使用GitHub Pages进行网站部署的话，所建仓库必须要取名为“GitHub用户名.github.io”。因为我的GitHub用户名为justincnn，所以我的这个仓库应取名为“justincnn.github.io”。\n在GitHub官网创建repository\n创建页面：\n\n在上图所示的“Repository name”方框中填入仓库名称；\n勾选“Add a README file”；\n点击“Create repository”。即可完成该仓库的创建（简单起见，其余所有内容均保持默认）。\n\n注意：一定要勾选“Add a README file”，不然后面会看不到GitHub Pages的域名和部署分支\nGitHub Pages设置该仓库创建成功后，点击Settings，将所进入的网页至Pages\n\n致此，我们已经创建了属于自己的github博客空间：justincnn.github.io\n本地环境搭建软件准备\n安装Git环境\nbrew install git\n\n安装Node.js环境\nbrew install node.js\n一般在安装Node.js的同时，npm也会被一起安装,如果没有安装，请继续：\nbrew install npm\n\n安装Hexo\n\n\n在终端执行：\nnpm install hexo-cli -g\n\n创建Hexo源码文件夹进入自己博客本地目录，执行：\nhexo init &lt;hexo源码文件夹&gt;\n\n&lt;hexo源码文件夹&gt;命名为&lt;GitHub用户名.github.io&gt;,与GitHub仓库名保持一致\n安装依赖项进入hexo源码文件夹后，执行：\nnpm install\n\n安装一键部署插件进入hexo源码文件夹后，执行:\nnpm install hexo-deployer-git –save\n\n运行验证启动Hexo服务器hexo server -o\n\n博客网站的允许地址为http://localhost:4000；\n如果要停止运行，按下Ctrl+C即可。\n\n部署至Github本地文件修改打开根目录下面的 _config.yml 文件，并滚动到文件最后，可以看到如下图所示内容：\n# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy:  type: &#x27;git&#x27;  repo: git@github.com:justincnn/justincnn.github.io.git  branch: main\nRepo地址获取如下：\n生成网页文件Hexo源码目录中已有的源码编译生成为静态网页文件：\nhexo generate\n部署到GitHub Pageshexo deploy\n这个时候访问justincnn.github.io，就是生成的博客地址。\n如果测试发现 GitHub Pages 还是没有任何变化，不要着急，等几分钟之后再次刷新即可。\n至此，我们就已经成功将本地的 Hexo 仓库部署到 GitHub 上了。\n参考文献感谢搭建个人博客网站教程@拿破仑940911\n","categories":["Blog"],"tags":["How to","Blog"]},{"title":"Host大法--小米电视去广告","url":"/2023/06/04/Host%E5%A4%A7%E6%B3%95-%E5%B0%8F%E7%B1%B3%E7%94%B5%E8%A7%86%E5%8E%BB%E5%B9%BF%E5%91%8A/","content":"小米的东西很好，但是广告很不好\n\n屏蔽小米电视广告\n屏蔽大部分小米电视自带程序升级\n屏蔽小米电视系统升级\n\n\n后面的内容在首页不显示，只显示到这里\nhost配置：# 米家app需要前两行,不用米家可以取消注释# 127.0.0.1 api.io.mi.com# 127.0.0.1 device.io.mi.com127.0.0.1 519332DA.rtc.youme.im127.0.0.1 ad.doubleclick.net127.0.0.1 ad.hpplay.cn127.0.0.1 ad.mi.com127.0.0.1 ad.xiaomi.com127.0.0.1 ad1.xiaomi.com127.0.0.1 adc.hpplay.cn127.0.0.1 adcdn.hpplay.cn127.0.0.1 adeng.hpplay.cn127.0.0.1 admaster.com.cn127.0.0.1 adv.sec.miui.com127.0.0.1 alert.kuyun.com127.0.0.1 alog.umeng.com127.0.0.1 android.bugly.qq.com127.0.0.1 api.ad.xiaomi.com127.0.0.1 api.cupid.ptqy.gitv.tv127.0.0.1 api.hpplay.com.cn127.0.0.1 appstore.cdn.pandora.xiaomi.com127.0.0.1 appstore.pandora.xiaomi.com127.0.0.1 assistant.pandora.xiaomi.com127.0.0.1 auth.api.gitv.tv127.0.0.1 b.netcheck.gallery.pandora.xiaomi.com127.0.0.1 broker.mqtt.pandora.xiaomi.com127.0.0.1 bss.pandora.xiaomi.com127.0.0.1 cdn.ad.xiaomi.com127.0.0.1 cdn.hpplay.com.cn127.0.0.1 cdn1.hpplay.cn127.0.0.1 cloud.hpplay.cn127.0.0.1 conf.hpplay.cn127.0.0.1 config.kuyun.com127.0.0.1 d1.xiaomi.com127.0.0.1 data.mistat.xiaomi.com127.0.0.1 de.pandora.xiaomi.com127.0.0.1 devicemgr.hpplay.cn127.0.0.1 dvb.pandora.xiaomi.com127.0.0.1 e.ad.xiaomi.com127.0.0.1 f1.market.mi-img.com127.0.0.1 f1.market.xiaomi.com127.0.0.1 f2.market.mi-img.com127.0.0.1 f2.market.xiaomi.com127.0.0.1 f3.market.mi-img.com127.0.0.1 f3.market.xiaomi.com127.0.0.1 f4.market.mi-img.com127.0.0.1 f4.market.xiaomi.com127.0.0.1 f5.market.mi-img.com127.0.0.1 f5.market.xiaomi.com127.0.0.1 file.xmpush.xiaomi.com127.0.0.1 fix.hpplay.cn127.0.0.1 ftp.hpplay.com.cn127.0.0.1 g.dtv.cn.miaozhan.com127.0.0.1 g.dtv.cn.miaozhen.com127.0.0.1 gallery.pandora.xiaomi.com127.0.0.1 gslb.hpplay.cn127.0.0.1 gvod.aiseejapp.atianqi.com127.0.0.1 h5.hpplay.com.cn127.0.0.1 hotupgrade.hpplay.cn127.0.0.1 hotupgrade.hpplay.cn127.0.0.1 hpplay.cdn.cibn.cc127.0.0.1 hub5btmain.sandai.net127.0.0.1 hub5emu.sandai.net127.0.0.1 image.hpplay.cn127.0.0.1 imdns.hpplay.cn127.0.0.1 jellyfish.pandora.xiaomi.com127.0.0.1 leboapi.hpplay.com.cn127.0.0.1 logonext.tv.kuyun.com127.0.0.1 market.xiaomi.com127.0.0.1 metok.sys.miui.com127.0.0.1 milink.pandora.xiaomi.com127.0.0.1 misc.in.duokanbox.com127.0.0.1 misc.pandora.xiaomi.com127.0.0.1 mishop.pandora.xiaomi.com127.0.0.1 mitv.tracking.miui.com127.0.0.1 new.api.ad.xiaomi.com127.0.0.1 o2o.api.xiaomi.com127.0.0.1 omgmta.play.aiseet.atianqi.com127.0.0.1 osfota.cdn.aliyun.com127.0.0.1 osupdateservice.yunos.com127.0.0.1 ota.cdn.pandora.xiaomi.com127.0.0.1 package.box.xiaomi.com127.0.0.1 package.cdn.pandora.xiaomi.com127.0.0.1 pandora.mi.com127.0.0.1 pin.hpplay.cn127.0.0.1 r.browser.miui.com127.0.0.1 redirect.pandora.xiaomi.com127.0.0.1 register.xmpush.xiaomi.com127.0.0.1 resolver.msg.xiaomi.net127.0.0.1 rp.hpplay.cn127.0.0.1 rp.hpplay.com.cn127.0.0.1 rps.hpplay.cn127.0.0.1 sdkauth.hpplay.cn127.0.0.1 sdkconfig.ad.xiaomi.com127.0.0.1 secure-chn.imrworldwide.com127.0.0.1 sl.hpplay.cn127.0.0.1 ssp.ad.xiaomi.com127.0.0.1 staging.ai.api.xiaomi.com127.0.0.1 starfish.pandora.xiaomi.com127.0.0.1 stat.pandora.xiaomi.com127.0.0.1 t1.a.market.xiaomi.com127.0.0.1 t2.a.market.xiaomi.com127.0.0.1 t3.a.market.xiaomi.com127.0.0.1 t4.a.market.xiaomi.com127.0.0.1 t5.a.market.xiaomi.com127.0.0.1 t7z.cupid.ptqy.gitv.tv127.0.0.1 tat.pandora.xiaomi.com127.0.0.1 test.ad.xiaomi.com127.0.0.1 test.new.api.ad.xiaomi.com127.0.0.1 tracking.miui.com127.0.0.1 tv.aiseet.atianqi.com127.0.0.1 tv.weixin.pandora.xiaomi.com127.0.0.1 tvapi.kuyun.com127.0.0.1 tvapp.hpplay.cn127.0.0.1 tvmanager.pandora.xiaomi.com127.0.0.1 tvmgr.pandora.xiaomi.com127.0.0.1 upgrade.mishop.pandora.xiaomi.com127.0.0.1 upgrade.xl9.xunlei.com127.0.0.1 userapi.hpplay.com.cn127.0.0.1 v.admaster.com.cn127.0.0.1 video.market.xiaomi.com127.0.0.1 vipauth.hpplay.cn127.0.0.1 vipsdkauth.hpplay.cn127.0.0.1 vv.play.aiseet.atianqi.com\n\n参考文献感谢liamliu108&#x2F;miTVhosts\n","categories":["Life Style"],"tags":["How to","Life Style"]},{"title":"一键增加VPS虚拟内存 SWAP","url":"/2023/06/04/%E4%B8%80%E9%94%AE%E5%A2%9E%E5%8A%A0VPS%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98-SWAP/","content":"很多人的VPS服务器由于内存太小，会导致很多进程被杀掉，这时候就需要我们添加Swap虚拟内存了，这里就整了个一键脚本方便懒人或小白使用。\n\n后面的内容在首页不显示，只显示到这里\n提示提示：脚本不支持OpenVZ架构，安装会自动退出\n查看现有swapfree -h\n\n命令wget https://raw.githubusercontent.com/zhucaidan/swap.sh/main/swap.sh &amp;&amp; bash swap.sh\n\n添加swap的时候填写纯数字，默认单位为M\n参考文献感谢Linux VPS一键添加&#x2F;删除Swap虚拟内存\n","categories":["VPS"],"tags":["Docker","Linux","How to","Script","Vps"]},{"title":"Hexo 更换主题","url":"/2023/06/04/Hexo-%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/","content":"Hexo除了可以自由部署外，吸引人的另外一点就是多样的个性化主题，有谁可以在21世纪对个性化产生抗性呢，接下来给大家演示下如何更换主题：\n\n后面的内容在首页不显示，只显示到这里\n安装主题到主题的 GitHub 主页下，复制地址\n\n进入博客根目录：输入命令： git clone 刚才复制的地址 themes/xxxx ，xxxx 是主题名例如：\ngit clone https://github.com/theme-next/hexo-theme-next.git themes/next\n或者：从 https://hexo.io/themes/ 下载 release 包，解压到博客根目录 themes/ 文件夹下\n使用主题修改博客根目录下的 _config.yml 文件，注释掉原来的 theme 并新增一句 theme: xxxx （注意冒号后面有空格）\n# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: keep\nxxxx 为博客根目录 themes/ 文件夹下，对应的主题文件夹名称。\n本地预览hexo clean\nhexo g\nhexo s\n\n部署Github主题hexo clean\nhexo g\nhexo d\n\n主题更新\n通过 NPM 安装最新版本 （推荐）进入博客根目录：npm install hexo-theme-keep@latest～～～- 通过 Git 更新到最新的 master 分支进入主题目录：\ngit pull\n\n\n### 参考文献\n感谢[Hexo 更换主题@v1coder](https://www.cnblogs.com/v1coder/p/16368938.html)\n\n","categories":["Blog"],"tags":["How to","Blog"]},{"title":"在Hexo博客中发布文章","url":"/2023/06/04/%E5%9C%A8Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/","content":"Hexo是一种稍微有点门槛，但是一上手就很香的博客编辑和发布工具，这里介绍下，如何发布文章\n\n后面的内容在首页不显示，只显示到这里\n新建文章1.在Hexo博客目录下，进入Git Bash命令窗口中，输入以下命令：\nhexo new &quot;在这里&quot;\n2.在博客目录下的&#x2F;source&#x2F;_posts&#x2F; 文件夹下，可以看到已经生成了标题为(在这里.md)的博客文件\n3.在（在这里.md）文件中编辑自己的博客文章即可。\n添加分类和标签1.在文件中设置tags和categories属性：\ntitle: 在这里date: 2018-08-02 11:41:10tags:- 博客           //多个标签可以这样添加- hexocategories: web前端\n\n本地测试、预览博客文章hexo s\n\n添加”全文阅读”按钮Option1:在文章任意你想添加的位置添加即可\n&lt;!--more--&gt;     \n比如：\n---title: 在这里date: 2018-08-02 11:41:10tags:- 博客- hexocategories: web前端---javascript是一门充满活力、简单易用的语言，又是一门具有许多复杂微妙技术的语言。即使是经验丰富的javascript开发者，如果没有认真学习的话，也无法真正理解它们，这就是javascript的矛盾之处。由于javascript不必理解就可以使用，因此通常来说很难真正理解语言本身，这就是我们面临的挑战。不满足于只是让代码正常工作，而是想要弄清楚为什么，勇于挑战这条崎岖颠簸的少有人走的路，拥抱整个javascript&lt;!--more--&gt;后面的内容在首页不显示，只显示到&lt;!--more--&gt;这里\n\nOption2:设置首页文章以摘要形式显示，打开主题配置文件，找到auto_excerpt进行修改：\nauto_excerpt:  enable: true  length: 150\n其中length代表显示摘要的截取字符长度。注：这两种方法，在博客首页显示的效果不一样，根据自己的需要，选择自己喜欢的方法\n在博文中添加图片Option1:\n\n在hexo目录下，安装插件：npm install hexo-asset-image --save\n在hexo\\source 目录下新建一个img文件夹，把图片放置在里面；\n在xxx.md文件中引用图片：![header]( img/header.jpg)\nOption2:\n在全局配置文件（hexo&#x2F;_config.yml)中将post_asset_folder设置为true；\n创建文章（在创建的时候，会在hexo&#x2F;source&#x2F;_post目录下，生成一个XXX.md文件和一个XXX的文件夹）：hexo new &quot;XXX&quot;\n把XXX这个博文需要展示的图片放在XXX文件夹目录下；\n在XXX.md文件中引入图片的方式：&#123;% asset_img example.jpg This is an example image %&#125;\n\n发布到Github上发表的文章在本地预览无误后，在 Git Bash 命令窗口执行以下命令：\nhexo clean &amp;&amp; hexo g &amp;&amp; hexo d\n\n\n\n","categories":["Blog"],"tags":["How to","Blog"]},{"title":"免费的消息推送渠道：telegram机器人token和ID生成","url":"/2023/06/04/%E5%85%8D%E8%B4%B9%E7%9A%84%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81%E6%B8%A0%E9%81%93%EF%BC%9Atelegram%E6%9C%BA%E5%99%A8%E4%BA%BAtoken%E5%92%8CID%E7%94%9F%E6%88%90/","content":"随着现在大家对于垃圾推送的抗拒，特别是国内一些手机厂和部分大厂app的垃圾推送。让推送开始慢慢变成一种贬义词。其实还在黑莓机的年代，推送是一种高端且舒服的信息及时获取渠道。\n虽然大厂的信息推送很垃圾，但是我们可以建立自己的消息推送渠道，出了bark外，推荐telegram的机器人服务。\n1.添加机器人生成工具@botfather\n\n2.生成推送机器人点击工具开始，输入名录：\n/newbot\n\n3.输入ID输入你自己需要的id，必须以bot结尾，比如telegram_bot\n4.获取token对于下面的token，需要保密 token: 1287833603:AAGmx9hQq6ViT3km0_77z8psBGqUKfdpSHY\n5.获取IDi 添加机器人为好友ii 在浏览器打开网址https://api.telegram.org/botXXX:YYYY/getUpdates\n将 XXX:YYYY 替换为您的机器人令牌，如：\nhttps://api.telegram.org/bot1287833603:AAGmx9hQq6ViT3km0_77z8psBGqUKfdpSHY/getUpdates\niii 查找ID “chat”:{“id”:-zzzzzzzzzz，-zzzzzzzzzz 是您的聊天 ID（带有负号）。\niv 测试curl -X POST &quot;https://api.telegram.org/botXXX:YYYY/sendMessage&quot; -d &quot;chat_id=-zzzzzzzzzz&amp;text=my sample text&quot;\n","categories":["APP"],"tags":["How to"]}]